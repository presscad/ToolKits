/* soapH.h
   Generated by gSOAP 2.8.19 from d:\Structure\!ClientServTemp\ClientServer.h

Copyright(C) 2000-2014, Robert van Engelen, Genivia Inc. All Rights Reserved.
The generated code is released under one of the following licenses:
GPL or Genivia's license for commercial use.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
*/

#ifndef soapH_H
#define soapH_H
#include "soapStub.h"
#ifndef WITH_NOIDREF

#ifdef __cplusplus
extern "C" {
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_markelement(struct soap*, const void*, int);

#ifdef __cplusplus
}
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_putindependent(struct soap*);
SOAP_FMAC3 int SOAP_FMAC4 soap_getindependent(struct soap*);
#endif

#ifdef __cplusplus
extern "C" {
#endif
SOAP_FMAC3 void *SOAP_FMAC4 soap_getelement(struct soap*, int*);
SOAP_FMAC3 int SOAP_FMAC4 soap_putelement(struct soap*, const void*, const char*, int, int);

#ifdef __cplusplus
}
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_ignore_element(struct soap*);

SOAP_FMAC3 const char ** SOAP_FMAC4 soap_faultcode(struct soap *soap);

SOAP_FMAC3 void * SOAP_FMAC4 soap_instantiate(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 int SOAP_FMAC4 soap_fdelete(struct soap_clist*);
SOAP_FMAC3 void* SOAP_FMAC4 soap_class_id_enter(struct soap*, const char*, void*, int, size_t, const char*, const char*);

#ifndef SOAP_TYPE_xsd__byte
#define SOAP_TYPE_xsd__byte (164)
#endif

#define soap_default_xsd__byte(soap, a) soap_default_byte(soap, a)

SOAP_FMAC3 int SOAP_FMAC4 soap_out_xsd__byte(struct soap*, const char*, int, const char *, const char*);
SOAP_FMAC3 char * SOAP_FMAC4 soap_in_xsd__byte(struct soap*, const char*, char *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_xsd__byte(struct soap*, const char *, const char*, const char*);

#ifndef soap_write_xsd__byte
#define soap_write_xsd__byte(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_xsd__byte(soap, data),0) || soap_put_xsd__byte(soap, data, "xsd:byte", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 char * SOAP_FMAC4 soap_get_xsd__byte(struct soap*, char *, const char*, const char*);

#ifndef soap_read_xsd__byte
#define soap_read_xsd__byte(soap, data) ( soap_begin_recv(soap) || !soap_get_xsd__byte(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_byte
#define SOAP_TYPE_byte (3)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_byte(struct soap*, char *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_byte(struct soap*, const char*, int, const char *, const char*);
SOAP_FMAC3 char * SOAP_FMAC4 soap_in_byte(struct soap*, const char*, char *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_byte(struct soap*, const char *, const char*, const char*);

#ifndef soap_write_byte
#define soap_write_byte(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_byte(soap, data),0) || soap_put_byte(soap, data, "byte", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 char * SOAP_FMAC4 soap_get_byte(struct soap*, char *, const char*, const char*);

#ifndef soap_read_byte
#define soap_read_byte(soap, data) ( soap_begin_recv(soap) || !soap_get_byte(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_int
#define SOAP_TYPE_int (1)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_int(struct soap*, int *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_int(struct soap*, const char*, int, const int *, const char*);
SOAP_FMAC3 int * SOAP_FMAC4 soap_in_int(struct soap*, const char*, int *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_int(struct soap*, const int *, const char*, const char*);

#ifndef soap_write_int
#define soap_write_int(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_int(soap, data),0) || soap_put_int(soap, data, "int", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 int * SOAP_FMAC4 soap_get_int(struct soap*, int *, const char*, const char*);

#ifndef soap_read_int
#define soap_read_int(soap, data) ( soap_begin_recv(soap) || !soap_get_int(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_xsd__unsignedByte
#define SOAP_TYPE_xsd__unsignedByte (165)
#endif

#define soap_default_xsd__unsignedByte(soap, a) soap_default_unsignedByte(soap, a)

SOAP_FMAC3 int SOAP_FMAC4 soap_out_xsd__unsignedByte(struct soap*, const char*, int, const unsigned char *, const char*);
SOAP_FMAC3 unsigned char * SOAP_FMAC4 soap_in_xsd__unsignedByte(struct soap*, const char*, unsigned char *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_xsd__unsignedByte(struct soap*, const unsigned char *, const char*, const char*);

#ifndef soap_write_xsd__unsignedByte
#define soap_write_xsd__unsignedByte(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_xsd__unsignedByte(soap, data),0) || soap_put_xsd__unsignedByte(soap, data, "xsd:unsignedByte", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 unsigned char * SOAP_FMAC4 soap_get_xsd__unsignedByte(struct soap*, unsigned char *, const char*, const char*);

#ifndef soap_read_xsd__unsignedByte
#define soap_read_xsd__unsignedByte(soap, data) ( soap_begin_recv(soap) || !soap_get_xsd__unsignedByte(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_unsignedByte
#define SOAP_TYPE_unsignedByte (9)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_unsignedByte(struct soap*, unsigned char *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_unsignedByte(struct soap*, const char*, int, const unsigned char *, const char*);
SOAP_FMAC3 unsigned char * SOAP_FMAC4 soap_in_unsignedByte(struct soap*, const char*, unsigned char *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_unsignedByte(struct soap*, const unsigned char *, const char*, const char*);

#ifndef soap_write_unsignedByte
#define soap_write_unsignedByte(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_unsignedByte(soap, data),0) || soap_put_unsignedByte(soap, data, "unsignedByte", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 unsigned char * SOAP_FMAC4 soap_get_unsignedByte(struct soap*, unsigned char *, const char*, const char*);

#ifndef soap_read_unsignedByte
#define soap_read_unsignedByte(soap, data) ( soap_begin_recv(soap) || !soap_get_unsignedByte(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_unsignedInt
#define SOAP_TYPE_unsignedInt (8)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_unsignedInt(struct soap*, unsigned int *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_unsignedInt(struct soap*, const char*, int, const unsigned int *, const char*);
SOAP_FMAC3 unsigned int * SOAP_FMAC4 soap_in_unsignedInt(struct soap*, const char*, unsigned int *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_unsignedInt(struct soap*, const unsigned int *, const char*, const char*);

#ifndef soap_write_unsignedInt
#define soap_write_unsignedInt(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_unsignedInt(soap, data),0) || soap_put_unsignedInt(soap, data, "unsignedInt", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 unsigned int * SOAP_FMAC4 soap_get_unsignedInt(struct soap*, unsigned int *, const char*, const char*);

#ifndef soap_read_unsignedInt
#define soap_read_unsignedInt(soap, data) ( soap_begin_recv(soap) || !soap_get_unsignedInt(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_time
#define SOAP_TYPE_time (202)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_time(struct soap*, time_t *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_time(struct soap*, const char*, int, const time_t *, const char*);
SOAP_FMAC3 time_t * SOAP_FMAC4 soap_in_time(struct soap*, const char*, time_t *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_time(struct soap*, const time_t *, const char*, const char*);

#ifndef soap_write_time
#define soap_write_time(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_time(soap, data),0) || soap_put_time(soap, data, "dateTime", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 time_t * SOAP_FMAC4 soap_get_time(struct soap*, time_t *, const char*, const char*);

#ifndef soap_read_time
#define soap_read_time(soap, data) ( soap_begin_recv(soap) || !soap_get_time(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_bool
#define SOAP_TYPE_bool (55)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_bool(struct soap*, bool *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_bool(struct soap*, const char*, int, const bool *, const char*);

SOAP_FMAC3S const char* SOAP_FMAC4S soap_bool2s(struct soap*, bool);
SOAP_FMAC3 bool * SOAP_FMAC4 soap_in_bool(struct soap*, const char*, bool *, const char*);

SOAP_FMAC3S int SOAP_FMAC4S soap_s2bool(struct soap*, const char*, bool *);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_bool(struct soap*, const bool *, const char*, const char*);

#ifndef soap_write_bool
#define soap_write_bool(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_bool(soap, data),0) || soap_put_bool(soap, data, "boolean", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 bool * SOAP_FMAC4 soap_get_bool(struct soap*, bool *, const char*, const char*);

#ifndef soap_read_bool
#define soap_read_bool(soap, data) ( soap_begin_recv(soap) || !soap_get_bool(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__VersionServ__SaveOrUpdateObjectsResponse
#define SOAP_TYPE__VersionServ__SaveOrUpdateObjectsResponse (199)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__VersionServ__SaveOrUpdateObjectsResponse(struct soap*, const char*, int, const _VersionServ__SaveOrUpdateObjectsResponse *, const char*);
SOAP_FMAC3 _VersionServ__SaveOrUpdateObjectsResponse * SOAP_FMAC4 soap_in__VersionServ__SaveOrUpdateObjectsResponse(struct soap*, const char*, _VersionServ__SaveOrUpdateObjectsResponse *, const char*);

#ifndef soap_write__VersionServ__SaveOrUpdateObjectsResponse
#define soap_write__VersionServ__SaveOrUpdateObjectsResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "VersionServ:SaveOrUpdateObjectsResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _VersionServ__SaveOrUpdateObjectsResponse * SOAP_FMAC4 soap_get__VersionServ__SaveOrUpdateObjectsResponse(struct soap*, _VersionServ__SaveOrUpdateObjectsResponse *, const char*, const char*);

#ifndef soap_read__VersionServ__SaveOrUpdateObjectsResponse
#define soap_read__VersionServ__SaveOrUpdateObjectsResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__VersionServ__SaveOrUpdateObjectsResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _VersionServ__SaveOrUpdateObjectsResponse * SOAP_FMAC2 soap_instantiate__VersionServ__SaveOrUpdateObjectsResponse(struct soap*, int, const char*, const char*, size_t*);

inline _VersionServ__SaveOrUpdateObjectsResponse * soap_new__VersionServ__SaveOrUpdateObjectsResponse(struct soap *soap, int n = -1) { return soap_instantiate__VersionServ__SaveOrUpdateObjectsResponse(soap, n, NULL, NULL, NULL); }

inline _VersionServ__SaveOrUpdateObjectsResponse * soap_new_req__VersionServ__SaveOrUpdateObjectsResponse(struct soap *soap) { _VersionServ__SaveOrUpdateObjectsResponse *_p = soap_instantiate__VersionServ__SaveOrUpdateObjectsResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _VersionServ__SaveOrUpdateObjectsResponse * soap_new_set__VersionServ__SaveOrUpdateObjectsResponse(struct soap *soap, char *SaveOrUpdateObjectsResult) { _VersionServ__SaveOrUpdateObjectsResponse *_p = soap_instantiate__VersionServ__SaveOrUpdateObjectsResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_VersionServ__SaveOrUpdateObjectsResponse::SaveOrUpdateObjectsResult = SaveOrUpdateObjectsResult; } return _p; }

inline void soap_delete__VersionServ__SaveOrUpdateObjectsResponse(struct soap *soap, _VersionServ__SaveOrUpdateObjectsResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__VersionServ__SaveOrUpdateObjectsResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__VersionServ__SaveOrUpdateObjects
#define SOAP_TYPE__VersionServ__SaveOrUpdateObjects (198)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__VersionServ__SaveOrUpdateObjects(struct soap*, const char*, int, const _VersionServ__SaveOrUpdateObjects *, const char*);
SOAP_FMAC3 _VersionServ__SaveOrUpdateObjects * SOAP_FMAC4 soap_in__VersionServ__SaveOrUpdateObjects(struct soap*, const char*, _VersionServ__SaveOrUpdateObjects *, const char*);

#ifndef soap_write__VersionServ__SaveOrUpdateObjects
#define soap_write__VersionServ__SaveOrUpdateObjects(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "VersionServ:SaveOrUpdateObjects", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _VersionServ__SaveOrUpdateObjects * SOAP_FMAC4 soap_get__VersionServ__SaveOrUpdateObjects(struct soap*, _VersionServ__SaveOrUpdateObjects *, const char*, const char*);

#ifndef soap_read__VersionServ__SaveOrUpdateObjects
#define soap_read__VersionServ__SaveOrUpdateObjects(soap, data) ( soap_begin_recv(soap) || !soap_get__VersionServ__SaveOrUpdateObjects(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _VersionServ__SaveOrUpdateObjects * SOAP_FMAC2 soap_instantiate__VersionServ__SaveOrUpdateObjects(struct soap*, int, const char*, const char*, size_t*);

inline _VersionServ__SaveOrUpdateObjects * soap_new__VersionServ__SaveOrUpdateObjects(struct soap *soap, int n = -1) { return soap_instantiate__VersionServ__SaveOrUpdateObjects(soap, n, NULL, NULL, NULL); }

inline _VersionServ__SaveOrUpdateObjects * soap_new_req__VersionServ__SaveOrUpdateObjects(struct soap *soap, int sessionId) { _VersionServ__SaveOrUpdateObjects *_p = soap_instantiate__VersionServ__SaveOrUpdateObjects(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_VersionServ__SaveOrUpdateObjects::sessionId = sessionId; } return _p; }

inline _VersionServ__SaveOrUpdateObjects * soap_new_set__VersionServ__SaveOrUpdateObjects(struct soap *soap, int sessionId, char *clsName, char *xmlformat, xsd__base64Binary *byteArr) { _VersionServ__SaveOrUpdateObjects *_p = soap_instantiate__VersionServ__SaveOrUpdateObjects(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_VersionServ__SaveOrUpdateObjects::sessionId = sessionId; _p->_VersionServ__SaveOrUpdateObjects::clsName = clsName; _p->_VersionServ__SaveOrUpdateObjects::xmlformat = xmlformat; _p->_VersionServ__SaveOrUpdateObjects::byteArr = byteArr; } return _p; }

inline void soap_delete__VersionServ__SaveOrUpdateObjects(struct soap *soap, _VersionServ__SaveOrUpdateObjects *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__VersionServ__SaveOrUpdateObjects(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__VersionServ__DownloadObjectsResponse
#define SOAP_TYPE__VersionServ__DownloadObjectsResponse (197)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__VersionServ__DownloadObjectsResponse(struct soap*, const char*, int, const _VersionServ__DownloadObjectsResponse *, const char*);
SOAP_FMAC3 _VersionServ__DownloadObjectsResponse * SOAP_FMAC4 soap_in__VersionServ__DownloadObjectsResponse(struct soap*, const char*, _VersionServ__DownloadObjectsResponse *, const char*);

#ifndef soap_write__VersionServ__DownloadObjectsResponse
#define soap_write__VersionServ__DownloadObjectsResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "VersionServ:DownloadObjectsResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _VersionServ__DownloadObjectsResponse * SOAP_FMAC4 soap_get__VersionServ__DownloadObjectsResponse(struct soap*, _VersionServ__DownloadObjectsResponse *, const char*, const char*);

#ifndef soap_read__VersionServ__DownloadObjectsResponse
#define soap_read__VersionServ__DownloadObjectsResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__VersionServ__DownloadObjectsResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _VersionServ__DownloadObjectsResponse * SOAP_FMAC2 soap_instantiate__VersionServ__DownloadObjectsResponse(struct soap*, int, const char*, const char*, size_t*);

inline _VersionServ__DownloadObjectsResponse * soap_new__VersionServ__DownloadObjectsResponse(struct soap *soap, int n = -1) { return soap_instantiate__VersionServ__DownloadObjectsResponse(soap, n, NULL, NULL, NULL); }

inline _VersionServ__DownloadObjectsResponse * soap_new_req__VersionServ__DownloadObjectsResponse(struct soap *soap) { _VersionServ__DownloadObjectsResponse *_p = soap_instantiate__VersionServ__DownloadObjectsResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _VersionServ__DownloadObjectsResponse * soap_new_set__VersionServ__DownloadObjectsResponse(struct soap *soap, xsd__base64Binary *DownloadObjectsResult) { _VersionServ__DownloadObjectsResponse *_p = soap_instantiate__VersionServ__DownloadObjectsResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_VersionServ__DownloadObjectsResponse::DownloadObjectsResult = DownloadObjectsResult; } return _p; }

inline void soap_delete__VersionServ__DownloadObjectsResponse(struct soap *soap, _VersionServ__DownloadObjectsResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__VersionServ__DownloadObjectsResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__VersionServ__DownloadObjects
#define SOAP_TYPE__VersionServ__DownloadObjects (196)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__VersionServ__DownloadObjects(struct soap*, const char*, int, const _VersionServ__DownloadObjects *, const char*);
SOAP_FMAC3 _VersionServ__DownloadObjects * SOAP_FMAC4 soap_in__VersionServ__DownloadObjects(struct soap*, const char*, _VersionServ__DownloadObjects *, const char*);

#ifndef soap_write__VersionServ__DownloadObjects
#define soap_write__VersionServ__DownloadObjects(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "VersionServ:DownloadObjects", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _VersionServ__DownloadObjects * SOAP_FMAC4 soap_get__VersionServ__DownloadObjects(struct soap*, _VersionServ__DownloadObjects *, const char*, const char*);

#ifndef soap_read__VersionServ__DownloadObjects
#define soap_read__VersionServ__DownloadObjects(soap, data) ( soap_begin_recv(soap) || !soap_get__VersionServ__DownloadObjects(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _VersionServ__DownloadObjects * SOAP_FMAC2 soap_instantiate__VersionServ__DownloadObjects(struct soap*, int, const char*, const char*, size_t*);

inline _VersionServ__DownloadObjects * soap_new__VersionServ__DownloadObjects(struct soap *soap, int n = -1) { return soap_instantiate__VersionServ__DownloadObjects(soap, n, NULL, NULL, NULL); }

inline _VersionServ__DownloadObjects * soap_new_req__VersionServ__DownloadObjects(struct soap *soap, int sessionId, unsigned int serialize) { _VersionServ__DownloadObjects *_p = soap_instantiate__VersionServ__DownloadObjects(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_VersionServ__DownloadObjects::sessionId = sessionId; _p->_VersionServ__DownloadObjects::serialize = serialize; } return _p; }

inline _VersionServ__DownloadObjects * soap_new_set__VersionServ__DownloadObjects(struct soap *soap, int sessionId, char *clsName, VersionServ__ArrayOfInt *idarr, unsigned int serialize) { _VersionServ__DownloadObjects *_p = soap_instantiate__VersionServ__DownloadObjects(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_VersionServ__DownloadObjects::sessionId = sessionId; _p->_VersionServ__DownloadObjects::clsName = clsName; _p->_VersionServ__DownloadObjects::idarr = idarr; _p->_VersionServ__DownloadObjects::serialize = serialize; } return _p; }

inline void soap_delete__VersionServ__DownloadObjects(struct soap *soap, _VersionServ__DownloadObjects *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__VersionServ__DownloadObjects(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__VersionServ__QueryObjectsResponse
#define SOAP_TYPE__VersionServ__QueryObjectsResponse (195)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__VersionServ__QueryObjectsResponse(struct soap*, const char*, int, const _VersionServ__QueryObjectsResponse *, const char*);
SOAP_FMAC3 _VersionServ__QueryObjectsResponse * SOAP_FMAC4 soap_in__VersionServ__QueryObjectsResponse(struct soap*, const char*, _VersionServ__QueryObjectsResponse *, const char*);

#ifndef soap_write__VersionServ__QueryObjectsResponse
#define soap_write__VersionServ__QueryObjectsResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "VersionServ:QueryObjectsResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _VersionServ__QueryObjectsResponse * SOAP_FMAC4 soap_get__VersionServ__QueryObjectsResponse(struct soap*, _VersionServ__QueryObjectsResponse *, const char*, const char*);

#ifndef soap_read__VersionServ__QueryObjectsResponse
#define soap_read__VersionServ__QueryObjectsResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__VersionServ__QueryObjectsResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _VersionServ__QueryObjectsResponse * SOAP_FMAC2 soap_instantiate__VersionServ__QueryObjectsResponse(struct soap*, int, const char*, const char*, size_t*);

inline _VersionServ__QueryObjectsResponse * soap_new__VersionServ__QueryObjectsResponse(struct soap *soap, int n = -1) { return soap_instantiate__VersionServ__QueryObjectsResponse(soap, n, NULL, NULL, NULL); }

inline _VersionServ__QueryObjectsResponse * soap_new_req__VersionServ__QueryObjectsResponse(struct soap *soap) { _VersionServ__QueryObjectsResponse *_p = soap_instantiate__VersionServ__QueryObjectsResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _VersionServ__QueryObjectsResponse * soap_new_set__VersionServ__QueryObjectsResponse(struct soap *soap, xsd__base64Binary *QueryObjectsResult) { _VersionServ__QueryObjectsResponse *_p = soap_instantiate__VersionServ__QueryObjectsResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_VersionServ__QueryObjectsResponse::QueryObjectsResult = QueryObjectsResult; } return _p; }

inline void soap_delete__VersionServ__QueryObjectsResponse(struct soap *soap, _VersionServ__QueryObjectsResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__VersionServ__QueryObjectsResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__VersionServ__QueryObjects
#define SOAP_TYPE__VersionServ__QueryObjects (194)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__VersionServ__QueryObjects(struct soap*, const char*, int, const _VersionServ__QueryObjects *, const char*);
SOAP_FMAC3 _VersionServ__QueryObjects * SOAP_FMAC4 soap_in__VersionServ__QueryObjects(struct soap*, const char*, _VersionServ__QueryObjects *, const char*);

#ifndef soap_write__VersionServ__QueryObjects
#define soap_write__VersionServ__QueryObjects(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "VersionServ:QueryObjects", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _VersionServ__QueryObjects * SOAP_FMAC4 soap_get__VersionServ__QueryObjects(struct soap*, _VersionServ__QueryObjects *, const char*, const char*);

#ifndef soap_read__VersionServ__QueryObjects
#define soap_read__VersionServ__QueryObjects(soap, data) ( soap_begin_recv(soap) || !soap_get__VersionServ__QueryObjects(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _VersionServ__QueryObjects * SOAP_FMAC2 soap_instantiate__VersionServ__QueryObjects(struct soap*, int, const char*, const char*, size_t*);

inline _VersionServ__QueryObjects * soap_new__VersionServ__QueryObjects(struct soap *soap, int n = -1) { return soap_instantiate__VersionServ__QueryObjects(soap, n, NULL, NULL, NULL); }

inline _VersionServ__QueryObjects * soap_new_req__VersionServ__QueryObjects(struct soap *soap, int sessionId) { _VersionServ__QueryObjects *_p = soap_instantiate__VersionServ__QueryObjects(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_VersionServ__QueryObjects::sessionId = sessionId; } return _p; }

inline _VersionServ__QueryObjects * soap_new_set__VersionServ__QueryObjects(struct soap *soap, int sessionId, char *clsName, char *xmlScope) { _VersionServ__QueryObjects *_p = soap_instantiate__VersionServ__QueryObjects(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_VersionServ__QueryObjects::sessionId = sessionId; _p->_VersionServ__QueryObjects::clsName = clsName; _p->_VersionServ__QueryObjects::xmlScope = xmlScope; } return _p; }

inline void soap_delete__VersionServ__QueryObjects(struct soap *soap, _VersionServ__QueryObjects *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__VersionServ__QueryObjects(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__VersionServ__GetFileHeaderResponse
#define SOAP_TYPE__VersionServ__GetFileHeaderResponse (193)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__VersionServ__GetFileHeaderResponse(struct soap*, const char*, int, const _VersionServ__GetFileHeaderResponse *, const char*);
SOAP_FMAC3 _VersionServ__GetFileHeaderResponse * SOAP_FMAC4 soap_in__VersionServ__GetFileHeaderResponse(struct soap*, const char*, _VersionServ__GetFileHeaderResponse *, const char*);

#ifndef soap_write__VersionServ__GetFileHeaderResponse
#define soap_write__VersionServ__GetFileHeaderResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "VersionServ:GetFileHeaderResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _VersionServ__GetFileHeaderResponse * SOAP_FMAC4 soap_get__VersionServ__GetFileHeaderResponse(struct soap*, _VersionServ__GetFileHeaderResponse *, const char*, const char*);

#ifndef soap_read__VersionServ__GetFileHeaderResponse
#define soap_read__VersionServ__GetFileHeaderResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__VersionServ__GetFileHeaderResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _VersionServ__GetFileHeaderResponse * SOAP_FMAC2 soap_instantiate__VersionServ__GetFileHeaderResponse(struct soap*, int, const char*, const char*, size_t*);

inline _VersionServ__GetFileHeaderResponse * soap_new__VersionServ__GetFileHeaderResponse(struct soap *soap, int n = -1) { return soap_instantiate__VersionServ__GetFileHeaderResponse(soap, n, NULL, NULL, NULL); }

inline _VersionServ__GetFileHeaderResponse * soap_new_req__VersionServ__GetFileHeaderResponse(struct soap *soap) { _VersionServ__GetFileHeaderResponse *_p = soap_instantiate__VersionServ__GetFileHeaderResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _VersionServ__GetFileHeaderResponse * soap_new_set__VersionServ__GetFileHeaderResponse(struct soap *soap, VersionServ__FileHeader *GetFileHeaderResult) { _VersionServ__GetFileHeaderResponse *_p = soap_instantiate__VersionServ__GetFileHeaderResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_VersionServ__GetFileHeaderResponse::GetFileHeaderResult = GetFileHeaderResult; } return _p; }

inline void soap_delete__VersionServ__GetFileHeaderResponse(struct soap *soap, _VersionServ__GetFileHeaderResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__VersionServ__GetFileHeaderResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__VersionServ__GetFileHeader
#define SOAP_TYPE__VersionServ__GetFileHeader (192)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__VersionServ__GetFileHeader(struct soap*, const char*, int, const _VersionServ__GetFileHeader *, const char*);
SOAP_FMAC3 _VersionServ__GetFileHeader * SOAP_FMAC4 soap_in__VersionServ__GetFileHeader(struct soap*, const char*, _VersionServ__GetFileHeader *, const char*);

#ifndef soap_write__VersionServ__GetFileHeader
#define soap_write__VersionServ__GetFileHeader(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "VersionServ:GetFileHeader", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _VersionServ__GetFileHeader * SOAP_FMAC4 soap_get__VersionServ__GetFileHeader(struct soap*, _VersionServ__GetFileHeader *, const char*, const char*);

#ifndef soap_read__VersionServ__GetFileHeader
#define soap_read__VersionServ__GetFileHeader(soap, data) ( soap_begin_recv(soap) || !soap_get__VersionServ__GetFileHeader(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _VersionServ__GetFileHeader * SOAP_FMAC2 soap_instantiate__VersionServ__GetFileHeader(struct soap*, int, const char*, const char*, size_t*);

inline _VersionServ__GetFileHeader * soap_new__VersionServ__GetFileHeader(struct soap *soap, int n = -1) { return soap_instantiate__VersionServ__GetFileHeader(soap, n, NULL, NULL, NULL); }

inline _VersionServ__GetFileHeader * soap_new_req__VersionServ__GetFileHeader(struct soap *soap, int downLoadItemId) { _VersionServ__GetFileHeader *_p = soap_instantiate__VersionServ__GetFileHeader(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_VersionServ__GetFileHeader::downLoadItemId = downLoadItemId; } return _p; }

inline _VersionServ__GetFileHeader * soap_new_set__VersionServ__GetFileHeader(struct soap *soap, int downLoadItemId) { _VersionServ__GetFileHeader *_p = soap_instantiate__VersionServ__GetFileHeader(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_VersionServ__GetFileHeader::downLoadItemId = downLoadItemId; } return _p; }

inline void soap_delete__VersionServ__GetFileHeader(struct soap *soap, _VersionServ__GetFileHeader *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__VersionServ__GetFileHeader(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__VersionServ__QueryDownLoadItemArrByProductIdResponse
#define SOAP_TYPE__VersionServ__QueryDownLoadItemArrByProductIdResponse (191)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__VersionServ__QueryDownLoadItemArrByProductIdResponse(struct soap*, const char*, int, const _VersionServ__QueryDownLoadItemArrByProductIdResponse *, const char*);
SOAP_FMAC3 _VersionServ__QueryDownLoadItemArrByProductIdResponse * SOAP_FMAC4 soap_in__VersionServ__QueryDownLoadItemArrByProductIdResponse(struct soap*, const char*, _VersionServ__QueryDownLoadItemArrByProductIdResponse *, const char*);

#ifndef soap_write__VersionServ__QueryDownLoadItemArrByProductIdResponse
#define soap_write__VersionServ__QueryDownLoadItemArrByProductIdResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "VersionServ:QueryDownLoadItemArrByProductIdResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _VersionServ__QueryDownLoadItemArrByProductIdResponse * SOAP_FMAC4 soap_get__VersionServ__QueryDownLoadItemArrByProductIdResponse(struct soap*, _VersionServ__QueryDownLoadItemArrByProductIdResponse *, const char*, const char*);

#ifndef soap_read__VersionServ__QueryDownLoadItemArrByProductIdResponse
#define soap_read__VersionServ__QueryDownLoadItemArrByProductIdResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__VersionServ__QueryDownLoadItemArrByProductIdResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _VersionServ__QueryDownLoadItemArrByProductIdResponse * SOAP_FMAC2 soap_instantiate__VersionServ__QueryDownLoadItemArrByProductIdResponse(struct soap*, int, const char*, const char*, size_t*);

inline _VersionServ__QueryDownLoadItemArrByProductIdResponse * soap_new__VersionServ__QueryDownLoadItemArrByProductIdResponse(struct soap *soap, int n = -1) { return soap_instantiate__VersionServ__QueryDownLoadItemArrByProductIdResponse(soap, n, NULL, NULL, NULL); }

inline _VersionServ__QueryDownLoadItemArrByProductIdResponse * soap_new_req__VersionServ__QueryDownLoadItemArrByProductIdResponse(struct soap *soap) { _VersionServ__QueryDownLoadItemArrByProductIdResponse *_p = soap_instantiate__VersionServ__QueryDownLoadItemArrByProductIdResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _VersionServ__QueryDownLoadItemArrByProductIdResponse * soap_new_set__VersionServ__QueryDownLoadItemArrByProductIdResponse(struct soap *soap, VersionServ__ArrayOfDownLoadItem *QueryDownLoadItemArrByProductIdResult) { _VersionServ__QueryDownLoadItemArrByProductIdResponse *_p = soap_instantiate__VersionServ__QueryDownLoadItemArrByProductIdResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_VersionServ__QueryDownLoadItemArrByProductIdResponse::QueryDownLoadItemArrByProductIdResult = QueryDownLoadItemArrByProductIdResult; } return _p; }

inline void soap_delete__VersionServ__QueryDownLoadItemArrByProductIdResponse(struct soap *soap, _VersionServ__QueryDownLoadItemArrByProductIdResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__VersionServ__QueryDownLoadItemArrByProductIdResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__VersionServ__QueryDownLoadItemArrByProductId
#define SOAP_TYPE__VersionServ__QueryDownLoadItemArrByProductId (190)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__VersionServ__QueryDownLoadItemArrByProductId(struct soap*, const char*, int, const _VersionServ__QueryDownLoadItemArrByProductId *, const char*);
SOAP_FMAC3 _VersionServ__QueryDownLoadItemArrByProductId * SOAP_FMAC4 soap_in__VersionServ__QueryDownLoadItemArrByProductId(struct soap*, const char*, _VersionServ__QueryDownLoadItemArrByProductId *, const char*);

#ifndef soap_write__VersionServ__QueryDownLoadItemArrByProductId
#define soap_write__VersionServ__QueryDownLoadItemArrByProductId(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "VersionServ:QueryDownLoadItemArrByProductId", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _VersionServ__QueryDownLoadItemArrByProductId * SOAP_FMAC4 soap_get__VersionServ__QueryDownLoadItemArrByProductId(struct soap*, _VersionServ__QueryDownLoadItemArrByProductId *, const char*, const char*);

#ifndef soap_read__VersionServ__QueryDownLoadItemArrByProductId
#define soap_read__VersionServ__QueryDownLoadItemArrByProductId(soap, data) ( soap_begin_recv(soap) || !soap_get__VersionServ__QueryDownLoadItemArrByProductId(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _VersionServ__QueryDownLoadItemArrByProductId * SOAP_FMAC2 soap_instantiate__VersionServ__QueryDownLoadItemArrByProductId(struct soap*, int, const char*, const char*, size_t*);

inline _VersionServ__QueryDownLoadItemArrByProductId * soap_new__VersionServ__QueryDownLoadItemArrByProductId(struct soap *soap, int n = -1) { return soap_instantiate__VersionServ__QueryDownLoadItemArrByProductId(soap, n, NULL, NULL, NULL); }

inline _VersionServ__QueryDownLoadItemArrByProductId * soap_new_req__VersionServ__QueryDownLoadItemArrByProductId(struct soap *soap, int productId) { _VersionServ__QueryDownLoadItemArrByProductId *_p = soap_instantiate__VersionServ__QueryDownLoadItemArrByProductId(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_VersionServ__QueryDownLoadItemArrByProductId::productId = productId; } return _p; }

inline _VersionServ__QueryDownLoadItemArrByProductId * soap_new_set__VersionServ__QueryDownLoadItemArrByProductId(struct soap *soap, char *dogNo, int productId) { _VersionServ__QueryDownLoadItemArrByProductId *_p = soap_instantiate__VersionServ__QueryDownLoadItemArrByProductId(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_VersionServ__QueryDownLoadItemArrByProductId::dogNo = dogNo; _p->_VersionServ__QueryDownLoadItemArrByProductId::productId = productId; } return _p; }

inline void soap_delete__VersionServ__QueryDownLoadItemArrByProductId(struct soap *soap, _VersionServ__QueryDownLoadItemArrByProductId *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__VersionServ__QueryDownLoadItemArrByProductId(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__VersionServ__GetDogAccessHistoryResponse
#define SOAP_TYPE__VersionServ__GetDogAccessHistoryResponse (189)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__VersionServ__GetDogAccessHistoryResponse(struct soap*, const char*, int, const _VersionServ__GetDogAccessHistoryResponse *, const char*);
SOAP_FMAC3 _VersionServ__GetDogAccessHistoryResponse * SOAP_FMAC4 soap_in__VersionServ__GetDogAccessHistoryResponse(struct soap*, const char*, _VersionServ__GetDogAccessHistoryResponse *, const char*);

#ifndef soap_write__VersionServ__GetDogAccessHistoryResponse
#define soap_write__VersionServ__GetDogAccessHistoryResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "VersionServ:GetDogAccessHistoryResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _VersionServ__GetDogAccessHistoryResponse * SOAP_FMAC4 soap_get__VersionServ__GetDogAccessHistoryResponse(struct soap*, _VersionServ__GetDogAccessHistoryResponse *, const char*, const char*);

#ifndef soap_read__VersionServ__GetDogAccessHistoryResponse
#define soap_read__VersionServ__GetDogAccessHistoryResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__VersionServ__GetDogAccessHistoryResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _VersionServ__GetDogAccessHistoryResponse * SOAP_FMAC2 soap_instantiate__VersionServ__GetDogAccessHistoryResponse(struct soap*, int, const char*, const char*, size_t*);

inline _VersionServ__GetDogAccessHistoryResponse * soap_new__VersionServ__GetDogAccessHistoryResponse(struct soap *soap, int n = -1) { return soap_instantiate__VersionServ__GetDogAccessHistoryResponse(soap, n, NULL, NULL, NULL); }

inline _VersionServ__GetDogAccessHistoryResponse * soap_new_req__VersionServ__GetDogAccessHistoryResponse(struct soap *soap) { _VersionServ__GetDogAccessHistoryResponse *_p = soap_instantiate__VersionServ__GetDogAccessHistoryResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _VersionServ__GetDogAccessHistoryResponse * soap_new_set__VersionServ__GetDogAccessHistoryResponse(struct soap *soap, VersionServ__DogAccessHistory *GetDogAccessHistoryResult) { _VersionServ__GetDogAccessHistoryResponse *_p = soap_instantiate__VersionServ__GetDogAccessHistoryResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_VersionServ__GetDogAccessHistoryResponse::GetDogAccessHistoryResult = GetDogAccessHistoryResult; } return _p; }

inline void soap_delete__VersionServ__GetDogAccessHistoryResponse(struct soap *soap, _VersionServ__GetDogAccessHistoryResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__VersionServ__GetDogAccessHistoryResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__VersionServ__GetDogAccessHistory
#define SOAP_TYPE__VersionServ__GetDogAccessHistory (188)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__VersionServ__GetDogAccessHistory(struct soap*, const char*, int, const _VersionServ__GetDogAccessHistory *, const char*);
SOAP_FMAC3 _VersionServ__GetDogAccessHistory * SOAP_FMAC4 soap_in__VersionServ__GetDogAccessHistory(struct soap*, const char*, _VersionServ__GetDogAccessHistory *, const char*);

#ifndef soap_write__VersionServ__GetDogAccessHistory
#define soap_write__VersionServ__GetDogAccessHistory(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "VersionServ:GetDogAccessHistory", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _VersionServ__GetDogAccessHistory * SOAP_FMAC4 soap_get__VersionServ__GetDogAccessHistory(struct soap*, _VersionServ__GetDogAccessHistory *, const char*, const char*);

#ifndef soap_read__VersionServ__GetDogAccessHistory
#define soap_read__VersionServ__GetDogAccessHistory(soap, data) ( soap_begin_recv(soap) || !soap_get__VersionServ__GetDogAccessHistory(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _VersionServ__GetDogAccessHistory * SOAP_FMAC2 soap_instantiate__VersionServ__GetDogAccessHistory(struct soap*, int, const char*, const char*, size_t*);

inline _VersionServ__GetDogAccessHistory * soap_new__VersionServ__GetDogAccessHistory(struct soap *soap, int n = -1) { return soap_instantiate__VersionServ__GetDogAccessHistory(soap, n, NULL, NULL, NULL); }

inline _VersionServ__GetDogAccessHistory * soap_new_req__VersionServ__GetDogAccessHistory(struct soap *soap) { _VersionServ__GetDogAccessHistory *_p = soap_instantiate__VersionServ__GetDogAccessHistory(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _VersionServ__GetDogAccessHistory * soap_new_set__VersionServ__GetDogAccessHistory(struct soap *soap) { _VersionServ__GetDogAccessHistory *_p = soap_instantiate__VersionServ__GetDogAccessHistory(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline void soap_delete__VersionServ__GetDogAccessHistory(struct soap *soap, _VersionServ__GetDogAccessHistory *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__VersionServ__GetDogAccessHistory(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__VersionServ__GetVersionReleaseNotesResponse
#define SOAP_TYPE__VersionServ__GetVersionReleaseNotesResponse (187)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__VersionServ__GetVersionReleaseNotesResponse(struct soap*, const char*, int, const _VersionServ__GetVersionReleaseNotesResponse *, const char*);
SOAP_FMAC3 _VersionServ__GetVersionReleaseNotesResponse * SOAP_FMAC4 soap_in__VersionServ__GetVersionReleaseNotesResponse(struct soap*, const char*, _VersionServ__GetVersionReleaseNotesResponse *, const char*);

#ifndef soap_write__VersionServ__GetVersionReleaseNotesResponse
#define soap_write__VersionServ__GetVersionReleaseNotesResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "VersionServ:GetVersionReleaseNotesResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _VersionServ__GetVersionReleaseNotesResponse * SOAP_FMAC4 soap_get__VersionServ__GetVersionReleaseNotesResponse(struct soap*, _VersionServ__GetVersionReleaseNotesResponse *, const char*, const char*);

#ifndef soap_read__VersionServ__GetVersionReleaseNotesResponse
#define soap_read__VersionServ__GetVersionReleaseNotesResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__VersionServ__GetVersionReleaseNotesResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _VersionServ__GetVersionReleaseNotesResponse * SOAP_FMAC2 soap_instantiate__VersionServ__GetVersionReleaseNotesResponse(struct soap*, int, const char*, const char*, size_t*);

inline _VersionServ__GetVersionReleaseNotesResponse * soap_new__VersionServ__GetVersionReleaseNotesResponse(struct soap *soap, int n = -1) { return soap_instantiate__VersionServ__GetVersionReleaseNotesResponse(soap, n, NULL, NULL, NULL); }

inline _VersionServ__GetVersionReleaseNotesResponse * soap_new_req__VersionServ__GetVersionReleaseNotesResponse(struct soap *soap) { _VersionServ__GetVersionReleaseNotesResponse *_p = soap_instantiate__VersionServ__GetVersionReleaseNotesResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _VersionServ__GetVersionReleaseNotesResponse * soap_new_set__VersionServ__GetVersionReleaseNotesResponse(struct soap *soap, VersionServ__ArrayOfVersionRevision *GetVersionReleaseNotesResult) { _VersionServ__GetVersionReleaseNotesResponse *_p = soap_instantiate__VersionServ__GetVersionReleaseNotesResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_VersionServ__GetVersionReleaseNotesResponse::GetVersionReleaseNotesResult = GetVersionReleaseNotesResult; } return _p; }

inline void soap_delete__VersionServ__GetVersionReleaseNotesResponse(struct soap *soap, _VersionServ__GetVersionReleaseNotesResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__VersionServ__GetVersionReleaseNotesResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__VersionServ__GetVersionReleaseNotes
#define SOAP_TYPE__VersionServ__GetVersionReleaseNotes (186)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__VersionServ__GetVersionReleaseNotes(struct soap*, const char*, int, const _VersionServ__GetVersionReleaseNotes *, const char*);
SOAP_FMAC3 _VersionServ__GetVersionReleaseNotes * SOAP_FMAC4 soap_in__VersionServ__GetVersionReleaseNotes(struct soap*, const char*, _VersionServ__GetVersionReleaseNotes *, const char*);

#ifndef soap_write__VersionServ__GetVersionReleaseNotes
#define soap_write__VersionServ__GetVersionReleaseNotes(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "VersionServ:GetVersionReleaseNotes", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _VersionServ__GetVersionReleaseNotes * SOAP_FMAC4 soap_get__VersionServ__GetVersionReleaseNotes(struct soap*, _VersionServ__GetVersionReleaseNotes *, const char*, const char*);

#ifndef soap_read__VersionServ__GetVersionReleaseNotes
#define soap_read__VersionServ__GetVersionReleaseNotes(soap, data) ( soap_begin_recv(soap) || !soap_get__VersionServ__GetVersionReleaseNotes(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _VersionServ__GetVersionReleaseNotes * SOAP_FMAC2 soap_instantiate__VersionServ__GetVersionReleaseNotes(struct soap*, int, const char*, const char*, size_t*);

inline _VersionServ__GetVersionReleaseNotes * soap_new__VersionServ__GetVersionReleaseNotes(struct soap *soap, int n = -1) { return soap_instantiate__VersionServ__GetVersionReleaseNotes(soap, n, NULL, NULL, NULL); }

inline _VersionServ__GetVersionReleaseNotes * soap_new_req__VersionServ__GetVersionReleaseNotes(struct soap *soap, unsigned int product_USCOREid, unsigned int uCurVersion) { _VersionServ__GetVersionReleaseNotes *_p = soap_instantiate__VersionServ__GetVersionReleaseNotes(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_VersionServ__GetVersionReleaseNotes::product_USCOREid = product_USCOREid; _p->_VersionServ__GetVersionReleaseNotes::uCurVersion = uCurVersion; } return _p; }

inline _VersionServ__GetVersionReleaseNotes * soap_new_set__VersionServ__GetVersionReleaseNotes(struct soap *soap, unsigned int product_USCOREid, unsigned int uCurVersion) { _VersionServ__GetVersionReleaseNotes *_p = soap_instantiate__VersionServ__GetVersionReleaseNotes(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_VersionServ__GetVersionReleaseNotes::product_USCOREid = product_USCOREid; _p->_VersionServ__GetVersionReleaseNotes::uCurVersion = uCurVersion; } return _p; }

inline void soap_delete__VersionServ__GetVersionReleaseNotes(struct soap *soap, _VersionServ__GetVersionReleaseNotes *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__VersionServ__GetVersionReleaseNotes(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__VersionServ__CompareVersionResponse
#define SOAP_TYPE__VersionServ__CompareVersionResponse (185)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__VersionServ__CompareVersionResponse(struct soap*, const char*, int, const _VersionServ__CompareVersionResponse *, const char*);
SOAP_FMAC3 _VersionServ__CompareVersionResponse * SOAP_FMAC4 soap_in__VersionServ__CompareVersionResponse(struct soap*, const char*, _VersionServ__CompareVersionResponse *, const char*);

#ifndef soap_write__VersionServ__CompareVersionResponse
#define soap_write__VersionServ__CompareVersionResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "VersionServ:CompareVersionResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _VersionServ__CompareVersionResponse * SOAP_FMAC4 soap_get__VersionServ__CompareVersionResponse(struct soap*, _VersionServ__CompareVersionResponse *, const char*, const char*);

#ifndef soap_read__VersionServ__CompareVersionResponse
#define soap_read__VersionServ__CompareVersionResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__VersionServ__CompareVersionResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _VersionServ__CompareVersionResponse * SOAP_FMAC2 soap_instantiate__VersionServ__CompareVersionResponse(struct soap*, int, const char*, const char*, size_t*);

inline _VersionServ__CompareVersionResponse * soap_new__VersionServ__CompareVersionResponse(struct soap *soap, int n = -1) { return soap_instantiate__VersionServ__CompareVersionResponse(soap, n, NULL, NULL, NULL); }

inline _VersionServ__CompareVersionResponse * soap_new_req__VersionServ__CompareVersionResponse(struct soap *soap) { _VersionServ__CompareVersionResponse *_p = soap_instantiate__VersionServ__CompareVersionResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _VersionServ__CompareVersionResponse * soap_new_set__VersionServ__CompareVersionResponse(struct soap *soap, VersionServ__ArrayOfVersionRevision *CompareVersionResult) { _VersionServ__CompareVersionResponse *_p = soap_instantiate__VersionServ__CompareVersionResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_VersionServ__CompareVersionResponse::CompareVersionResult = CompareVersionResult; } return _p; }

inline void soap_delete__VersionServ__CompareVersionResponse(struct soap *soap, _VersionServ__CompareVersionResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__VersionServ__CompareVersionResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__VersionServ__CompareVersion
#define SOAP_TYPE__VersionServ__CompareVersion (184)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__VersionServ__CompareVersion(struct soap*, const char*, int, const _VersionServ__CompareVersion *, const char*);
SOAP_FMAC3 _VersionServ__CompareVersion * SOAP_FMAC4 soap_in__VersionServ__CompareVersion(struct soap*, const char*, _VersionServ__CompareVersion *, const char*);

#ifndef soap_write__VersionServ__CompareVersion
#define soap_write__VersionServ__CompareVersion(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "VersionServ:CompareVersion", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _VersionServ__CompareVersion * SOAP_FMAC4 soap_get__VersionServ__CompareVersion(struct soap*, _VersionServ__CompareVersion *, const char*, const char*);

#ifndef soap_read__VersionServ__CompareVersion
#define soap_read__VersionServ__CompareVersion(soap, data) ( soap_begin_recv(soap) || !soap_get__VersionServ__CompareVersion(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _VersionServ__CompareVersion * SOAP_FMAC2 soap_instantiate__VersionServ__CompareVersion(struct soap*, int, const char*, const char*, size_t*);

inline _VersionServ__CompareVersion * soap_new__VersionServ__CompareVersion(struct soap *soap, int n = -1) { return soap_instantiate__VersionServ__CompareVersion(soap, n, NULL, NULL, NULL); }

inline _VersionServ__CompareVersion * soap_new_req__VersionServ__CompareVersion(struct soap *soap, int userId, unsigned int product_USCOREid, unsigned int uCurVersion, unsigned int uUpdateVersion, bool bLoadOnHasNew) { _VersionServ__CompareVersion *_p = soap_instantiate__VersionServ__CompareVersion(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_VersionServ__CompareVersion::userId = userId; _p->_VersionServ__CompareVersion::product_USCOREid = product_USCOREid; _p->_VersionServ__CompareVersion::uCurVersion = uCurVersion; _p->_VersionServ__CompareVersion::uUpdateVersion = uUpdateVersion; _p->_VersionServ__CompareVersion::bLoadOnHasNew = bLoadOnHasNew; } return _p; }

inline _VersionServ__CompareVersion * soap_new_set__VersionServ__CompareVersion(struct soap *soap, int userId, unsigned int product_USCOREid, unsigned int uCurVersion, unsigned int uUpdateVersion, bool bLoadOnHasNew) { _VersionServ__CompareVersion *_p = soap_instantiate__VersionServ__CompareVersion(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_VersionServ__CompareVersion::userId = userId; _p->_VersionServ__CompareVersion::product_USCOREid = product_USCOREid; _p->_VersionServ__CompareVersion::uCurVersion = uCurVersion; _p->_VersionServ__CompareVersion::uUpdateVersion = uUpdateVersion; _p->_VersionServ__CompareVersion::bLoadOnHasNew = bLoadOnHasNew; } return _p; }

inline void soap_delete__VersionServ__CompareVersion(struct soap *soap, _VersionServ__CompareVersion *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__VersionServ__CompareVersion(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__VersionServ__SetRevisionReadFlagResponse
#define SOAP_TYPE__VersionServ__SetRevisionReadFlagResponse (183)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__VersionServ__SetRevisionReadFlagResponse(struct soap*, const char*, int, const _VersionServ__SetRevisionReadFlagResponse *, const char*);
SOAP_FMAC3 _VersionServ__SetRevisionReadFlagResponse * SOAP_FMAC4 soap_in__VersionServ__SetRevisionReadFlagResponse(struct soap*, const char*, _VersionServ__SetRevisionReadFlagResponse *, const char*);

#ifndef soap_write__VersionServ__SetRevisionReadFlagResponse
#define soap_write__VersionServ__SetRevisionReadFlagResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "VersionServ:SetRevisionReadFlagResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _VersionServ__SetRevisionReadFlagResponse * SOAP_FMAC4 soap_get__VersionServ__SetRevisionReadFlagResponse(struct soap*, _VersionServ__SetRevisionReadFlagResponse *, const char*, const char*);

#ifndef soap_read__VersionServ__SetRevisionReadFlagResponse
#define soap_read__VersionServ__SetRevisionReadFlagResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__VersionServ__SetRevisionReadFlagResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _VersionServ__SetRevisionReadFlagResponse * SOAP_FMAC2 soap_instantiate__VersionServ__SetRevisionReadFlagResponse(struct soap*, int, const char*, const char*, size_t*);

inline _VersionServ__SetRevisionReadFlagResponse * soap_new__VersionServ__SetRevisionReadFlagResponse(struct soap *soap, int n = -1) { return soap_instantiate__VersionServ__SetRevisionReadFlagResponse(soap, n, NULL, NULL, NULL); }

inline _VersionServ__SetRevisionReadFlagResponse * soap_new_req__VersionServ__SetRevisionReadFlagResponse(struct soap *soap) { _VersionServ__SetRevisionReadFlagResponse *_p = soap_instantiate__VersionServ__SetRevisionReadFlagResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _VersionServ__SetRevisionReadFlagResponse * soap_new_set__VersionServ__SetRevisionReadFlagResponse(struct soap *soap) { _VersionServ__SetRevisionReadFlagResponse *_p = soap_instantiate__VersionServ__SetRevisionReadFlagResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline void soap_delete__VersionServ__SetRevisionReadFlagResponse(struct soap *soap, _VersionServ__SetRevisionReadFlagResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__VersionServ__SetRevisionReadFlagResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__VersionServ__SetRevisionReadFlag
#define SOAP_TYPE__VersionServ__SetRevisionReadFlag (182)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__VersionServ__SetRevisionReadFlag(struct soap*, const char*, int, const _VersionServ__SetRevisionReadFlag *, const char*);
SOAP_FMAC3 _VersionServ__SetRevisionReadFlag * SOAP_FMAC4 soap_in__VersionServ__SetRevisionReadFlag(struct soap*, const char*, _VersionServ__SetRevisionReadFlag *, const char*);

#ifndef soap_write__VersionServ__SetRevisionReadFlag
#define soap_write__VersionServ__SetRevisionReadFlag(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "VersionServ:SetRevisionReadFlag", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _VersionServ__SetRevisionReadFlag * SOAP_FMAC4 soap_get__VersionServ__SetRevisionReadFlag(struct soap*, _VersionServ__SetRevisionReadFlag *, const char*, const char*);

#ifndef soap_read__VersionServ__SetRevisionReadFlag
#define soap_read__VersionServ__SetRevisionReadFlag(soap, data) ( soap_begin_recv(soap) || !soap_get__VersionServ__SetRevisionReadFlag(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _VersionServ__SetRevisionReadFlag * SOAP_FMAC2 soap_instantiate__VersionServ__SetRevisionReadFlag(struct soap*, int, const char*, const char*, size_t*);

inline _VersionServ__SetRevisionReadFlag * soap_new__VersionServ__SetRevisionReadFlag(struct soap *soap, int n = -1) { return soap_instantiate__VersionServ__SetRevisionReadFlag(soap, n, NULL, NULL, NULL); }

inline _VersionServ__SetRevisionReadFlag * soap_new_req__VersionServ__SetRevisionReadFlag(struct soap *soap, int userId) { _VersionServ__SetRevisionReadFlag *_p = soap_instantiate__VersionServ__SetRevisionReadFlag(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_VersionServ__SetRevisionReadFlag::userId = userId; } return _p; }

inline _VersionServ__SetRevisionReadFlag * soap_new_set__VersionServ__SetRevisionReadFlag(struct soap *soap, int userId, VersionServ__ArrayOfInt *revisionIdArr) { _VersionServ__SetRevisionReadFlag *_p = soap_instantiate__VersionServ__SetRevisionReadFlag(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_VersionServ__SetRevisionReadFlag::userId = userId; _p->_VersionServ__SetRevisionReadFlag::revisionIdArr = revisionIdArr; } return _p; }

inline void soap_delete__VersionServ__SetRevisionReadFlag(struct soap *soap, _VersionServ__SetRevisionReadFlag *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__VersionServ__SetRevisionReadFlag(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__VersionServ__GetUpdateVerByCurVerResponse
#define SOAP_TYPE__VersionServ__GetUpdateVerByCurVerResponse (181)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__VersionServ__GetUpdateVerByCurVerResponse(struct soap*, const char*, int, const _VersionServ__GetUpdateVerByCurVerResponse *, const char*);
SOAP_FMAC3 _VersionServ__GetUpdateVerByCurVerResponse * SOAP_FMAC4 soap_in__VersionServ__GetUpdateVerByCurVerResponse(struct soap*, const char*, _VersionServ__GetUpdateVerByCurVerResponse *, const char*);

#ifndef soap_write__VersionServ__GetUpdateVerByCurVerResponse
#define soap_write__VersionServ__GetUpdateVerByCurVerResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "VersionServ:GetUpdateVerByCurVerResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _VersionServ__GetUpdateVerByCurVerResponse * SOAP_FMAC4 soap_get__VersionServ__GetUpdateVerByCurVerResponse(struct soap*, _VersionServ__GetUpdateVerByCurVerResponse *, const char*, const char*);

#ifndef soap_read__VersionServ__GetUpdateVerByCurVerResponse
#define soap_read__VersionServ__GetUpdateVerByCurVerResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__VersionServ__GetUpdateVerByCurVerResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _VersionServ__GetUpdateVerByCurVerResponse * SOAP_FMAC2 soap_instantiate__VersionServ__GetUpdateVerByCurVerResponse(struct soap*, int, const char*, const char*, size_t*);

inline _VersionServ__GetUpdateVerByCurVerResponse * soap_new__VersionServ__GetUpdateVerByCurVerResponse(struct soap *soap, int n = -1) { return soap_instantiate__VersionServ__GetUpdateVerByCurVerResponse(soap, n, NULL, NULL, NULL); }

inline _VersionServ__GetUpdateVerByCurVerResponse * soap_new_req__VersionServ__GetUpdateVerByCurVerResponse(struct soap *soap) { _VersionServ__GetUpdateVerByCurVerResponse *_p = soap_instantiate__VersionServ__GetUpdateVerByCurVerResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _VersionServ__GetUpdateVerByCurVerResponse * soap_new_set__VersionServ__GetUpdateVerByCurVerResponse(struct soap *soap, VersionServ__ArrayOfProductVersion *GetUpdateVerByCurVerResult) { _VersionServ__GetUpdateVerByCurVerResponse *_p = soap_instantiate__VersionServ__GetUpdateVerByCurVerResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_VersionServ__GetUpdateVerByCurVerResponse::GetUpdateVerByCurVerResult = GetUpdateVerByCurVerResult; } return _p; }

inline void soap_delete__VersionServ__GetUpdateVerByCurVerResponse(struct soap *soap, _VersionServ__GetUpdateVerByCurVerResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__VersionServ__GetUpdateVerByCurVerResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__VersionServ__GetUpdateVerByCurVer
#define SOAP_TYPE__VersionServ__GetUpdateVerByCurVer (180)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__VersionServ__GetUpdateVerByCurVer(struct soap*, const char*, int, const _VersionServ__GetUpdateVerByCurVer *, const char*);
SOAP_FMAC3 _VersionServ__GetUpdateVerByCurVer * SOAP_FMAC4 soap_in__VersionServ__GetUpdateVerByCurVer(struct soap*, const char*, _VersionServ__GetUpdateVerByCurVer *, const char*);

#ifndef soap_write__VersionServ__GetUpdateVerByCurVer
#define soap_write__VersionServ__GetUpdateVerByCurVer(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "VersionServ:GetUpdateVerByCurVer", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _VersionServ__GetUpdateVerByCurVer * SOAP_FMAC4 soap_get__VersionServ__GetUpdateVerByCurVer(struct soap*, _VersionServ__GetUpdateVerByCurVer *, const char*, const char*);

#ifndef soap_read__VersionServ__GetUpdateVerByCurVer
#define soap_read__VersionServ__GetUpdateVerByCurVer(soap, data) ( soap_begin_recv(soap) || !soap_get__VersionServ__GetUpdateVerByCurVer(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _VersionServ__GetUpdateVerByCurVer * SOAP_FMAC2 soap_instantiate__VersionServ__GetUpdateVerByCurVer(struct soap*, int, const char*, const char*, size_t*);

inline _VersionServ__GetUpdateVerByCurVer * soap_new__VersionServ__GetUpdateVerByCurVer(struct soap *soap, int n = -1) { return soap_instantiate__VersionServ__GetUpdateVerByCurVer(soap, n, NULL, NULL, NULL); }

inline _VersionServ__GetUpdateVerByCurVer * soap_new_req__VersionServ__GetUpdateVerByCurVer(struct soap *soap, unsigned int userId, unsigned int product_USCOREid, unsigned int uCurVersion) { _VersionServ__GetUpdateVerByCurVer *_p = soap_instantiate__VersionServ__GetUpdateVerByCurVer(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_VersionServ__GetUpdateVerByCurVer::userId = userId; _p->_VersionServ__GetUpdateVerByCurVer::product_USCOREid = product_USCOREid; _p->_VersionServ__GetUpdateVerByCurVer::uCurVersion = uCurVersion; } return _p; }

inline _VersionServ__GetUpdateVerByCurVer * soap_new_set__VersionServ__GetUpdateVerByCurVer(struct soap *soap, unsigned int userId, unsigned int product_USCOREid, unsigned int uCurVersion) { _VersionServ__GetUpdateVerByCurVer *_p = soap_instantiate__VersionServ__GetUpdateVerByCurVer(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_VersionServ__GetUpdateVerByCurVer::userId = userId; _p->_VersionServ__GetUpdateVerByCurVer::product_USCOREid = product_USCOREid; _p->_VersionServ__GetUpdateVerByCurVer::uCurVersion = uCurVersion; } return _p; }

inline void soap_delete__VersionServ__GetUpdateVerByCurVer(struct soap *soap, _VersionServ__GetUpdateVerByCurVer *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__VersionServ__GetUpdateVerByCurVer(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__VersionServ__LoginByByteArrResponse
#define SOAP_TYPE__VersionServ__LoginByByteArrResponse (179)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__VersionServ__LoginByByteArrResponse(struct soap*, const char*, int, const _VersionServ__LoginByByteArrResponse *, const char*);
SOAP_FMAC3 _VersionServ__LoginByByteArrResponse * SOAP_FMAC4 soap_in__VersionServ__LoginByByteArrResponse(struct soap*, const char*, _VersionServ__LoginByByteArrResponse *, const char*);

#ifndef soap_write__VersionServ__LoginByByteArrResponse
#define soap_write__VersionServ__LoginByByteArrResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "VersionServ:LoginByByteArrResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _VersionServ__LoginByByteArrResponse * SOAP_FMAC4 soap_get__VersionServ__LoginByByteArrResponse(struct soap*, _VersionServ__LoginByByteArrResponse *, const char*, const char*);

#ifndef soap_read__VersionServ__LoginByByteArrResponse
#define soap_read__VersionServ__LoginByByteArrResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__VersionServ__LoginByByteArrResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _VersionServ__LoginByByteArrResponse * SOAP_FMAC2 soap_instantiate__VersionServ__LoginByByteArrResponse(struct soap*, int, const char*, const char*, size_t*);

inline _VersionServ__LoginByByteArrResponse * soap_new__VersionServ__LoginByByteArrResponse(struct soap *soap, int n = -1) { return soap_instantiate__VersionServ__LoginByByteArrResponse(soap, n, NULL, NULL, NULL); }

inline _VersionServ__LoginByByteArrResponse * soap_new_req__VersionServ__LoginByByteArrResponse(struct soap *soap, unsigned int LoginByByteArrResult) { _VersionServ__LoginByByteArrResponse *_p = soap_instantiate__VersionServ__LoginByByteArrResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_VersionServ__LoginByByteArrResponse::LoginByByteArrResult = LoginByByteArrResult; } return _p; }

inline _VersionServ__LoginByByteArrResponse * soap_new_set__VersionServ__LoginByByteArrResponse(struct soap *soap, unsigned int LoginByByteArrResult) { _VersionServ__LoginByByteArrResponse *_p = soap_instantiate__VersionServ__LoginByByteArrResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_VersionServ__LoginByByteArrResponse::LoginByByteArrResult = LoginByByteArrResult; } return _p; }

inline void soap_delete__VersionServ__LoginByByteArrResponse(struct soap *soap, _VersionServ__LoginByByteArrResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__VersionServ__LoginByByteArrResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__VersionServ__LoginByByteArr
#define SOAP_TYPE__VersionServ__LoginByByteArr (178)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__VersionServ__LoginByByteArr(struct soap*, const char*, int, const _VersionServ__LoginByByteArr *, const char*);
SOAP_FMAC3 _VersionServ__LoginByByteArr * SOAP_FMAC4 soap_in__VersionServ__LoginByByteArr(struct soap*, const char*, _VersionServ__LoginByByteArr *, const char*);

#ifndef soap_write__VersionServ__LoginByByteArr
#define soap_write__VersionServ__LoginByByteArr(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "VersionServ:LoginByByteArr", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _VersionServ__LoginByByteArr * SOAP_FMAC4 soap_get__VersionServ__LoginByByteArr(struct soap*, _VersionServ__LoginByByteArr *, const char*, const char*);

#ifndef soap_read__VersionServ__LoginByByteArr
#define soap_read__VersionServ__LoginByByteArr(soap, data) ( soap_begin_recv(soap) || !soap_get__VersionServ__LoginByByteArr(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _VersionServ__LoginByByteArr * SOAP_FMAC2 soap_instantiate__VersionServ__LoginByByteArr(struct soap*, int, const char*, const char*, size_t*);

inline _VersionServ__LoginByByteArr * soap_new__VersionServ__LoginByByteArr(struct soap *soap, int n = -1) { return soap_instantiate__VersionServ__LoginByByteArr(soap, n, NULL, NULL, NULL); }

inline _VersionServ__LoginByByteArr * soap_new_req__VersionServ__LoginByByteArr(struct soap *soap) { _VersionServ__LoginByByteArr *_p = soap_instantiate__VersionServ__LoginByByteArr(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _VersionServ__LoginByByteArr * soap_new_set__VersionServ__LoginByByteArr(struct soap *soap, xsd__base64Binary *userInfo) { _VersionServ__LoginByByteArr *_p = soap_instantiate__VersionServ__LoginByByteArr(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_VersionServ__LoginByByteArr::userInfo = userInfo; } return _p; }

inline void soap_delete__VersionServ__LoginByByteArr(struct soap *soap, _VersionServ__LoginByByteArr *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__VersionServ__LoginByByteArr(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__VersionServ__LoginResponse
#define SOAP_TYPE__VersionServ__LoginResponse (177)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__VersionServ__LoginResponse(struct soap*, const char*, int, const _VersionServ__LoginResponse *, const char*);
SOAP_FMAC3 _VersionServ__LoginResponse * SOAP_FMAC4 soap_in__VersionServ__LoginResponse(struct soap*, const char*, _VersionServ__LoginResponse *, const char*);

#ifndef soap_write__VersionServ__LoginResponse
#define soap_write__VersionServ__LoginResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "VersionServ:LoginResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _VersionServ__LoginResponse * SOAP_FMAC4 soap_get__VersionServ__LoginResponse(struct soap*, _VersionServ__LoginResponse *, const char*, const char*);

#ifndef soap_read__VersionServ__LoginResponse
#define soap_read__VersionServ__LoginResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__VersionServ__LoginResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _VersionServ__LoginResponse * SOAP_FMAC2 soap_instantiate__VersionServ__LoginResponse(struct soap*, int, const char*, const char*, size_t*);

inline _VersionServ__LoginResponse * soap_new__VersionServ__LoginResponse(struct soap *soap, int n = -1) { return soap_instantiate__VersionServ__LoginResponse(soap, n, NULL, NULL, NULL); }

inline _VersionServ__LoginResponse * soap_new_req__VersionServ__LoginResponse(struct soap *soap, unsigned int LoginResult) { _VersionServ__LoginResponse *_p = soap_instantiate__VersionServ__LoginResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_VersionServ__LoginResponse::LoginResult = LoginResult; } return _p; }

inline _VersionServ__LoginResponse * soap_new_set__VersionServ__LoginResponse(struct soap *soap, unsigned int LoginResult) { _VersionServ__LoginResponse *_p = soap_instantiate__VersionServ__LoginResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_VersionServ__LoginResponse::LoginResult = LoginResult; } return _p; }

inline void soap_delete__VersionServ__LoginResponse(struct soap *soap, _VersionServ__LoginResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__VersionServ__LoginResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__VersionServ__Login
#define SOAP_TYPE__VersionServ__Login (176)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__VersionServ__Login(struct soap*, const char*, int, const _VersionServ__Login *, const char*);
SOAP_FMAC3 _VersionServ__Login * SOAP_FMAC4 soap_in__VersionServ__Login(struct soap*, const char*, _VersionServ__Login *, const char*);

#ifndef soap_write__VersionServ__Login
#define soap_write__VersionServ__Login(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "VersionServ:Login", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _VersionServ__Login * SOAP_FMAC4 soap_get__VersionServ__Login(struct soap*, _VersionServ__Login *, const char*, const char*);

#ifndef soap_read__VersionServ__Login
#define soap_read__VersionServ__Login(soap, data) ( soap_begin_recv(soap) || !soap_get__VersionServ__Login(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _VersionServ__Login * SOAP_FMAC2 soap_instantiate__VersionServ__Login(struct soap*, int, const char*, const char*, size_t*);

inline _VersionServ__Login * soap_new__VersionServ__Login(struct soap *soap, int n = -1) { return soap_instantiate__VersionServ__Login(soap, n, NULL, NULL, NULL); }

inline _VersionServ__Login * soap_new_req__VersionServ__Login(struct soap *soap, unsigned int dogSerial) { _VersionServ__Login *_p = soap_instantiate__VersionServ__Login(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_VersionServ__Login::dogSerial = dogSerial; } return _p; }

inline _VersionServ__Login * soap_new_set__VersionServ__Login(struct soap *soap, xsd__base64Binary *computerMac, xsd__base64Binary *computerIp, char *computerName, unsigned int dogSerial) { _VersionServ__Login *_p = soap_instantiate__VersionServ__Login(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_VersionServ__Login::computerMac = computerMac; _p->_VersionServ__Login::computerIp = computerIp; _p->_VersionServ__Login::computerName = computerName; _p->_VersionServ__Login::dogSerial = dogSerial; } return _p; }

inline void soap_delete__VersionServ__Login(struct soap *soap, _VersionServ__Login *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__VersionServ__Login(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_VersionServ__FileHeader
#define SOAP_TYPE_VersionServ__FileHeader (175)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_VersionServ__FileHeader(struct soap*, const char*, int, const VersionServ__FileHeader *, const char*);
SOAP_FMAC3 VersionServ__FileHeader * SOAP_FMAC4 soap_in_VersionServ__FileHeader(struct soap*, const char*, VersionServ__FileHeader *, const char*);

#ifndef soap_write_VersionServ__FileHeader
#define soap_write_VersionServ__FileHeader(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "VersionServ:FileHeader", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 VersionServ__FileHeader * SOAP_FMAC4 soap_get_VersionServ__FileHeader(struct soap*, VersionServ__FileHeader *, const char*, const char*);

#ifndef soap_read_VersionServ__FileHeader
#define soap_read_VersionServ__FileHeader(soap, data) ( soap_begin_recv(soap) || !soap_get_VersionServ__FileHeader(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 VersionServ__FileHeader * SOAP_FMAC2 soap_instantiate_VersionServ__FileHeader(struct soap*, int, const char*, const char*, size_t*);

inline VersionServ__FileHeader * soap_new_VersionServ__FileHeader(struct soap *soap, int n = -1) { return soap_instantiate_VersionServ__FileHeader(soap, n, NULL, NULL, NULL); }

inline VersionServ__FileHeader * soap_new_req_VersionServ__FileHeader(struct soap *soap, int fileType, int hostId, int ownerId, time_t occurDateValue, int serialNo, int id1) { VersionServ__FileHeader *_p = soap_instantiate_VersionServ__FileHeader(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->VersionServ__FileHeader::fileType = fileType; _p->VersionServ__FileHeader::hostId = hostId; _p->VersionServ__FileHeader::ownerId = ownerId; _p->VersionServ__FileHeader::occurDateValue = occurDateValue; _p->VersionServ__FileHeader::serialNo = serialNo; _p->VersionServ__ObjectV::id = id1; } return _p; }

inline VersionServ__FileHeader * soap_new_set_VersionServ__FileHeader(struct soap *soap, char *filePath, int fileType, char *fileName, char *fileNameServer, int hostId, int ownerId, xsd__base64Binary *matter, char *description, time_t occurDateValue, int serialNo, int id1, char *tag1) { VersionServ__FileHeader *_p = soap_instantiate_VersionServ__FileHeader(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->VersionServ__FileHeader::filePath = filePath; _p->VersionServ__FileHeader::fileType = fileType; _p->VersionServ__FileHeader::fileName = fileName; _p->VersionServ__FileHeader::fileNameServer = fileNameServer; _p->VersionServ__FileHeader::hostId = hostId; _p->VersionServ__FileHeader::ownerId = ownerId; _p->VersionServ__FileHeader::matter = matter; _p->VersionServ__FileHeader::description = description; _p->VersionServ__FileHeader::occurDateValue = occurDateValue; _p->VersionServ__FileHeader::serialNo = serialNo; _p->VersionServ__ObjectV::id = id1; _p->VersionServ__ObjectV::tag = tag1; } return _p; }

inline void soap_delete_VersionServ__FileHeader(struct soap *soap, VersionServ__FileHeader *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_VersionServ__FileHeader(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_VersionServ__DownLoadItem
#define SOAP_TYPE_VersionServ__DownLoadItem (174)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_VersionServ__DownLoadItem(struct soap*, const char*, int, const VersionServ__DownLoadItem *, const char*);
SOAP_FMAC3 VersionServ__DownLoadItem * SOAP_FMAC4 soap_in_VersionServ__DownLoadItem(struct soap*, const char*, VersionServ__DownLoadItem *, const char*);

#ifndef soap_write_VersionServ__DownLoadItem
#define soap_write_VersionServ__DownLoadItem(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "VersionServ:DownLoadItem", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 VersionServ__DownLoadItem * SOAP_FMAC4 soap_get_VersionServ__DownLoadItem(struct soap*, VersionServ__DownLoadItem *, const char*, const char*);

#ifndef soap_read_VersionServ__DownLoadItem
#define soap_read_VersionServ__DownLoadItem(soap, data) ( soap_begin_recv(soap) || !soap_get_VersionServ__DownLoadItem(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 VersionServ__DownLoadItem * SOAP_FMAC2 soap_instantiate_VersionServ__DownLoadItem(struct soap*, int, const char*, const char*, size_t*);

inline VersionServ__DownLoadItem * soap_new_VersionServ__DownLoadItem(struct soap *soap, int n = -1) { return soap_instantiate_VersionServ__DownLoadItem(soap, n, NULL, NULL, NULL); }

inline VersionServ__DownLoadItem * soap_new_req_VersionServ__DownLoadItem(struct soap *soap, time_t updateDate, int serialno, int productId, int id1) { VersionServ__DownLoadItem *_p = soap_instantiate_VersionServ__DownLoadItem(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->VersionServ__DownLoadItem::updateDate = updateDate; _p->VersionServ__DownLoadItem::serialno = serialno; _p->VersionServ__DownLoadItem::productId = productId; _p->VersionServ__ObjectV::id = id1; } return _p; }

inline VersionServ__DownLoadItem * soap_new_set_VersionServ__DownLoadItem(struct soap *soap, char *title, time_t updateDate, char *notes, int serialno, char *occurDateValue, char *fileName, int productId, int id1, char *tag1) { VersionServ__DownLoadItem *_p = soap_instantiate_VersionServ__DownLoadItem(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->VersionServ__DownLoadItem::title = title; _p->VersionServ__DownLoadItem::updateDate = updateDate; _p->VersionServ__DownLoadItem::notes = notes; _p->VersionServ__DownLoadItem::serialno = serialno; _p->VersionServ__DownLoadItem::occurDateValue = occurDateValue; _p->VersionServ__DownLoadItem::fileName = fileName; _p->VersionServ__DownLoadItem::productId = productId; _p->VersionServ__ObjectV::id = id1; _p->VersionServ__ObjectV::tag = tag1; } return _p; }

inline void soap_delete_VersionServ__DownLoadItem(struct soap *soap, VersionServ__DownLoadItem *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_VersionServ__DownLoadItem(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_VersionServ__ArrayOfDownLoadItem
#define SOAP_TYPE_VersionServ__ArrayOfDownLoadItem (173)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_VersionServ__ArrayOfDownLoadItem(struct soap*, const char*, int, const VersionServ__ArrayOfDownLoadItem *, const char*);
SOAP_FMAC3 VersionServ__ArrayOfDownLoadItem * SOAP_FMAC4 soap_in_VersionServ__ArrayOfDownLoadItem(struct soap*, const char*, VersionServ__ArrayOfDownLoadItem *, const char*);

#ifndef soap_write_VersionServ__ArrayOfDownLoadItem
#define soap_write_VersionServ__ArrayOfDownLoadItem(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "VersionServ:ArrayOfDownLoadItem", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 VersionServ__ArrayOfDownLoadItem * SOAP_FMAC4 soap_get_VersionServ__ArrayOfDownLoadItem(struct soap*, VersionServ__ArrayOfDownLoadItem *, const char*, const char*);

#ifndef soap_read_VersionServ__ArrayOfDownLoadItem
#define soap_read_VersionServ__ArrayOfDownLoadItem(soap, data) ( soap_begin_recv(soap) || !soap_get_VersionServ__ArrayOfDownLoadItem(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 VersionServ__ArrayOfDownLoadItem * SOAP_FMAC2 soap_instantiate_VersionServ__ArrayOfDownLoadItem(struct soap*, int, const char*, const char*, size_t*);

inline VersionServ__ArrayOfDownLoadItem * soap_new_VersionServ__ArrayOfDownLoadItem(struct soap *soap, int n = -1) { return soap_instantiate_VersionServ__ArrayOfDownLoadItem(soap, n, NULL, NULL, NULL); }

inline VersionServ__ArrayOfDownLoadItem * soap_new_req_VersionServ__ArrayOfDownLoadItem(struct soap *soap, int __sizeDownLoadItem, VersionServ__DownLoadItem **DownLoadItem) { VersionServ__ArrayOfDownLoadItem *_p = soap_instantiate_VersionServ__ArrayOfDownLoadItem(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->VersionServ__ArrayOfDownLoadItem::__sizeDownLoadItem = __sizeDownLoadItem; _p->VersionServ__ArrayOfDownLoadItem::DownLoadItem = DownLoadItem; } return _p; }

inline VersionServ__ArrayOfDownLoadItem * soap_new_set_VersionServ__ArrayOfDownLoadItem(struct soap *soap, int __sizeDownLoadItem, VersionServ__DownLoadItem **DownLoadItem) { VersionServ__ArrayOfDownLoadItem *_p = soap_instantiate_VersionServ__ArrayOfDownLoadItem(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->VersionServ__ArrayOfDownLoadItem::__sizeDownLoadItem = __sizeDownLoadItem; _p->VersionServ__ArrayOfDownLoadItem::DownLoadItem = DownLoadItem; } return _p; }

inline void soap_delete_VersionServ__ArrayOfDownLoadItem(struct soap *soap, VersionServ__ArrayOfDownLoadItem *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_VersionServ__ArrayOfDownLoadItem(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_VersionServ__ObjectV
#define SOAP_TYPE_VersionServ__ObjectV (172)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_VersionServ__ObjectV(struct soap*, const char*, int, const VersionServ__ObjectV *, const char*);
SOAP_FMAC3 VersionServ__ObjectV * SOAP_FMAC4 soap_in_VersionServ__ObjectV(struct soap*, const char*, VersionServ__ObjectV *, const char*);

#ifndef soap_write_VersionServ__ObjectV
#define soap_write_VersionServ__ObjectV(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "VersionServ:ObjectV", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 VersionServ__ObjectV * SOAP_FMAC4 soap_get_VersionServ__ObjectV(struct soap*, VersionServ__ObjectV *, const char*, const char*);

#ifndef soap_read_VersionServ__ObjectV
#define soap_read_VersionServ__ObjectV(soap, data) ( soap_begin_recv(soap) || !soap_get_VersionServ__ObjectV(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 VersionServ__ObjectV * SOAP_FMAC2 soap_instantiate_VersionServ__ObjectV(struct soap*, int, const char*, const char*, size_t*);

inline VersionServ__ObjectV * soap_new_VersionServ__ObjectV(struct soap *soap, int n = -1) { return soap_instantiate_VersionServ__ObjectV(soap, n, NULL, NULL, NULL); }

inline VersionServ__ObjectV * soap_new_req_VersionServ__ObjectV(struct soap *soap, int id) { VersionServ__ObjectV *_p = soap_instantiate_VersionServ__ObjectV(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->VersionServ__ObjectV::id = id; } return _p; }

inline VersionServ__ObjectV * soap_new_set_VersionServ__ObjectV(struct soap *soap, int id, char *tag) { VersionServ__ObjectV *_p = soap_instantiate_VersionServ__ObjectV(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->VersionServ__ObjectV::id = id; _p->VersionServ__ObjectV::tag = tag; } return _p; }

inline void soap_delete_VersionServ__ObjectV(struct soap *soap, VersionServ__ObjectV *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_VersionServ__ObjectV(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_VersionServ__DogAccessHistory
#define SOAP_TYPE_VersionServ__DogAccessHistory (171)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_VersionServ__DogAccessHistory(struct soap*, const char*, int, const VersionServ__DogAccessHistory *, const char*);
SOAP_FMAC3 VersionServ__DogAccessHistory * SOAP_FMAC4 soap_in_VersionServ__DogAccessHistory(struct soap*, const char*, VersionServ__DogAccessHistory *, const char*);

#ifndef soap_write_VersionServ__DogAccessHistory
#define soap_write_VersionServ__DogAccessHistory(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "VersionServ:DogAccessHistory", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 VersionServ__DogAccessHistory * SOAP_FMAC4 soap_get_VersionServ__DogAccessHistory(struct soap*, VersionServ__DogAccessHistory *, const char*, const char*);

#ifndef soap_read_VersionServ__DogAccessHistory
#define soap_read_VersionServ__DogAccessHistory(soap, data) ( soap_begin_recv(soap) || !soap_get_VersionServ__DogAccessHistory(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 VersionServ__DogAccessHistory * SOAP_FMAC2 soap_instantiate_VersionServ__DogAccessHistory(struct soap*, int, const char*, const char*, size_t*);

inline VersionServ__DogAccessHistory * soap_new_VersionServ__DogAccessHistory(struct soap *soap, int n = -1) { return soap_instantiate_VersionServ__DogAccessHistory(soap, n, NULL, NULL, NULL); }

inline VersionServ__DogAccessHistory * soap_new_req_VersionServ__DogAccessHistory(struct soap *soap, int endUserId, int productId, int cycleSerial, int accessType, int accessOccurDate, int id1) { VersionServ__DogAccessHistory *_p = soap_instantiate_VersionServ__DogAccessHistory(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->VersionServ__DogAccessHistory::endUserId = endUserId; _p->VersionServ__DogAccessHistory::productId = productId; _p->VersionServ__DogAccessHistory::cycleSerial = cycleSerial; _p->VersionServ__DogAccessHistory::accessType = accessType; _p->VersionServ__DogAccessHistory::accessOccurDate = accessOccurDate; _p->VersionServ__ObjectV::id = id1; } return _p; }

inline VersionServ__DogAccessHistory * soap_new_set_VersionServ__DogAccessHistory(struct soap *soap, char *dogserial, int endUserId, int productId, int cycleSerial, int accessType, int accessOccurDate, int id1, char *tag1) { VersionServ__DogAccessHistory *_p = soap_instantiate_VersionServ__DogAccessHistory(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->VersionServ__DogAccessHistory::dogserial = dogserial; _p->VersionServ__DogAccessHistory::endUserId = endUserId; _p->VersionServ__DogAccessHistory::productId = productId; _p->VersionServ__DogAccessHistory::cycleSerial = cycleSerial; _p->VersionServ__DogAccessHistory::accessType = accessType; _p->VersionServ__DogAccessHistory::accessOccurDate = accessOccurDate; _p->VersionServ__ObjectV::id = id1; _p->VersionServ__ObjectV::tag = tag1; } return _p; }

inline void soap_delete_VersionServ__DogAccessHistory(struct soap *soap, VersionServ__DogAccessHistory *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_VersionServ__DogAccessHistory(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_VersionServ__VersionRevision
#define SOAP_TYPE_VersionServ__VersionRevision (170)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_VersionServ__VersionRevision(struct soap*, const char*, int, const VersionServ__VersionRevision *, const char*);
SOAP_FMAC3 VersionServ__VersionRevision * SOAP_FMAC4 soap_in_VersionServ__VersionRevision(struct soap*, const char*, VersionServ__VersionRevision *, const char*);

#ifndef soap_write_VersionServ__VersionRevision
#define soap_write_VersionServ__VersionRevision(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "VersionServ:VersionRevision", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 VersionServ__VersionRevision * SOAP_FMAC4 soap_get_VersionServ__VersionRevision(struct soap*, VersionServ__VersionRevision *, const char*, const char*);

#ifndef soap_read_VersionServ__VersionRevision
#define soap_read_VersionServ__VersionRevision(soap, data) ( soap_begin_recv(soap) || !soap_get_VersionServ__VersionRevision(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 VersionServ__VersionRevision * SOAP_FMAC2 soap_instantiate_VersionServ__VersionRevision(struct soap*, int, const char*, const char*, size_t*);

inline VersionServ__VersionRevision * soap_new_VersionServ__VersionRevision(struct soap *soap, int n = -1) { return soap_instantiate_VersionServ__VersionRevision(soap, n, NULL, NULL, NULL); }

inline VersionServ__VersionRevision * soap_new_req_VersionServ__VersionRevision(struct soap *soap, unsigned int Id, unsigned int productId, char revisionType, unsigned char important, bool readed) { VersionServ__VersionRevision *_p = soap_instantiate_VersionServ__VersionRevision(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->VersionServ__VersionRevision::Id = Id; _p->VersionServ__VersionRevision::productId = productId; _p->VersionServ__VersionRevision::revisionType = revisionType; _p->VersionServ__VersionRevision::important = important; _p->VersionServ__VersionRevision::readed = readed; } return _p; }

inline VersionServ__VersionRevision * soap_new_set_VersionServ__VersionRevision(struct soap *soap, unsigned int Id, unsigned int productId, char revisionType, unsigned char important, bool readed, char *title, char *contents) { VersionServ__VersionRevision *_p = soap_instantiate_VersionServ__VersionRevision(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->VersionServ__VersionRevision::Id = Id; _p->VersionServ__VersionRevision::productId = productId; _p->VersionServ__VersionRevision::revisionType = revisionType; _p->VersionServ__VersionRevision::important = important; _p->VersionServ__VersionRevision::readed = readed; _p->VersionServ__VersionRevision::title = title; _p->VersionServ__VersionRevision::contents = contents; } return _p; }

inline void soap_delete_VersionServ__VersionRevision(struct soap *soap, VersionServ__VersionRevision *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_VersionServ__VersionRevision(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_VersionServ__ArrayOfVersionRevision
#define SOAP_TYPE_VersionServ__ArrayOfVersionRevision (169)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_VersionServ__ArrayOfVersionRevision(struct soap*, const char*, int, const VersionServ__ArrayOfVersionRevision *, const char*);
SOAP_FMAC3 VersionServ__ArrayOfVersionRevision * SOAP_FMAC4 soap_in_VersionServ__ArrayOfVersionRevision(struct soap*, const char*, VersionServ__ArrayOfVersionRevision *, const char*);

#ifndef soap_write_VersionServ__ArrayOfVersionRevision
#define soap_write_VersionServ__ArrayOfVersionRevision(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "VersionServ:ArrayOfVersionRevision", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 VersionServ__ArrayOfVersionRevision * SOAP_FMAC4 soap_get_VersionServ__ArrayOfVersionRevision(struct soap*, VersionServ__ArrayOfVersionRevision *, const char*, const char*);

#ifndef soap_read_VersionServ__ArrayOfVersionRevision
#define soap_read_VersionServ__ArrayOfVersionRevision(soap, data) ( soap_begin_recv(soap) || !soap_get_VersionServ__ArrayOfVersionRevision(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 VersionServ__ArrayOfVersionRevision * SOAP_FMAC2 soap_instantiate_VersionServ__ArrayOfVersionRevision(struct soap*, int, const char*, const char*, size_t*);

inline VersionServ__ArrayOfVersionRevision * soap_new_VersionServ__ArrayOfVersionRevision(struct soap *soap, int n = -1) { return soap_instantiate_VersionServ__ArrayOfVersionRevision(soap, n, NULL, NULL, NULL); }

inline VersionServ__ArrayOfVersionRevision * soap_new_req_VersionServ__ArrayOfVersionRevision(struct soap *soap, int __sizeVersionRevision, VersionServ__VersionRevision **VersionRevision) { VersionServ__ArrayOfVersionRevision *_p = soap_instantiate_VersionServ__ArrayOfVersionRevision(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->VersionServ__ArrayOfVersionRevision::__sizeVersionRevision = __sizeVersionRevision; _p->VersionServ__ArrayOfVersionRevision::VersionRevision = VersionRevision; } return _p; }

inline VersionServ__ArrayOfVersionRevision * soap_new_set_VersionServ__ArrayOfVersionRevision(struct soap *soap, int __sizeVersionRevision, VersionServ__VersionRevision **VersionRevision) { VersionServ__ArrayOfVersionRevision *_p = soap_instantiate_VersionServ__ArrayOfVersionRevision(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->VersionServ__ArrayOfVersionRevision::__sizeVersionRevision = __sizeVersionRevision; _p->VersionServ__ArrayOfVersionRevision::VersionRevision = VersionRevision; } return _p; }

inline void soap_delete_VersionServ__ArrayOfVersionRevision(struct soap *soap, VersionServ__ArrayOfVersionRevision *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_VersionServ__ArrayOfVersionRevision(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_VersionServ__ArrayOfInt
#define SOAP_TYPE_VersionServ__ArrayOfInt (168)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_VersionServ__ArrayOfInt(struct soap*, const char*, int, const VersionServ__ArrayOfInt *, const char*);
SOAP_FMAC3 VersionServ__ArrayOfInt * SOAP_FMAC4 soap_in_VersionServ__ArrayOfInt(struct soap*, const char*, VersionServ__ArrayOfInt *, const char*);

#ifndef soap_write_VersionServ__ArrayOfInt
#define soap_write_VersionServ__ArrayOfInt(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "VersionServ:ArrayOfInt", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 VersionServ__ArrayOfInt * SOAP_FMAC4 soap_get_VersionServ__ArrayOfInt(struct soap*, VersionServ__ArrayOfInt *, const char*, const char*);

#ifndef soap_read_VersionServ__ArrayOfInt
#define soap_read_VersionServ__ArrayOfInt(soap, data) ( soap_begin_recv(soap) || !soap_get_VersionServ__ArrayOfInt(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 VersionServ__ArrayOfInt * SOAP_FMAC2 soap_instantiate_VersionServ__ArrayOfInt(struct soap*, int, const char*, const char*, size_t*);

inline VersionServ__ArrayOfInt * soap_new_VersionServ__ArrayOfInt(struct soap *soap, int n = -1) { return soap_instantiate_VersionServ__ArrayOfInt(soap, n, NULL, NULL, NULL); }

inline VersionServ__ArrayOfInt * soap_new_req_VersionServ__ArrayOfInt(struct soap *soap, int __sizeint_, int *int_) { VersionServ__ArrayOfInt *_p = soap_instantiate_VersionServ__ArrayOfInt(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->VersionServ__ArrayOfInt::__sizeint_ = __sizeint_; _p->VersionServ__ArrayOfInt::int_ = int_; } return _p; }

inline VersionServ__ArrayOfInt * soap_new_set_VersionServ__ArrayOfInt(struct soap *soap, int __sizeint_, int *int_) { VersionServ__ArrayOfInt *_p = soap_instantiate_VersionServ__ArrayOfInt(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->VersionServ__ArrayOfInt::__sizeint_ = __sizeint_; _p->VersionServ__ArrayOfInt::int_ = int_; } return _p; }

inline void soap_delete_VersionServ__ArrayOfInt(struct soap *soap, VersionServ__ArrayOfInt *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_VersionServ__ArrayOfInt(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_VersionServ__ProductVersion
#define SOAP_TYPE_VersionServ__ProductVersion (167)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_VersionServ__ProductVersion(struct soap*, const char*, int, const VersionServ__ProductVersion *, const char*);
SOAP_FMAC3 VersionServ__ProductVersion * SOAP_FMAC4 soap_in_VersionServ__ProductVersion(struct soap*, const char*, VersionServ__ProductVersion *, const char*);

#ifndef soap_write_VersionServ__ProductVersion
#define soap_write_VersionServ__ProductVersion(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "VersionServ:ProductVersion", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 VersionServ__ProductVersion * SOAP_FMAC4 soap_get_VersionServ__ProductVersion(struct soap*, VersionServ__ProductVersion *, const char*, const char*);

#ifndef soap_read_VersionServ__ProductVersion
#define soap_read_VersionServ__ProductVersion(soap, data) ( soap_begin_recv(soap) || !soap_get_VersionServ__ProductVersion(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 VersionServ__ProductVersion * SOAP_FMAC2 soap_instantiate_VersionServ__ProductVersion(struct soap*, int, const char*, const char*, size_t*);

inline VersionServ__ProductVersion * soap_new_VersionServ__ProductVersion(struct soap *soap, int n = -1) { return soap_instantiate_VersionServ__ProductVersion(soap, n, NULL, NULL, NULL); }

inline VersionServ__ProductVersion * soap_new_req_VersionServ__ProductVersion(struct soap *soap, int id, unsigned int productId, unsigned int version, time_t releaseDate) { VersionServ__ProductVersion *_p = soap_instantiate_VersionServ__ProductVersion(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->VersionServ__ProductVersion::id = id; _p->VersionServ__ProductVersion::productId = productId; _p->VersionServ__ProductVersion::version = version; _p->VersionServ__ProductVersion::releaseDate = releaseDate; } return _p; }

inline VersionServ__ProductVersion * soap_new_set_VersionServ__ProductVersion(struct soap *soap, int id, unsigned int productId, unsigned int version, time_t releaseDate) { VersionServ__ProductVersion *_p = soap_instantiate_VersionServ__ProductVersion(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->VersionServ__ProductVersion::id = id; _p->VersionServ__ProductVersion::productId = productId; _p->VersionServ__ProductVersion::version = version; _p->VersionServ__ProductVersion::releaseDate = releaseDate; } return _p; }

inline void soap_delete_VersionServ__ProductVersion(struct soap *soap, VersionServ__ProductVersion *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_VersionServ__ProductVersion(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_VersionServ__ArrayOfProductVersion
#define SOAP_TYPE_VersionServ__ArrayOfProductVersion (166)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_VersionServ__ArrayOfProductVersion(struct soap*, const char*, int, const VersionServ__ArrayOfProductVersion *, const char*);
SOAP_FMAC3 VersionServ__ArrayOfProductVersion * SOAP_FMAC4 soap_in_VersionServ__ArrayOfProductVersion(struct soap*, const char*, VersionServ__ArrayOfProductVersion *, const char*);

#ifndef soap_write_VersionServ__ArrayOfProductVersion
#define soap_write_VersionServ__ArrayOfProductVersion(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "VersionServ:ArrayOfProductVersion", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 VersionServ__ArrayOfProductVersion * SOAP_FMAC4 soap_get_VersionServ__ArrayOfProductVersion(struct soap*, VersionServ__ArrayOfProductVersion *, const char*, const char*);

#ifndef soap_read_VersionServ__ArrayOfProductVersion
#define soap_read_VersionServ__ArrayOfProductVersion(soap, data) ( soap_begin_recv(soap) || !soap_get_VersionServ__ArrayOfProductVersion(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 VersionServ__ArrayOfProductVersion * SOAP_FMAC2 soap_instantiate_VersionServ__ArrayOfProductVersion(struct soap*, int, const char*, const char*, size_t*);

inline VersionServ__ArrayOfProductVersion * soap_new_VersionServ__ArrayOfProductVersion(struct soap *soap, int n = -1) { return soap_instantiate_VersionServ__ArrayOfProductVersion(soap, n, NULL, NULL, NULL); }

inline VersionServ__ArrayOfProductVersion * soap_new_req_VersionServ__ArrayOfProductVersion(struct soap *soap, int __sizeProductVersion, VersionServ__ProductVersion **ProductVersion) { VersionServ__ArrayOfProductVersion *_p = soap_instantiate_VersionServ__ArrayOfProductVersion(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->VersionServ__ArrayOfProductVersion::__sizeProductVersion = __sizeProductVersion; _p->VersionServ__ArrayOfProductVersion::ProductVersion = ProductVersion; } return _p; }

inline VersionServ__ArrayOfProductVersion * soap_new_set_VersionServ__ArrayOfProductVersion(struct soap *soap, int __sizeProductVersion, VersionServ__ProductVersion **ProductVersion) { VersionServ__ArrayOfProductVersion *_p = soap_instantiate_VersionServ__ArrayOfProductVersion(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->VersionServ__ArrayOfProductVersion::__sizeProductVersion = __sizeProductVersion; _p->VersionServ__ArrayOfProductVersion::ProductVersion = ProductVersion; } return _p; }

inline void soap_delete_VersionServ__ArrayOfProductVersion(struct soap *soap, VersionServ__ArrayOfProductVersion *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_VersionServ__ArrayOfProductVersion(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__TMSServ__CloseFileObjectDataProviderResponse
#define SOAP_TYPE__TMSServ__CloseFileObjectDataProviderResponse (49)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__TMSServ__CloseFileObjectDataProviderResponse(struct soap*, const char*, int, const _TMSServ__CloseFileObjectDataProviderResponse *, const char*);
SOAP_FMAC3 _TMSServ__CloseFileObjectDataProviderResponse * SOAP_FMAC4 soap_in__TMSServ__CloseFileObjectDataProviderResponse(struct soap*, const char*, _TMSServ__CloseFileObjectDataProviderResponse *, const char*);

#ifndef soap_write__TMSServ__CloseFileObjectDataProviderResponse
#define soap_write__TMSServ__CloseFileObjectDataProviderResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "TMSServ:CloseFileObjectDataProviderResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _TMSServ__CloseFileObjectDataProviderResponse * SOAP_FMAC4 soap_get__TMSServ__CloseFileObjectDataProviderResponse(struct soap*, _TMSServ__CloseFileObjectDataProviderResponse *, const char*, const char*);

#ifndef soap_read__TMSServ__CloseFileObjectDataProviderResponse
#define soap_read__TMSServ__CloseFileObjectDataProviderResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__TMSServ__CloseFileObjectDataProviderResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _TMSServ__CloseFileObjectDataProviderResponse * SOAP_FMAC2 soap_instantiate__TMSServ__CloseFileObjectDataProviderResponse(struct soap*, int, const char*, const char*, size_t*);

inline _TMSServ__CloseFileObjectDataProviderResponse * soap_new__TMSServ__CloseFileObjectDataProviderResponse(struct soap *soap, int n = -1) { return soap_instantiate__TMSServ__CloseFileObjectDataProviderResponse(soap, n, NULL, NULL, NULL); }

inline _TMSServ__CloseFileObjectDataProviderResponse * soap_new_req__TMSServ__CloseFileObjectDataProviderResponse(struct soap *soap, bool CloseFileObjectDataProviderResult) { _TMSServ__CloseFileObjectDataProviderResponse *_p = soap_instantiate__TMSServ__CloseFileObjectDataProviderResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_TMSServ__CloseFileObjectDataProviderResponse::CloseFileObjectDataProviderResult = CloseFileObjectDataProviderResult; } return _p; }

inline _TMSServ__CloseFileObjectDataProviderResponse * soap_new_set__TMSServ__CloseFileObjectDataProviderResponse(struct soap *soap, bool CloseFileObjectDataProviderResult) { _TMSServ__CloseFileObjectDataProviderResponse *_p = soap_instantiate__TMSServ__CloseFileObjectDataProviderResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_TMSServ__CloseFileObjectDataProviderResponse::CloseFileObjectDataProviderResult = CloseFileObjectDataProviderResult; } return _p; }

inline void soap_delete__TMSServ__CloseFileObjectDataProviderResponse(struct soap *soap, _TMSServ__CloseFileObjectDataProviderResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__TMSServ__CloseFileObjectDataProviderResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__TMSServ__CloseFileObjectDataProvider
#define SOAP_TYPE__TMSServ__CloseFileObjectDataProvider (48)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__TMSServ__CloseFileObjectDataProvider(struct soap*, const char*, int, const _TMSServ__CloseFileObjectDataProvider *, const char*);
SOAP_FMAC3 _TMSServ__CloseFileObjectDataProvider * SOAP_FMAC4 soap_in__TMSServ__CloseFileObjectDataProvider(struct soap*, const char*, _TMSServ__CloseFileObjectDataProvider *, const char*);

#ifndef soap_write__TMSServ__CloseFileObjectDataProvider
#define soap_write__TMSServ__CloseFileObjectDataProvider(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "TMSServ:CloseFileObjectDataProvider", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _TMSServ__CloseFileObjectDataProvider * SOAP_FMAC4 soap_get__TMSServ__CloseFileObjectDataProvider(struct soap*, _TMSServ__CloseFileObjectDataProvider *, const char*, const char*);

#ifndef soap_read__TMSServ__CloseFileObjectDataProvider
#define soap_read__TMSServ__CloseFileObjectDataProvider(soap, data) ( soap_begin_recv(soap) || !soap_get__TMSServ__CloseFileObjectDataProvider(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _TMSServ__CloseFileObjectDataProvider * SOAP_FMAC2 soap_instantiate__TMSServ__CloseFileObjectDataProvider(struct soap*, int, const char*, const char*, size_t*);

inline _TMSServ__CloseFileObjectDataProvider * soap_new__TMSServ__CloseFileObjectDataProvider(struct soap *soap, int n = -1) { return soap_instantiate__TMSServ__CloseFileObjectDataProvider(soap, n, NULL, NULL, NULL); }

inline _TMSServ__CloseFileObjectDataProvider * soap_new_req__TMSServ__CloseFileObjectDataProvider(struct soap *soap, int sessionId, int idFileObj) { _TMSServ__CloseFileObjectDataProvider *_p = soap_instantiate__TMSServ__CloseFileObjectDataProvider(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_TMSServ__CloseFileObjectDataProvider::sessionId = sessionId; _p->_TMSServ__CloseFileObjectDataProvider::idFileObj = idFileObj; } return _p; }

inline _TMSServ__CloseFileObjectDataProvider * soap_new_set__TMSServ__CloseFileObjectDataProvider(struct soap *soap, int sessionId, int idFileObj) { _TMSServ__CloseFileObjectDataProvider *_p = soap_instantiate__TMSServ__CloseFileObjectDataProvider(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_TMSServ__CloseFileObjectDataProvider::sessionId = sessionId; _p->_TMSServ__CloseFileObjectDataProvider::idFileObj = idFileObj; } return _p; }

inline void soap_delete__TMSServ__CloseFileObjectDataProvider(struct soap *soap, _TMSServ__CloseFileObjectDataProvider *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__TMSServ__CloseFileObjectDataProvider(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__TMSServ__DownloadFileObjectResponse
#define SOAP_TYPE__TMSServ__DownloadFileObjectResponse (47)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__TMSServ__DownloadFileObjectResponse(struct soap*, const char*, int, const _TMSServ__DownloadFileObjectResponse *, const char*);
SOAP_FMAC3 _TMSServ__DownloadFileObjectResponse * SOAP_FMAC4 soap_in__TMSServ__DownloadFileObjectResponse(struct soap*, const char*, _TMSServ__DownloadFileObjectResponse *, const char*);

#ifndef soap_write__TMSServ__DownloadFileObjectResponse
#define soap_write__TMSServ__DownloadFileObjectResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "TMSServ:DownloadFileObjectResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _TMSServ__DownloadFileObjectResponse * SOAP_FMAC4 soap_get__TMSServ__DownloadFileObjectResponse(struct soap*, _TMSServ__DownloadFileObjectResponse *, const char*, const char*);

#ifndef soap_read__TMSServ__DownloadFileObjectResponse
#define soap_read__TMSServ__DownloadFileObjectResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__TMSServ__DownloadFileObjectResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _TMSServ__DownloadFileObjectResponse * SOAP_FMAC2 soap_instantiate__TMSServ__DownloadFileObjectResponse(struct soap*, int, const char*, const char*, size_t*);

inline _TMSServ__DownloadFileObjectResponse * soap_new__TMSServ__DownloadFileObjectResponse(struct soap *soap, int n = -1) { return soap_instantiate__TMSServ__DownloadFileObjectResponse(soap, n, NULL, NULL, NULL); }

inline _TMSServ__DownloadFileObjectResponse * soap_new_req__TMSServ__DownloadFileObjectResponse(struct soap *soap) { _TMSServ__DownloadFileObjectResponse *_p = soap_instantiate__TMSServ__DownloadFileObjectResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _TMSServ__DownloadFileObjectResponse * soap_new_set__TMSServ__DownloadFileObjectResponse(struct soap *soap, xsd__base64Binary *DownloadFileObjectResult) { _TMSServ__DownloadFileObjectResponse *_p = soap_instantiate__TMSServ__DownloadFileObjectResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_TMSServ__DownloadFileObjectResponse::DownloadFileObjectResult = DownloadFileObjectResult; } return _p; }

inline void soap_delete__TMSServ__DownloadFileObjectResponse(struct soap *soap, _TMSServ__DownloadFileObjectResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__TMSServ__DownloadFileObjectResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__TMSServ__DownloadFileObject
#define SOAP_TYPE__TMSServ__DownloadFileObject (46)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__TMSServ__DownloadFileObject(struct soap*, const char*, int, const _TMSServ__DownloadFileObject *, const char*);
SOAP_FMAC3 _TMSServ__DownloadFileObject * SOAP_FMAC4 soap_in__TMSServ__DownloadFileObject(struct soap*, const char*, _TMSServ__DownloadFileObject *, const char*);

#ifndef soap_write__TMSServ__DownloadFileObject
#define soap_write__TMSServ__DownloadFileObject(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "TMSServ:DownloadFileObject", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _TMSServ__DownloadFileObject * SOAP_FMAC4 soap_get__TMSServ__DownloadFileObject(struct soap*, _TMSServ__DownloadFileObject *, const char*, const char*);

#ifndef soap_read__TMSServ__DownloadFileObject
#define soap_read__TMSServ__DownloadFileObject(soap, data) ( soap_begin_recv(soap) || !soap_get__TMSServ__DownloadFileObject(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _TMSServ__DownloadFileObject * SOAP_FMAC2 soap_instantiate__TMSServ__DownloadFileObject(struct soap*, int, const char*, const char*, size_t*);

inline _TMSServ__DownloadFileObject * soap_new__TMSServ__DownloadFileObject(struct soap *soap, int n = -1) { return soap_instantiate__TMSServ__DownloadFileObject(soap, n, NULL, NULL, NULL); }

inline _TMSServ__DownloadFileObject * soap_new_req__TMSServ__DownloadFileObject(struct soap *soap, int sessionId, int idFileObj, int startposition, int download_USCOREsize, bool compressed) { _TMSServ__DownloadFileObject *_p = soap_instantiate__TMSServ__DownloadFileObject(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_TMSServ__DownloadFileObject::sessionId = sessionId; _p->_TMSServ__DownloadFileObject::idFileObj = idFileObj; _p->_TMSServ__DownloadFileObject::startposition = startposition; _p->_TMSServ__DownloadFileObject::download_USCOREsize = download_USCOREsize; _p->_TMSServ__DownloadFileObject::compressed = compressed; } return _p; }

inline _TMSServ__DownloadFileObject * soap_new_set__TMSServ__DownloadFileObject(struct soap *soap, int sessionId, int idFileObj, int startposition, int download_USCOREsize, bool compressed) { _TMSServ__DownloadFileObject *_p = soap_instantiate__TMSServ__DownloadFileObject(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_TMSServ__DownloadFileObject::sessionId = sessionId; _p->_TMSServ__DownloadFileObject::idFileObj = idFileObj; _p->_TMSServ__DownloadFileObject::startposition = startposition; _p->_TMSServ__DownloadFileObject::download_USCOREsize = download_USCOREsize; _p->_TMSServ__DownloadFileObject::compressed = compressed; } return _p; }

inline void soap_delete__TMSServ__DownloadFileObject(struct soap *soap, _TMSServ__DownloadFileObject *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__TMSServ__DownloadFileObject(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__TMSServ__OpenServerObjectDataProviderResponse
#define SOAP_TYPE__TMSServ__OpenServerObjectDataProviderResponse (45)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__TMSServ__OpenServerObjectDataProviderResponse(struct soap*, const char*, int, const _TMSServ__OpenServerObjectDataProviderResponse *, const char*);
SOAP_FMAC3 _TMSServ__OpenServerObjectDataProviderResponse * SOAP_FMAC4 soap_in__TMSServ__OpenServerObjectDataProviderResponse(struct soap*, const char*, _TMSServ__OpenServerObjectDataProviderResponse *, const char*);

#ifndef soap_write__TMSServ__OpenServerObjectDataProviderResponse
#define soap_write__TMSServ__OpenServerObjectDataProviderResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "TMSServ:OpenServerObjectDataProviderResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _TMSServ__OpenServerObjectDataProviderResponse * SOAP_FMAC4 soap_get__TMSServ__OpenServerObjectDataProviderResponse(struct soap*, _TMSServ__OpenServerObjectDataProviderResponse *, const char*, const char*);

#ifndef soap_read__TMSServ__OpenServerObjectDataProviderResponse
#define soap_read__TMSServ__OpenServerObjectDataProviderResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__TMSServ__OpenServerObjectDataProviderResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _TMSServ__OpenServerObjectDataProviderResponse * SOAP_FMAC2 soap_instantiate__TMSServ__OpenServerObjectDataProviderResponse(struct soap*, int, const char*, const char*, size_t*);

inline _TMSServ__OpenServerObjectDataProviderResponse * soap_new__TMSServ__OpenServerObjectDataProviderResponse(struct soap *soap, int n = -1) { return soap_instantiate__TMSServ__OpenServerObjectDataProviderResponse(soap, n, NULL, NULL, NULL); }

inline _TMSServ__OpenServerObjectDataProviderResponse * soap_new_req__TMSServ__OpenServerObjectDataProviderResponse(struct soap *soap) { _TMSServ__OpenServerObjectDataProviderResponse *_p = soap_instantiate__TMSServ__OpenServerObjectDataProviderResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _TMSServ__OpenServerObjectDataProviderResponse * soap_new_set__TMSServ__OpenServerObjectDataProviderResponse(struct soap *soap, char *OpenServerObjectDataProviderResult) { _TMSServ__OpenServerObjectDataProviderResponse *_p = soap_instantiate__TMSServ__OpenServerObjectDataProviderResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_TMSServ__OpenServerObjectDataProviderResponse::OpenServerObjectDataProviderResult = OpenServerObjectDataProviderResult; } return _p; }

inline void soap_delete__TMSServ__OpenServerObjectDataProviderResponse(struct soap *soap, _TMSServ__OpenServerObjectDataProviderResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__TMSServ__OpenServerObjectDataProviderResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__TMSServ__OpenServerObjectDataProvider
#define SOAP_TYPE__TMSServ__OpenServerObjectDataProvider (44)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__TMSServ__OpenServerObjectDataProvider(struct soap*, const char*, int, const _TMSServ__OpenServerObjectDataProvider *, const char*);
SOAP_FMAC3 _TMSServ__OpenServerObjectDataProvider * SOAP_FMAC4 soap_in__TMSServ__OpenServerObjectDataProvider(struct soap*, const char*, _TMSServ__OpenServerObjectDataProvider *, const char*);

#ifndef soap_write__TMSServ__OpenServerObjectDataProvider
#define soap_write__TMSServ__OpenServerObjectDataProvider(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "TMSServ:OpenServerObjectDataProvider", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _TMSServ__OpenServerObjectDataProvider * SOAP_FMAC4 soap_get__TMSServ__OpenServerObjectDataProvider(struct soap*, _TMSServ__OpenServerObjectDataProvider *, const char*, const char*);

#ifndef soap_read__TMSServ__OpenServerObjectDataProvider
#define soap_read__TMSServ__OpenServerObjectDataProvider(soap, data) ( soap_begin_recv(soap) || !soap_get__TMSServ__OpenServerObjectDataProvider(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _TMSServ__OpenServerObjectDataProvider * SOAP_FMAC2 soap_instantiate__TMSServ__OpenServerObjectDataProvider(struct soap*, int, const char*, const char*, size_t*);

inline _TMSServ__OpenServerObjectDataProvider * soap_new__TMSServ__OpenServerObjectDataProvider(struct soap *soap, int n = -1) { return soap_instantiate__TMSServ__OpenServerObjectDataProvider(soap, n, NULL, NULL, NULL); }

inline _TMSServ__OpenServerObjectDataProvider * soap_new_req__TMSServ__OpenServerObjectDataProvider(struct soap *soap, int sessionId, int idObject, bool compressed) { _TMSServ__OpenServerObjectDataProvider *_p = soap_instantiate__TMSServ__OpenServerObjectDataProvider(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_TMSServ__OpenServerObjectDataProvider::sessionId = sessionId; _p->_TMSServ__OpenServerObjectDataProvider::idObject = idObject; _p->_TMSServ__OpenServerObjectDataProvider::compressed = compressed; } return _p; }

inline _TMSServ__OpenServerObjectDataProvider * soap_new_set__TMSServ__OpenServerObjectDataProvider(struct soap *soap, int sessionId, int idObject, char *cls_USCOREname, bool compressed) { _TMSServ__OpenServerObjectDataProvider *_p = soap_instantiate__TMSServ__OpenServerObjectDataProvider(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_TMSServ__OpenServerObjectDataProvider::sessionId = sessionId; _p->_TMSServ__OpenServerObjectDataProvider::idObject = idObject; _p->_TMSServ__OpenServerObjectDataProvider::cls_USCOREname = cls_USCOREname; _p->_TMSServ__OpenServerObjectDataProvider::compressed = compressed; } return _p; }

inline void soap_delete__TMSServ__OpenServerObjectDataProvider(struct soap *soap, _TMSServ__OpenServerObjectDataProvider *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__TMSServ__OpenServerObjectDataProvider(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__TMSServ__OpenTapModelDataProviderResponse
#define SOAP_TYPE__TMSServ__OpenTapModelDataProviderResponse (43)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__TMSServ__OpenTapModelDataProviderResponse(struct soap*, const char*, int, const _TMSServ__OpenTapModelDataProviderResponse *, const char*);
SOAP_FMAC3 _TMSServ__OpenTapModelDataProviderResponse * SOAP_FMAC4 soap_in__TMSServ__OpenTapModelDataProviderResponse(struct soap*, const char*, _TMSServ__OpenTapModelDataProviderResponse *, const char*);

#ifndef soap_write__TMSServ__OpenTapModelDataProviderResponse
#define soap_write__TMSServ__OpenTapModelDataProviderResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "TMSServ:OpenTapModelDataProviderResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _TMSServ__OpenTapModelDataProviderResponse * SOAP_FMAC4 soap_get__TMSServ__OpenTapModelDataProviderResponse(struct soap*, _TMSServ__OpenTapModelDataProviderResponse *, const char*, const char*);

#ifndef soap_read__TMSServ__OpenTapModelDataProviderResponse
#define soap_read__TMSServ__OpenTapModelDataProviderResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__TMSServ__OpenTapModelDataProviderResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _TMSServ__OpenTapModelDataProviderResponse * SOAP_FMAC2 soap_instantiate__TMSServ__OpenTapModelDataProviderResponse(struct soap*, int, const char*, const char*, size_t*);

inline _TMSServ__OpenTapModelDataProviderResponse * soap_new__TMSServ__OpenTapModelDataProviderResponse(struct soap *soap, int n = -1) { return soap_instantiate__TMSServ__OpenTapModelDataProviderResponse(soap, n, NULL, NULL, NULL); }

inline _TMSServ__OpenTapModelDataProviderResponse * soap_new_req__TMSServ__OpenTapModelDataProviderResponse(struct soap *soap) { _TMSServ__OpenTapModelDataProviderResponse *_p = soap_instantiate__TMSServ__OpenTapModelDataProviderResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _TMSServ__OpenTapModelDataProviderResponse * soap_new_set__TMSServ__OpenTapModelDataProviderResponse(struct soap *soap, char *OpenTapModelDataProviderResult) { _TMSServ__OpenTapModelDataProviderResponse *_p = soap_instantiate__TMSServ__OpenTapModelDataProviderResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_TMSServ__OpenTapModelDataProviderResponse::OpenTapModelDataProviderResult = OpenTapModelDataProviderResult; } return _p; }

inline void soap_delete__TMSServ__OpenTapModelDataProviderResponse(struct soap *soap, _TMSServ__OpenTapModelDataProviderResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__TMSServ__OpenTapModelDataProviderResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__TMSServ__OpenTapModelDataProvider
#define SOAP_TYPE__TMSServ__OpenTapModelDataProvider (42)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__TMSServ__OpenTapModelDataProvider(struct soap*, const char*, int, const _TMSServ__OpenTapModelDataProvider *, const char*);
SOAP_FMAC3 _TMSServ__OpenTapModelDataProvider * SOAP_FMAC4 soap_in__TMSServ__OpenTapModelDataProvider(struct soap*, const char*, _TMSServ__OpenTapModelDataProvider *, const char*);

#ifndef soap_write__TMSServ__OpenTapModelDataProvider
#define soap_write__TMSServ__OpenTapModelDataProvider(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "TMSServ:OpenTapModelDataProvider", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _TMSServ__OpenTapModelDataProvider * SOAP_FMAC4 soap_get__TMSServ__OpenTapModelDataProvider(struct soap*, _TMSServ__OpenTapModelDataProvider *, const char*, const char*);

#ifndef soap_read__TMSServ__OpenTapModelDataProvider
#define soap_read__TMSServ__OpenTapModelDataProvider(soap, data) ( soap_begin_recv(soap) || !soap_get__TMSServ__OpenTapModelDataProvider(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _TMSServ__OpenTapModelDataProvider * SOAP_FMAC2 soap_instantiate__TMSServ__OpenTapModelDataProvider(struct soap*, int, const char*, const char*, size_t*);

inline _TMSServ__OpenTapModelDataProvider * soap_new__TMSServ__OpenTapModelDataProvider(struct soap *soap, int n = -1) { return soap_instantiate__TMSServ__OpenTapModelDataProvider(soap, n, NULL, NULL, NULL); }

inline _TMSServ__OpenTapModelDataProvider * soap_new_req__TMSServ__OpenTapModelDataProvider(struct soap *soap, int sessionId, int idTowerType, bool compressed) { _TMSServ__OpenTapModelDataProvider *_p = soap_instantiate__TMSServ__OpenTapModelDataProvider(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_TMSServ__OpenTapModelDataProvider::sessionId = sessionId; _p->_TMSServ__OpenTapModelDataProvider::idTowerType = idTowerType; _p->_TMSServ__OpenTapModelDataProvider::compressed = compressed; } return _p; }

inline _TMSServ__OpenTapModelDataProvider * soap_new_set__TMSServ__OpenTapModelDataProvider(struct soap *soap, int sessionId, int idTowerType, bool compressed) { _TMSServ__OpenTapModelDataProvider *_p = soap_instantiate__TMSServ__OpenTapModelDataProvider(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_TMSServ__OpenTapModelDataProvider::sessionId = sessionId; _p->_TMSServ__OpenTapModelDataProvider::idTowerType = idTowerType; _p->_TMSServ__OpenTapModelDataProvider::compressed = compressed; } return _p; }

inline void soap_delete__TMSServ__OpenTapModelDataProvider(struct soap *soap, _TMSServ__OpenTapModelDataProvider *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__TMSServ__OpenTapModelDataProvider(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__TMSServ__OpenFileObjectDataProviderResponse
#define SOAP_TYPE__TMSServ__OpenFileObjectDataProviderResponse (41)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__TMSServ__OpenFileObjectDataProviderResponse(struct soap*, const char*, int, const _TMSServ__OpenFileObjectDataProviderResponse *, const char*);
SOAP_FMAC3 _TMSServ__OpenFileObjectDataProviderResponse * SOAP_FMAC4 soap_in__TMSServ__OpenFileObjectDataProviderResponse(struct soap*, const char*, _TMSServ__OpenFileObjectDataProviderResponse *, const char*);

#ifndef soap_write__TMSServ__OpenFileObjectDataProviderResponse
#define soap_write__TMSServ__OpenFileObjectDataProviderResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "TMSServ:OpenFileObjectDataProviderResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _TMSServ__OpenFileObjectDataProviderResponse * SOAP_FMAC4 soap_get__TMSServ__OpenFileObjectDataProviderResponse(struct soap*, _TMSServ__OpenFileObjectDataProviderResponse *, const char*, const char*);

#ifndef soap_read__TMSServ__OpenFileObjectDataProviderResponse
#define soap_read__TMSServ__OpenFileObjectDataProviderResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__TMSServ__OpenFileObjectDataProviderResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _TMSServ__OpenFileObjectDataProviderResponse * SOAP_FMAC2 soap_instantiate__TMSServ__OpenFileObjectDataProviderResponse(struct soap*, int, const char*, const char*, size_t*);

inline _TMSServ__OpenFileObjectDataProviderResponse * soap_new__TMSServ__OpenFileObjectDataProviderResponse(struct soap *soap, int n = -1) { return soap_instantiate__TMSServ__OpenFileObjectDataProviderResponse(soap, n, NULL, NULL, NULL); }

inline _TMSServ__OpenFileObjectDataProviderResponse * soap_new_req__TMSServ__OpenFileObjectDataProviderResponse(struct soap *soap, unsigned int OpenFileObjectDataProviderResult) { _TMSServ__OpenFileObjectDataProviderResponse *_p = soap_instantiate__TMSServ__OpenFileObjectDataProviderResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_TMSServ__OpenFileObjectDataProviderResponse::OpenFileObjectDataProviderResult = OpenFileObjectDataProviderResult; } return _p; }

inline _TMSServ__OpenFileObjectDataProviderResponse * soap_new_set__TMSServ__OpenFileObjectDataProviderResponse(struct soap *soap, unsigned int OpenFileObjectDataProviderResult) { _TMSServ__OpenFileObjectDataProviderResponse *_p = soap_instantiate__TMSServ__OpenFileObjectDataProviderResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_TMSServ__OpenFileObjectDataProviderResponse::OpenFileObjectDataProviderResult = OpenFileObjectDataProviderResult; } return _p; }

inline void soap_delete__TMSServ__OpenFileObjectDataProviderResponse(struct soap *soap, _TMSServ__OpenFileObjectDataProviderResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__TMSServ__OpenFileObjectDataProviderResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__TMSServ__OpenFileObjectDataProvider
#define SOAP_TYPE__TMSServ__OpenFileObjectDataProvider (40)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__TMSServ__OpenFileObjectDataProvider(struct soap*, const char*, int, const _TMSServ__OpenFileObjectDataProvider *, const char*);
SOAP_FMAC3 _TMSServ__OpenFileObjectDataProvider * SOAP_FMAC4 soap_in__TMSServ__OpenFileObjectDataProvider(struct soap*, const char*, _TMSServ__OpenFileObjectDataProvider *, const char*);

#ifndef soap_write__TMSServ__OpenFileObjectDataProvider
#define soap_write__TMSServ__OpenFileObjectDataProvider(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "TMSServ:OpenFileObjectDataProvider", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _TMSServ__OpenFileObjectDataProvider * SOAP_FMAC4 soap_get__TMSServ__OpenFileObjectDataProvider(struct soap*, _TMSServ__OpenFileObjectDataProvider *, const char*, const char*);

#ifndef soap_read__TMSServ__OpenFileObjectDataProvider
#define soap_read__TMSServ__OpenFileObjectDataProvider(soap, data) ( soap_begin_recv(soap) || !soap_get__TMSServ__OpenFileObjectDataProvider(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _TMSServ__OpenFileObjectDataProvider * SOAP_FMAC2 soap_instantiate__TMSServ__OpenFileObjectDataProvider(struct soap*, int, const char*, const char*, size_t*);

inline _TMSServ__OpenFileObjectDataProvider * soap_new__TMSServ__OpenFileObjectDataProvider(struct soap *soap, int n = -1) { return soap_instantiate__TMSServ__OpenFileObjectDataProvider(soap, n, NULL, NULL, NULL); }

inline _TMSServ__OpenFileObjectDataProvider * soap_new_req__TMSServ__OpenFileObjectDataProvider(struct soap *soap, int sessionId, int idFileObj, bool compressed) { _TMSServ__OpenFileObjectDataProvider *_p = soap_instantiate__TMSServ__OpenFileObjectDataProvider(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_TMSServ__OpenFileObjectDataProvider::sessionId = sessionId; _p->_TMSServ__OpenFileObjectDataProvider::idFileObj = idFileObj; _p->_TMSServ__OpenFileObjectDataProvider::compressed = compressed; } return _p; }

inline _TMSServ__OpenFileObjectDataProvider * soap_new_set__TMSServ__OpenFileObjectDataProvider(struct soap *soap, int sessionId, int idFileObj, bool compressed) { _TMSServ__OpenFileObjectDataProvider *_p = soap_instantiate__TMSServ__OpenFileObjectDataProvider(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_TMSServ__OpenFileObjectDataProvider::sessionId = sessionId; _p->_TMSServ__OpenFileObjectDataProvider::idFileObj = idFileObj; _p->_TMSServ__OpenFileObjectDataProvider::compressed = compressed; } return _p; }

inline void soap_delete__TMSServ__OpenFileObjectDataProvider(struct soap *soap, _TMSServ__OpenFileObjectDataProvider *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__TMSServ__OpenFileObjectDataProvider(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__TMSServ__FinalizeFileObjectDataResponse
#define SOAP_TYPE__TMSServ__FinalizeFileObjectDataResponse (39)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__TMSServ__FinalizeFileObjectDataResponse(struct soap*, const char*, int, const _TMSServ__FinalizeFileObjectDataResponse *, const char*);
SOAP_FMAC3 _TMSServ__FinalizeFileObjectDataResponse * SOAP_FMAC4 soap_in__TMSServ__FinalizeFileObjectDataResponse(struct soap*, const char*, _TMSServ__FinalizeFileObjectDataResponse *, const char*);

#ifndef soap_write__TMSServ__FinalizeFileObjectDataResponse
#define soap_write__TMSServ__FinalizeFileObjectDataResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "TMSServ:FinalizeFileObjectDataResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _TMSServ__FinalizeFileObjectDataResponse * SOAP_FMAC4 soap_get__TMSServ__FinalizeFileObjectDataResponse(struct soap*, _TMSServ__FinalizeFileObjectDataResponse *, const char*, const char*);

#ifndef soap_read__TMSServ__FinalizeFileObjectDataResponse
#define soap_read__TMSServ__FinalizeFileObjectDataResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__TMSServ__FinalizeFileObjectDataResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _TMSServ__FinalizeFileObjectDataResponse * SOAP_FMAC2 soap_instantiate__TMSServ__FinalizeFileObjectDataResponse(struct soap*, int, const char*, const char*, size_t*);

inline _TMSServ__FinalizeFileObjectDataResponse * soap_new__TMSServ__FinalizeFileObjectDataResponse(struct soap *soap, int n = -1) { return soap_instantiate__TMSServ__FinalizeFileObjectDataResponse(soap, n, NULL, NULL, NULL); }

inline _TMSServ__FinalizeFileObjectDataResponse * soap_new_req__TMSServ__FinalizeFileObjectDataResponse(struct soap *soap) { _TMSServ__FinalizeFileObjectDataResponse *_p = soap_instantiate__TMSServ__FinalizeFileObjectDataResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _TMSServ__FinalizeFileObjectDataResponse * soap_new_set__TMSServ__FinalizeFileObjectDataResponse(struct soap *soap, char *FinalizeFileObjectDataResult) { _TMSServ__FinalizeFileObjectDataResponse *_p = soap_instantiate__TMSServ__FinalizeFileObjectDataResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_TMSServ__FinalizeFileObjectDataResponse::FinalizeFileObjectDataResult = FinalizeFileObjectDataResult; } return _p; }

inline void soap_delete__TMSServ__FinalizeFileObjectDataResponse(struct soap *soap, _TMSServ__FinalizeFileObjectDataResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__TMSServ__FinalizeFileObjectDataResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__TMSServ__FinalizeFileObjectData
#define SOAP_TYPE__TMSServ__FinalizeFileObjectData (38)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__TMSServ__FinalizeFileObjectData(struct soap*, const char*, int, const _TMSServ__FinalizeFileObjectData *, const char*);
SOAP_FMAC3 _TMSServ__FinalizeFileObjectData * SOAP_FMAC4 soap_in__TMSServ__FinalizeFileObjectData(struct soap*, const char*, _TMSServ__FinalizeFileObjectData *, const char*);

#ifndef soap_write__TMSServ__FinalizeFileObjectData
#define soap_write__TMSServ__FinalizeFileObjectData(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "TMSServ:FinalizeFileObjectData", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _TMSServ__FinalizeFileObjectData * SOAP_FMAC4 soap_get__TMSServ__FinalizeFileObjectData(struct soap*, _TMSServ__FinalizeFileObjectData *, const char*, const char*);

#ifndef soap_read__TMSServ__FinalizeFileObjectData
#define soap_read__TMSServ__FinalizeFileObjectData(soap, data) ( soap_begin_recv(soap) || !soap_get__TMSServ__FinalizeFileObjectData(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _TMSServ__FinalizeFileObjectData * SOAP_FMAC2 soap_instantiate__TMSServ__FinalizeFileObjectData(struct soap*, int, const char*, const char*, size_t*);

inline _TMSServ__FinalizeFileObjectData * soap_new__TMSServ__FinalizeFileObjectData(struct soap *soap, int n = -1) { return soap_instantiate__TMSServ__FinalizeFileObjectData(soap, n, NULL, NULL, NULL); }

inline _TMSServ__FinalizeFileObjectData * soap_new_req__TMSServ__FinalizeFileObjectData(struct soap *soap, int sessionId, int idFileObj, int file_USCORElength, bool isOverriteFile) { _TMSServ__FinalizeFileObjectData *_p = soap_instantiate__TMSServ__FinalizeFileObjectData(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_TMSServ__FinalizeFileObjectData::sessionId = sessionId; _p->_TMSServ__FinalizeFileObjectData::idFileObj = idFileObj; _p->_TMSServ__FinalizeFileObjectData::file_USCORElength = file_USCORElength; _p->_TMSServ__FinalizeFileObjectData::isOverriteFile = isOverriteFile; } return _p; }

inline _TMSServ__FinalizeFileObjectData * soap_new_set__TMSServ__FinalizeFileObjectData(struct soap *soap, int sessionId, int idFileObj, int file_USCORElength, bool isOverriteFile) { _TMSServ__FinalizeFileObjectData *_p = soap_instantiate__TMSServ__FinalizeFileObjectData(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_TMSServ__FinalizeFileObjectData::sessionId = sessionId; _p->_TMSServ__FinalizeFileObjectData::idFileObj = idFileObj; _p->_TMSServ__FinalizeFileObjectData::file_USCORElength = file_USCORElength; _p->_TMSServ__FinalizeFileObjectData::isOverriteFile = isOverriteFile; } return _p; }

inline void soap_delete__TMSServ__FinalizeFileObjectData(struct soap *soap, _TMSServ__FinalizeFileObjectData *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__TMSServ__FinalizeFileObjectData(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__TMSServ__UploadFileObjectResponse
#define SOAP_TYPE__TMSServ__UploadFileObjectResponse (37)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__TMSServ__UploadFileObjectResponse(struct soap*, const char*, int, const _TMSServ__UploadFileObjectResponse *, const char*);
SOAP_FMAC3 _TMSServ__UploadFileObjectResponse * SOAP_FMAC4 soap_in__TMSServ__UploadFileObjectResponse(struct soap*, const char*, _TMSServ__UploadFileObjectResponse *, const char*);

#ifndef soap_write__TMSServ__UploadFileObjectResponse
#define soap_write__TMSServ__UploadFileObjectResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "TMSServ:UploadFileObjectResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _TMSServ__UploadFileObjectResponse * SOAP_FMAC4 soap_get__TMSServ__UploadFileObjectResponse(struct soap*, _TMSServ__UploadFileObjectResponse *, const char*, const char*);

#ifndef soap_read__TMSServ__UploadFileObjectResponse
#define soap_read__TMSServ__UploadFileObjectResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__TMSServ__UploadFileObjectResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _TMSServ__UploadFileObjectResponse * SOAP_FMAC2 soap_instantiate__TMSServ__UploadFileObjectResponse(struct soap*, int, const char*, const char*, size_t*);

inline _TMSServ__UploadFileObjectResponse * soap_new__TMSServ__UploadFileObjectResponse(struct soap *soap, int n = -1) { return soap_instantiate__TMSServ__UploadFileObjectResponse(soap, n, NULL, NULL, NULL); }

inline _TMSServ__UploadFileObjectResponse * soap_new_req__TMSServ__UploadFileObjectResponse(struct soap *soap, bool UploadFileObjectResult) { _TMSServ__UploadFileObjectResponse *_p = soap_instantiate__TMSServ__UploadFileObjectResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_TMSServ__UploadFileObjectResponse::UploadFileObjectResult = UploadFileObjectResult; } return _p; }

inline _TMSServ__UploadFileObjectResponse * soap_new_set__TMSServ__UploadFileObjectResponse(struct soap *soap, bool UploadFileObjectResult) { _TMSServ__UploadFileObjectResponse *_p = soap_instantiate__TMSServ__UploadFileObjectResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_TMSServ__UploadFileObjectResponse::UploadFileObjectResult = UploadFileObjectResult; } return _p; }

inline void soap_delete__TMSServ__UploadFileObjectResponse(struct soap *soap, _TMSServ__UploadFileObjectResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__TMSServ__UploadFileObjectResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__TMSServ__UploadFileObject
#define SOAP_TYPE__TMSServ__UploadFileObject (36)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__TMSServ__UploadFileObject(struct soap*, const char*, int, const _TMSServ__UploadFileObject *, const char*);
SOAP_FMAC3 _TMSServ__UploadFileObject * SOAP_FMAC4 soap_in__TMSServ__UploadFileObject(struct soap*, const char*, _TMSServ__UploadFileObject *, const char*);

#ifndef soap_write__TMSServ__UploadFileObject
#define soap_write__TMSServ__UploadFileObject(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "TMSServ:UploadFileObject", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _TMSServ__UploadFileObject * SOAP_FMAC4 soap_get__TMSServ__UploadFileObject(struct soap*, _TMSServ__UploadFileObject *, const char*, const char*);

#ifndef soap_read__TMSServ__UploadFileObject
#define soap_read__TMSServ__UploadFileObject(soap, data) ( soap_begin_recv(soap) || !soap_get__TMSServ__UploadFileObject(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _TMSServ__UploadFileObject * SOAP_FMAC2 soap_instantiate__TMSServ__UploadFileObject(struct soap*, int, const char*, const char*, size_t*);

inline _TMSServ__UploadFileObject * soap_new__TMSServ__UploadFileObject(struct soap *soap, int n = -1) { return soap_instantiate__TMSServ__UploadFileObject(soap, n, NULL, NULL, NULL); }

inline _TMSServ__UploadFileObject * soap_new_req__TMSServ__UploadFileObject(struct soap *soap, int sessionId, int idFileObj, int startposition, bool compressed) { _TMSServ__UploadFileObject *_p = soap_instantiate__TMSServ__UploadFileObject(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_TMSServ__UploadFileObject::sessionId = sessionId; _p->_TMSServ__UploadFileObject::idFileObj = idFileObj; _p->_TMSServ__UploadFileObject::startposition = startposition; _p->_TMSServ__UploadFileObject::compressed = compressed; } return _p; }

inline _TMSServ__UploadFileObject * soap_new_set__TMSServ__UploadFileObject(struct soap *soap, int sessionId, int idFileObj, int startposition, xsd__base64Binary *byteArr, bool compressed) { _TMSServ__UploadFileObject *_p = soap_instantiate__TMSServ__UploadFileObject(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_TMSServ__UploadFileObject::sessionId = sessionId; _p->_TMSServ__UploadFileObject::idFileObj = idFileObj; _p->_TMSServ__UploadFileObject::startposition = startposition; _p->_TMSServ__UploadFileObject::byteArr = byteArr; _p->_TMSServ__UploadFileObject::compressed = compressed; } return _p; }

inline void soap_delete__TMSServ__UploadFileObject(struct soap *soap, _TMSServ__UploadFileObject *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__TMSServ__UploadFileObject(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__TMSServ__DownloadFileByIdResponse
#define SOAP_TYPE__TMSServ__DownloadFileByIdResponse (35)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__TMSServ__DownloadFileByIdResponse(struct soap*, const char*, int, const _TMSServ__DownloadFileByIdResponse *, const char*);
SOAP_FMAC3 _TMSServ__DownloadFileByIdResponse * SOAP_FMAC4 soap_in__TMSServ__DownloadFileByIdResponse(struct soap*, const char*, _TMSServ__DownloadFileByIdResponse *, const char*);

#ifndef soap_write__TMSServ__DownloadFileByIdResponse
#define soap_write__TMSServ__DownloadFileByIdResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "TMSServ:DownloadFileByIdResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _TMSServ__DownloadFileByIdResponse * SOAP_FMAC4 soap_get__TMSServ__DownloadFileByIdResponse(struct soap*, _TMSServ__DownloadFileByIdResponse *, const char*, const char*);

#ifndef soap_read__TMSServ__DownloadFileByIdResponse
#define soap_read__TMSServ__DownloadFileByIdResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__TMSServ__DownloadFileByIdResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _TMSServ__DownloadFileByIdResponse * SOAP_FMAC2 soap_instantiate__TMSServ__DownloadFileByIdResponse(struct soap*, int, const char*, const char*, size_t*);

inline _TMSServ__DownloadFileByIdResponse * soap_new__TMSServ__DownloadFileByIdResponse(struct soap *soap, int n = -1) { return soap_instantiate__TMSServ__DownloadFileByIdResponse(soap, n, NULL, NULL, NULL); }

inline _TMSServ__DownloadFileByIdResponse * soap_new_req__TMSServ__DownloadFileByIdResponse(struct soap *soap) { _TMSServ__DownloadFileByIdResponse *_p = soap_instantiate__TMSServ__DownloadFileByIdResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _TMSServ__DownloadFileByIdResponse * soap_new_set__TMSServ__DownloadFileByIdResponse(struct soap *soap, xsd__base64Binary *DownloadFileByIdResult) { _TMSServ__DownloadFileByIdResponse *_p = soap_instantiate__TMSServ__DownloadFileByIdResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_TMSServ__DownloadFileByIdResponse::DownloadFileByIdResult = DownloadFileByIdResult; } return _p; }

inline void soap_delete__TMSServ__DownloadFileByIdResponse(struct soap *soap, _TMSServ__DownloadFileByIdResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__TMSServ__DownloadFileByIdResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__TMSServ__DownloadFileById
#define SOAP_TYPE__TMSServ__DownloadFileById (34)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__TMSServ__DownloadFileById(struct soap*, const char*, int, const _TMSServ__DownloadFileById *, const char*);
SOAP_FMAC3 _TMSServ__DownloadFileById * SOAP_FMAC4 soap_in__TMSServ__DownloadFileById(struct soap*, const char*, _TMSServ__DownloadFileById *, const char*);

#ifndef soap_write__TMSServ__DownloadFileById
#define soap_write__TMSServ__DownloadFileById(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "TMSServ:DownloadFileById", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _TMSServ__DownloadFileById * SOAP_FMAC4 soap_get__TMSServ__DownloadFileById(struct soap*, _TMSServ__DownloadFileById *, const char*, const char*);

#ifndef soap_read__TMSServ__DownloadFileById
#define soap_read__TMSServ__DownloadFileById(soap, data) ( soap_begin_recv(soap) || !soap_get__TMSServ__DownloadFileById(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _TMSServ__DownloadFileById * SOAP_FMAC2 soap_instantiate__TMSServ__DownloadFileById(struct soap*, int, const char*, const char*, size_t*);

inline _TMSServ__DownloadFileById * soap_new__TMSServ__DownloadFileById(struct soap *soap, int n = -1) { return soap_instantiate__TMSServ__DownloadFileById(soap, n, NULL, NULL, NULL); }

inline _TMSServ__DownloadFileById * soap_new_req__TMSServ__DownloadFileById(struct soap *soap, int sessionId, int fileId) { _TMSServ__DownloadFileById *_p = soap_instantiate__TMSServ__DownloadFileById(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_TMSServ__DownloadFileById::sessionId = sessionId; _p->_TMSServ__DownloadFileById::fileId = fileId; } return _p; }

inline _TMSServ__DownloadFileById * soap_new_set__TMSServ__DownloadFileById(struct soap *soap, int sessionId, char *clsName, int fileId) { _TMSServ__DownloadFileById *_p = soap_instantiate__TMSServ__DownloadFileById(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_TMSServ__DownloadFileById::sessionId = sessionId; _p->_TMSServ__DownloadFileById::clsName = clsName; _p->_TMSServ__DownloadFileById::fileId = fileId; } return _p; }

inline void soap_delete__TMSServ__DownloadFileById(struct soap *soap, _TMSServ__DownloadFileById *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__TMSServ__DownloadFileById(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__TMSServ__DeleteObjectResponse
#define SOAP_TYPE__TMSServ__DeleteObjectResponse (33)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__TMSServ__DeleteObjectResponse(struct soap*, const char*, int, const _TMSServ__DeleteObjectResponse *, const char*);
SOAP_FMAC3 _TMSServ__DeleteObjectResponse * SOAP_FMAC4 soap_in__TMSServ__DeleteObjectResponse(struct soap*, const char*, _TMSServ__DeleteObjectResponse *, const char*);

#ifndef soap_write__TMSServ__DeleteObjectResponse
#define soap_write__TMSServ__DeleteObjectResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "TMSServ:DeleteObjectResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _TMSServ__DeleteObjectResponse * SOAP_FMAC4 soap_get__TMSServ__DeleteObjectResponse(struct soap*, _TMSServ__DeleteObjectResponse *, const char*, const char*);

#ifndef soap_read__TMSServ__DeleteObjectResponse
#define soap_read__TMSServ__DeleteObjectResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__TMSServ__DeleteObjectResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _TMSServ__DeleteObjectResponse * SOAP_FMAC2 soap_instantiate__TMSServ__DeleteObjectResponse(struct soap*, int, const char*, const char*, size_t*);

inline _TMSServ__DeleteObjectResponse * soap_new__TMSServ__DeleteObjectResponse(struct soap *soap, int n = -1) { return soap_instantiate__TMSServ__DeleteObjectResponse(soap, n, NULL, NULL, NULL); }

inline _TMSServ__DeleteObjectResponse * soap_new_req__TMSServ__DeleteObjectResponse(struct soap *soap, bool DeleteObjectResult) { _TMSServ__DeleteObjectResponse *_p = soap_instantiate__TMSServ__DeleteObjectResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_TMSServ__DeleteObjectResponse::DeleteObjectResult = DeleteObjectResult; } return _p; }

inline _TMSServ__DeleteObjectResponse * soap_new_set__TMSServ__DeleteObjectResponse(struct soap *soap, bool DeleteObjectResult) { _TMSServ__DeleteObjectResponse *_p = soap_instantiate__TMSServ__DeleteObjectResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_TMSServ__DeleteObjectResponse::DeleteObjectResult = DeleteObjectResult; } return _p; }

inline void soap_delete__TMSServ__DeleteObjectResponse(struct soap *soap, _TMSServ__DeleteObjectResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__TMSServ__DeleteObjectResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__TMSServ__DeleteObject
#define SOAP_TYPE__TMSServ__DeleteObject (32)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__TMSServ__DeleteObject(struct soap*, const char*, int, const _TMSServ__DeleteObject *, const char*);
SOAP_FMAC3 _TMSServ__DeleteObject * SOAP_FMAC4 soap_in__TMSServ__DeleteObject(struct soap*, const char*, _TMSServ__DeleteObject *, const char*);

#ifndef soap_write__TMSServ__DeleteObject
#define soap_write__TMSServ__DeleteObject(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "TMSServ:DeleteObject", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _TMSServ__DeleteObject * SOAP_FMAC4 soap_get__TMSServ__DeleteObject(struct soap*, _TMSServ__DeleteObject *, const char*, const char*);

#ifndef soap_read__TMSServ__DeleteObject
#define soap_read__TMSServ__DeleteObject(soap, data) ( soap_begin_recv(soap) || !soap_get__TMSServ__DeleteObject(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _TMSServ__DeleteObject * SOAP_FMAC2 soap_instantiate__TMSServ__DeleteObject(struct soap*, int, const char*, const char*, size_t*);

inline _TMSServ__DeleteObject * soap_new__TMSServ__DeleteObject(struct soap *soap, int n = -1) { return soap_instantiate__TMSServ__DeleteObject(soap, n, NULL, NULL, NULL); }

inline _TMSServ__DeleteObject * soap_new_req__TMSServ__DeleteObject(struct soap *soap, int sessionId, int objId) { _TMSServ__DeleteObject *_p = soap_instantiate__TMSServ__DeleteObject(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_TMSServ__DeleteObject::sessionId = sessionId; _p->_TMSServ__DeleteObject::objId = objId; } return _p; }

inline _TMSServ__DeleteObject * soap_new_set__TMSServ__DeleteObject(struct soap *soap, int sessionId, char *clsName, int objId) { _TMSServ__DeleteObject *_p = soap_instantiate__TMSServ__DeleteObject(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_TMSServ__DeleteObject::sessionId = sessionId; _p->_TMSServ__DeleteObject::clsName = clsName; _p->_TMSServ__DeleteObject::objId = objId; } return _p; }

inline void soap_delete__TMSServ__DeleteObject(struct soap *soap, _TMSServ__DeleteObject *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__TMSServ__DeleteObject(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__TMSServ__SaveOrUpdateObjectsResponse
#define SOAP_TYPE__TMSServ__SaveOrUpdateObjectsResponse (31)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__TMSServ__SaveOrUpdateObjectsResponse(struct soap*, const char*, int, const _TMSServ__SaveOrUpdateObjectsResponse *, const char*);
SOAP_FMAC3 _TMSServ__SaveOrUpdateObjectsResponse * SOAP_FMAC4 soap_in__TMSServ__SaveOrUpdateObjectsResponse(struct soap*, const char*, _TMSServ__SaveOrUpdateObjectsResponse *, const char*);

#ifndef soap_write__TMSServ__SaveOrUpdateObjectsResponse
#define soap_write__TMSServ__SaveOrUpdateObjectsResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "TMSServ:SaveOrUpdateObjectsResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _TMSServ__SaveOrUpdateObjectsResponse * SOAP_FMAC4 soap_get__TMSServ__SaveOrUpdateObjectsResponse(struct soap*, _TMSServ__SaveOrUpdateObjectsResponse *, const char*, const char*);

#ifndef soap_read__TMSServ__SaveOrUpdateObjectsResponse
#define soap_read__TMSServ__SaveOrUpdateObjectsResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__TMSServ__SaveOrUpdateObjectsResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _TMSServ__SaveOrUpdateObjectsResponse * SOAP_FMAC2 soap_instantiate__TMSServ__SaveOrUpdateObjectsResponse(struct soap*, int, const char*, const char*, size_t*);

inline _TMSServ__SaveOrUpdateObjectsResponse * soap_new__TMSServ__SaveOrUpdateObjectsResponse(struct soap *soap, int n = -1) { return soap_instantiate__TMSServ__SaveOrUpdateObjectsResponse(soap, n, NULL, NULL, NULL); }

inline _TMSServ__SaveOrUpdateObjectsResponse * soap_new_req__TMSServ__SaveOrUpdateObjectsResponse(struct soap *soap) { _TMSServ__SaveOrUpdateObjectsResponse *_p = soap_instantiate__TMSServ__SaveOrUpdateObjectsResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _TMSServ__SaveOrUpdateObjectsResponse * soap_new_set__TMSServ__SaveOrUpdateObjectsResponse(struct soap *soap, char *SaveOrUpdateObjectsResult) { _TMSServ__SaveOrUpdateObjectsResponse *_p = soap_instantiate__TMSServ__SaveOrUpdateObjectsResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_TMSServ__SaveOrUpdateObjectsResponse::SaveOrUpdateObjectsResult = SaveOrUpdateObjectsResult; } return _p; }

inline void soap_delete__TMSServ__SaveOrUpdateObjectsResponse(struct soap *soap, _TMSServ__SaveOrUpdateObjectsResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__TMSServ__SaveOrUpdateObjectsResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__TMSServ__SaveOrUpdateObjects
#define SOAP_TYPE__TMSServ__SaveOrUpdateObjects (30)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__TMSServ__SaveOrUpdateObjects(struct soap*, const char*, int, const _TMSServ__SaveOrUpdateObjects *, const char*);
SOAP_FMAC3 _TMSServ__SaveOrUpdateObjects * SOAP_FMAC4 soap_in__TMSServ__SaveOrUpdateObjects(struct soap*, const char*, _TMSServ__SaveOrUpdateObjects *, const char*);

#ifndef soap_write__TMSServ__SaveOrUpdateObjects
#define soap_write__TMSServ__SaveOrUpdateObjects(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "TMSServ:SaveOrUpdateObjects", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _TMSServ__SaveOrUpdateObjects * SOAP_FMAC4 soap_get__TMSServ__SaveOrUpdateObjects(struct soap*, _TMSServ__SaveOrUpdateObjects *, const char*, const char*);

#ifndef soap_read__TMSServ__SaveOrUpdateObjects
#define soap_read__TMSServ__SaveOrUpdateObjects(soap, data) ( soap_begin_recv(soap) || !soap_get__TMSServ__SaveOrUpdateObjects(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _TMSServ__SaveOrUpdateObjects * SOAP_FMAC2 soap_instantiate__TMSServ__SaveOrUpdateObjects(struct soap*, int, const char*, const char*, size_t*);

inline _TMSServ__SaveOrUpdateObjects * soap_new__TMSServ__SaveOrUpdateObjects(struct soap *soap, int n = -1) { return soap_instantiate__TMSServ__SaveOrUpdateObjects(soap, n, NULL, NULL, NULL); }

inline _TMSServ__SaveOrUpdateObjects * soap_new_req__TMSServ__SaveOrUpdateObjects(struct soap *soap, int sessionId) { _TMSServ__SaveOrUpdateObjects *_p = soap_instantiate__TMSServ__SaveOrUpdateObjects(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_TMSServ__SaveOrUpdateObjects::sessionId = sessionId; } return _p; }

inline _TMSServ__SaveOrUpdateObjects * soap_new_set__TMSServ__SaveOrUpdateObjects(struct soap *soap, int sessionId, char *clsName, char *xmlformat, xsd__base64Binary *byteArr) { _TMSServ__SaveOrUpdateObjects *_p = soap_instantiate__TMSServ__SaveOrUpdateObjects(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_TMSServ__SaveOrUpdateObjects::sessionId = sessionId; _p->_TMSServ__SaveOrUpdateObjects::clsName = clsName; _p->_TMSServ__SaveOrUpdateObjects::xmlformat = xmlformat; _p->_TMSServ__SaveOrUpdateObjects::byteArr = byteArr; } return _p; }

inline void soap_delete__TMSServ__SaveOrUpdateObjects(struct soap *soap, _TMSServ__SaveOrUpdateObjects *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__TMSServ__SaveOrUpdateObjects(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__TMSServ__MatchTowerPartsResponse
#define SOAP_TYPE__TMSServ__MatchTowerPartsResponse (29)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__TMSServ__MatchTowerPartsResponse(struct soap*, const char*, int, const _TMSServ__MatchTowerPartsResponse *, const char*);
SOAP_FMAC3 _TMSServ__MatchTowerPartsResponse * SOAP_FMAC4 soap_in__TMSServ__MatchTowerPartsResponse(struct soap*, const char*, _TMSServ__MatchTowerPartsResponse *, const char*);

#ifndef soap_write__TMSServ__MatchTowerPartsResponse
#define soap_write__TMSServ__MatchTowerPartsResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "TMSServ:MatchTowerPartsResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _TMSServ__MatchTowerPartsResponse * SOAP_FMAC4 soap_get__TMSServ__MatchTowerPartsResponse(struct soap*, _TMSServ__MatchTowerPartsResponse *, const char*, const char*);

#ifndef soap_read__TMSServ__MatchTowerPartsResponse
#define soap_read__TMSServ__MatchTowerPartsResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__TMSServ__MatchTowerPartsResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _TMSServ__MatchTowerPartsResponse * SOAP_FMAC2 soap_instantiate__TMSServ__MatchTowerPartsResponse(struct soap*, int, const char*, const char*, size_t*);

inline _TMSServ__MatchTowerPartsResponse * soap_new__TMSServ__MatchTowerPartsResponse(struct soap *soap, int n = -1) { return soap_instantiate__TMSServ__MatchTowerPartsResponse(soap, n, NULL, NULL, NULL); }

inline _TMSServ__MatchTowerPartsResponse * soap_new_req__TMSServ__MatchTowerPartsResponse(struct soap *soap) { _TMSServ__MatchTowerPartsResponse *_p = soap_instantiate__TMSServ__MatchTowerPartsResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _TMSServ__MatchTowerPartsResponse * soap_new_set__TMSServ__MatchTowerPartsResponse(struct soap *soap, char *MatchTowerPartsResult) { _TMSServ__MatchTowerPartsResponse *_p = soap_instantiate__TMSServ__MatchTowerPartsResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_TMSServ__MatchTowerPartsResponse::MatchTowerPartsResult = MatchTowerPartsResult; } return _p; }

inline void soap_delete__TMSServ__MatchTowerPartsResponse(struct soap *soap, _TMSServ__MatchTowerPartsResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__TMSServ__MatchTowerPartsResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__TMSServ__MatchTowerParts
#define SOAP_TYPE__TMSServ__MatchTowerParts (28)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__TMSServ__MatchTowerParts(struct soap*, const char*, int, const _TMSServ__MatchTowerParts *, const char*);
SOAP_FMAC3 _TMSServ__MatchTowerParts * SOAP_FMAC4 soap_in__TMSServ__MatchTowerParts(struct soap*, const char*, _TMSServ__MatchTowerParts *, const char*);

#ifndef soap_write__TMSServ__MatchTowerParts
#define soap_write__TMSServ__MatchTowerParts(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "TMSServ:MatchTowerParts", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _TMSServ__MatchTowerParts * SOAP_FMAC4 soap_get__TMSServ__MatchTowerParts(struct soap*, _TMSServ__MatchTowerParts *, const char*, const char*);

#ifndef soap_read__TMSServ__MatchTowerParts
#define soap_read__TMSServ__MatchTowerParts(soap, data) ( soap_begin_recv(soap) || !soap_get__TMSServ__MatchTowerParts(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _TMSServ__MatchTowerParts * SOAP_FMAC2 soap_instantiate__TMSServ__MatchTowerParts(struct soap*, int, const char*, const char*, size_t*);

inline _TMSServ__MatchTowerParts * soap_new__TMSServ__MatchTowerParts(struct soap *soap, int n = -1) { return soap_instantiate__TMSServ__MatchTowerParts(soap, n, NULL, NULL, NULL); }

inline _TMSServ__MatchTowerParts * soap_new_req__TMSServ__MatchTowerParts(struct soap *soap, int sessionId) { _TMSServ__MatchTowerParts *_p = soap_instantiate__TMSServ__MatchTowerParts(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_TMSServ__MatchTowerParts::sessionId = sessionId; } return _p; }

inline _TMSServ__MatchTowerParts * soap_new_set__TMSServ__MatchTowerParts(struct soap *soap, int sessionId, char *xmlformat, xsd__base64Binary *byteArr) { _TMSServ__MatchTowerParts *_p = soap_instantiate__TMSServ__MatchTowerParts(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_TMSServ__MatchTowerParts::sessionId = sessionId; _p->_TMSServ__MatchTowerParts::xmlformat = xmlformat; _p->_TMSServ__MatchTowerParts::byteArr = byteArr; } return _p; }

inline void soap_delete__TMSServ__MatchTowerParts(struct soap *soap, _TMSServ__MatchTowerParts *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__TMSServ__MatchTowerParts(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__TMSServ__GetTowerPartsLabelAndVersionSerialResponse
#define SOAP_TYPE__TMSServ__GetTowerPartsLabelAndVersionSerialResponse (27)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__TMSServ__GetTowerPartsLabelAndVersionSerialResponse(struct soap*, const char*, int, const _TMSServ__GetTowerPartsLabelAndVersionSerialResponse *, const char*);
SOAP_FMAC3 _TMSServ__GetTowerPartsLabelAndVersionSerialResponse * SOAP_FMAC4 soap_in__TMSServ__GetTowerPartsLabelAndVersionSerialResponse(struct soap*, const char*, _TMSServ__GetTowerPartsLabelAndVersionSerialResponse *, const char*);

#ifndef soap_write__TMSServ__GetTowerPartsLabelAndVersionSerialResponse
#define soap_write__TMSServ__GetTowerPartsLabelAndVersionSerialResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "TMSServ:GetTowerPartsLabelAndVersionSerialResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _TMSServ__GetTowerPartsLabelAndVersionSerialResponse * SOAP_FMAC4 soap_get__TMSServ__GetTowerPartsLabelAndVersionSerialResponse(struct soap*, _TMSServ__GetTowerPartsLabelAndVersionSerialResponse *, const char*, const char*);

#ifndef soap_read__TMSServ__GetTowerPartsLabelAndVersionSerialResponse
#define soap_read__TMSServ__GetTowerPartsLabelAndVersionSerialResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__TMSServ__GetTowerPartsLabelAndVersionSerialResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _TMSServ__GetTowerPartsLabelAndVersionSerialResponse * SOAP_FMAC2 soap_instantiate__TMSServ__GetTowerPartsLabelAndVersionSerialResponse(struct soap*, int, const char*, const char*, size_t*);

inline _TMSServ__GetTowerPartsLabelAndVersionSerialResponse * soap_new__TMSServ__GetTowerPartsLabelAndVersionSerialResponse(struct soap *soap, int n = -1) { return soap_instantiate__TMSServ__GetTowerPartsLabelAndVersionSerialResponse(soap, n, NULL, NULL, NULL); }

inline _TMSServ__GetTowerPartsLabelAndVersionSerialResponse * soap_new_req__TMSServ__GetTowerPartsLabelAndVersionSerialResponse(struct soap *soap) { _TMSServ__GetTowerPartsLabelAndVersionSerialResponse *_p = soap_instantiate__TMSServ__GetTowerPartsLabelAndVersionSerialResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _TMSServ__GetTowerPartsLabelAndVersionSerialResponse * soap_new_set__TMSServ__GetTowerPartsLabelAndVersionSerialResponse(struct soap *soap, xsd__base64Binary *GetTowerPartsLabelAndVersionSerialResult) { _TMSServ__GetTowerPartsLabelAndVersionSerialResponse *_p = soap_instantiate__TMSServ__GetTowerPartsLabelAndVersionSerialResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_TMSServ__GetTowerPartsLabelAndVersionSerialResponse::GetTowerPartsLabelAndVersionSerialResult = GetTowerPartsLabelAndVersionSerialResult; } return _p; }

inline void soap_delete__TMSServ__GetTowerPartsLabelAndVersionSerialResponse(struct soap *soap, _TMSServ__GetTowerPartsLabelAndVersionSerialResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__TMSServ__GetTowerPartsLabelAndVersionSerialResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__TMSServ__GetTowerPartsLabelAndVersionSerial
#define SOAP_TYPE__TMSServ__GetTowerPartsLabelAndVersionSerial (26)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__TMSServ__GetTowerPartsLabelAndVersionSerial(struct soap*, const char*, int, const _TMSServ__GetTowerPartsLabelAndVersionSerial *, const char*);
SOAP_FMAC3 _TMSServ__GetTowerPartsLabelAndVersionSerial * SOAP_FMAC4 soap_in__TMSServ__GetTowerPartsLabelAndVersionSerial(struct soap*, const char*, _TMSServ__GetTowerPartsLabelAndVersionSerial *, const char*);

#ifndef soap_write__TMSServ__GetTowerPartsLabelAndVersionSerial
#define soap_write__TMSServ__GetTowerPartsLabelAndVersionSerial(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "TMSServ:GetTowerPartsLabelAndVersionSerial", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _TMSServ__GetTowerPartsLabelAndVersionSerial * SOAP_FMAC4 soap_get__TMSServ__GetTowerPartsLabelAndVersionSerial(struct soap*, _TMSServ__GetTowerPartsLabelAndVersionSerial *, const char*, const char*);

#ifndef soap_read__TMSServ__GetTowerPartsLabelAndVersionSerial
#define soap_read__TMSServ__GetTowerPartsLabelAndVersionSerial(soap, data) ( soap_begin_recv(soap) || !soap_get__TMSServ__GetTowerPartsLabelAndVersionSerial(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _TMSServ__GetTowerPartsLabelAndVersionSerial * SOAP_FMAC2 soap_instantiate__TMSServ__GetTowerPartsLabelAndVersionSerial(struct soap*, int, const char*, const char*, size_t*);

inline _TMSServ__GetTowerPartsLabelAndVersionSerial * soap_new__TMSServ__GetTowerPartsLabelAndVersionSerial(struct soap *soap, int n = -1) { return soap_instantiate__TMSServ__GetTowerPartsLabelAndVersionSerial(soap, n, NULL, NULL, NULL); }

inline _TMSServ__GetTowerPartsLabelAndVersionSerial * soap_new_req__TMSServ__GetTowerPartsLabelAndVersionSerial(struct soap *soap, int sessionId, int towerTypeId) { _TMSServ__GetTowerPartsLabelAndVersionSerial *_p = soap_instantiate__TMSServ__GetTowerPartsLabelAndVersionSerial(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_TMSServ__GetTowerPartsLabelAndVersionSerial::sessionId = sessionId; _p->_TMSServ__GetTowerPartsLabelAndVersionSerial::towerTypeId = towerTypeId; } return _p; }

inline _TMSServ__GetTowerPartsLabelAndVersionSerial * soap_new_set__TMSServ__GetTowerPartsLabelAndVersionSerial(struct soap *soap, int sessionId, int towerTypeId) { _TMSServ__GetTowerPartsLabelAndVersionSerial *_p = soap_instantiate__TMSServ__GetTowerPartsLabelAndVersionSerial(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_TMSServ__GetTowerPartsLabelAndVersionSerial::sessionId = sessionId; _p->_TMSServ__GetTowerPartsLabelAndVersionSerial::towerTypeId = towerTypeId; } return _p; }

inline void soap_delete__TMSServ__GetTowerPartsLabelAndVersionSerial(struct soap *soap, _TMSServ__GetTowerPartsLabelAndVersionSerial *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__TMSServ__GetTowerPartsLabelAndVersionSerial(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__TMSServ__GetObjectsVersionResponse
#define SOAP_TYPE__TMSServ__GetObjectsVersionResponse (25)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__TMSServ__GetObjectsVersionResponse(struct soap*, const char*, int, const _TMSServ__GetObjectsVersionResponse *, const char*);
SOAP_FMAC3 _TMSServ__GetObjectsVersionResponse * SOAP_FMAC4 soap_in__TMSServ__GetObjectsVersionResponse(struct soap*, const char*, _TMSServ__GetObjectsVersionResponse *, const char*);

#ifndef soap_write__TMSServ__GetObjectsVersionResponse
#define soap_write__TMSServ__GetObjectsVersionResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "TMSServ:GetObjectsVersionResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _TMSServ__GetObjectsVersionResponse * SOAP_FMAC4 soap_get__TMSServ__GetObjectsVersionResponse(struct soap*, _TMSServ__GetObjectsVersionResponse *, const char*, const char*);

#ifndef soap_read__TMSServ__GetObjectsVersionResponse
#define soap_read__TMSServ__GetObjectsVersionResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__TMSServ__GetObjectsVersionResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _TMSServ__GetObjectsVersionResponse * SOAP_FMAC2 soap_instantiate__TMSServ__GetObjectsVersionResponse(struct soap*, int, const char*, const char*, size_t*);

inline _TMSServ__GetObjectsVersionResponse * soap_new__TMSServ__GetObjectsVersionResponse(struct soap *soap, int n = -1) { return soap_instantiate__TMSServ__GetObjectsVersionResponse(soap, n, NULL, NULL, NULL); }

inline _TMSServ__GetObjectsVersionResponse * soap_new_req__TMSServ__GetObjectsVersionResponse(struct soap *soap) { _TMSServ__GetObjectsVersionResponse *_p = soap_instantiate__TMSServ__GetObjectsVersionResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _TMSServ__GetObjectsVersionResponse * soap_new_set__TMSServ__GetObjectsVersionResponse(struct soap *soap, TMSServ__ArrayOfUnsignedInt *GetObjectsVersionResult) { _TMSServ__GetObjectsVersionResponse *_p = soap_instantiate__TMSServ__GetObjectsVersionResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_TMSServ__GetObjectsVersionResponse::GetObjectsVersionResult = GetObjectsVersionResult; } return _p; }

inline void soap_delete__TMSServ__GetObjectsVersionResponse(struct soap *soap, _TMSServ__GetObjectsVersionResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__TMSServ__GetObjectsVersionResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__TMSServ__GetObjectsVersion
#define SOAP_TYPE__TMSServ__GetObjectsVersion (24)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__TMSServ__GetObjectsVersion(struct soap*, const char*, int, const _TMSServ__GetObjectsVersion *, const char*);
SOAP_FMAC3 _TMSServ__GetObjectsVersion * SOAP_FMAC4 soap_in__TMSServ__GetObjectsVersion(struct soap*, const char*, _TMSServ__GetObjectsVersion *, const char*);

#ifndef soap_write__TMSServ__GetObjectsVersion
#define soap_write__TMSServ__GetObjectsVersion(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "TMSServ:GetObjectsVersion", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _TMSServ__GetObjectsVersion * SOAP_FMAC4 soap_get__TMSServ__GetObjectsVersion(struct soap*, _TMSServ__GetObjectsVersion *, const char*, const char*);

#ifndef soap_read__TMSServ__GetObjectsVersion
#define soap_read__TMSServ__GetObjectsVersion(soap, data) ( soap_begin_recv(soap) || !soap_get__TMSServ__GetObjectsVersion(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _TMSServ__GetObjectsVersion * SOAP_FMAC2 soap_instantiate__TMSServ__GetObjectsVersion(struct soap*, int, const char*, const char*, size_t*);

inline _TMSServ__GetObjectsVersion * soap_new__TMSServ__GetObjectsVersion(struct soap *soap, int n = -1) { return soap_instantiate__TMSServ__GetObjectsVersion(soap, n, NULL, NULL, NULL); }

inline _TMSServ__GetObjectsVersion * soap_new_req__TMSServ__GetObjectsVersion(struct soap *soap, int sessionId) { _TMSServ__GetObjectsVersion *_p = soap_instantiate__TMSServ__GetObjectsVersion(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_TMSServ__GetObjectsVersion::sessionId = sessionId; } return _p; }

inline _TMSServ__GetObjectsVersion * soap_new_set__TMSServ__GetObjectsVersion(struct soap *soap, int sessionId, char *clsName, TMSServ__ArrayOfInt *idarr) { _TMSServ__GetObjectsVersion *_p = soap_instantiate__TMSServ__GetObjectsVersion(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_TMSServ__GetObjectsVersion::sessionId = sessionId; _p->_TMSServ__GetObjectsVersion::clsName = clsName; _p->_TMSServ__GetObjectsVersion::idarr = idarr; } return _p; }

inline void soap_delete__TMSServ__GetObjectsVersion(struct soap *soap, _TMSServ__GetObjectsVersion *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__TMSServ__GetObjectsVersion(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__TMSServ__DownloadObjectsResponse
#define SOAP_TYPE__TMSServ__DownloadObjectsResponse (23)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__TMSServ__DownloadObjectsResponse(struct soap*, const char*, int, const _TMSServ__DownloadObjectsResponse *, const char*);
SOAP_FMAC3 _TMSServ__DownloadObjectsResponse * SOAP_FMAC4 soap_in__TMSServ__DownloadObjectsResponse(struct soap*, const char*, _TMSServ__DownloadObjectsResponse *, const char*);

#ifndef soap_write__TMSServ__DownloadObjectsResponse
#define soap_write__TMSServ__DownloadObjectsResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "TMSServ:DownloadObjectsResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _TMSServ__DownloadObjectsResponse * SOAP_FMAC4 soap_get__TMSServ__DownloadObjectsResponse(struct soap*, _TMSServ__DownloadObjectsResponse *, const char*, const char*);

#ifndef soap_read__TMSServ__DownloadObjectsResponse
#define soap_read__TMSServ__DownloadObjectsResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__TMSServ__DownloadObjectsResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _TMSServ__DownloadObjectsResponse * SOAP_FMAC2 soap_instantiate__TMSServ__DownloadObjectsResponse(struct soap*, int, const char*, const char*, size_t*);

inline _TMSServ__DownloadObjectsResponse * soap_new__TMSServ__DownloadObjectsResponse(struct soap *soap, int n = -1) { return soap_instantiate__TMSServ__DownloadObjectsResponse(soap, n, NULL, NULL, NULL); }

inline _TMSServ__DownloadObjectsResponse * soap_new_req__TMSServ__DownloadObjectsResponse(struct soap *soap) { _TMSServ__DownloadObjectsResponse *_p = soap_instantiate__TMSServ__DownloadObjectsResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _TMSServ__DownloadObjectsResponse * soap_new_set__TMSServ__DownloadObjectsResponse(struct soap *soap, xsd__base64Binary *DownloadObjectsResult) { _TMSServ__DownloadObjectsResponse *_p = soap_instantiate__TMSServ__DownloadObjectsResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_TMSServ__DownloadObjectsResponse::DownloadObjectsResult = DownloadObjectsResult; } return _p; }

inline void soap_delete__TMSServ__DownloadObjectsResponse(struct soap *soap, _TMSServ__DownloadObjectsResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__TMSServ__DownloadObjectsResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__TMSServ__DownloadObjects
#define SOAP_TYPE__TMSServ__DownloadObjects (22)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__TMSServ__DownloadObjects(struct soap*, const char*, int, const _TMSServ__DownloadObjects *, const char*);
SOAP_FMAC3 _TMSServ__DownloadObjects * SOAP_FMAC4 soap_in__TMSServ__DownloadObjects(struct soap*, const char*, _TMSServ__DownloadObjects *, const char*);

#ifndef soap_write__TMSServ__DownloadObjects
#define soap_write__TMSServ__DownloadObjects(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "TMSServ:DownloadObjects", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _TMSServ__DownloadObjects * SOAP_FMAC4 soap_get__TMSServ__DownloadObjects(struct soap*, _TMSServ__DownloadObjects *, const char*, const char*);

#ifndef soap_read__TMSServ__DownloadObjects
#define soap_read__TMSServ__DownloadObjects(soap, data) ( soap_begin_recv(soap) || !soap_get__TMSServ__DownloadObjects(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _TMSServ__DownloadObjects * SOAP_FMAC2 soap_instantiate__TMSServ__DownloadObjects(struct soap*, int, const char*, const char*, size_t*);

inline _TMSServ__DownloadObjects * soap_new__TMSServ__DownloadObjects(struct soap *soap, int n = -1) { return soap_instantiate__TMSServ__DownloadObjects(soap, n, NULL, NULL, NULL); }

inline _TMSServ__DownloadObjects * soap_new_req__TMSServ__DownloadObjects(struct soap *soap, int sessionId, unsigned int serialize) { _TMSServ__DownloadObjects *_p = soap_instantiate__TMSServ__DownloadObjects(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_TMSServ__DownloadObjects::sessionId = sessionId; _p->_TMSServ__DownloadObjects::serialize = serialize; } return _p; }

inline _TMSServ__DownloadObjects * soap_new_set__TMSServ__DownloadObjects(struct soap *soap, int sessionId, char *clsName, TMSServ__ArrayOfInt *idarr, unsigned int serialize) { _TMSServ__DownloadObjects *_p = soap_instantiate__TMSServ__DownloadObjects(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_TMSServ__DownloadObjects::sessionId = sessionId; _p->_TMSServ__DownloadObjects::clsName = clsName; _p->_TMSServ__DownloadObjects::idarr = idarr; _p->_TMSServ__DownloadObjects::serialize = serialize; } return _p; }

inline void soap_delete__TMSServ__DownloadObjects(struct soap *soap, _TMSServ__DownloadObjects *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__TMSServ__DownloadObjects(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__TMSServ__QueryObjectsResponse
#define SOAP_TYPE__TMSServ__QueryObjectsResponse (21)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__TMSServ__QueryObjectsResponse(struct soap*, const char*, int, const _TMSServ__QueryObjectsResponse *, const char*);
SOAP_FMAC3 _TMSServ__QueryObjectsResponse * SOAP_FMAC4 soap_in__TMSServ__QueryObjectsResponse(struct soap*, const char*, _TMSServ__QueryObjectsResponse *, const char*);

#ifndef soap_write__TMSServ__QueryObjectsResponse
#define soap_write__TMSServ__QueryObjectsResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "TMSServ:QueryObjectsResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _TMSServ__QueryObjectsResponse * SOAP_FMAC4 soap_get__TMSServ__QueryObjectsResponse(struct soap*, _TMSServ__QueryObjectsResponse *, const char*, const char*);

#ifndef soap_read__TMSServ__QueryObjectsResponse
#define soap_read__TMSServ__QueryObjectsResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__TMSServ__QueryObjectsResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _TMSServ__QueryObjectsResponse * SOAP_FMAC2 soap_instantiate__TMSServ__QueryObjectsResponse(struct soap*, int, const char*, const char*, size_t*);

inline _TMSServ__QueryObjectsResponse * soap_new__TMSServ__QueryObjectsResponse(struct soap *soap, int n = -1) { return soap_instantiate__TMSServ__QueryObjectsResponse(soap, n, NULL, NULL, NULL); }

inline _TMSServ__QueryObjectsResponse * soap_new_req__TMSServ__QueryObjectsResponse(struct soap *soap) { _TMSServ__QueryObjectsResponse *_p = soap_instantiate__TMSServ__QueryObjectsResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _TMSServ__QueryObjectsResponse * soap_new_set__TMSServ__QueryObjectsResponse(struct soap *soap, xsd__base64Binary *QueryObjectsResult) { _TMSServ__QueryObjectsResponse *_p = soap_instantiate__TMSServ__QueryObjectsResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_TMSServ__QueryObjectsResponse::QueryObjectsResult = QueryObjectsResult; } return _p; }

inline void soap_delete__TMSServ__QueryObjectsResponse(struct soap *soap, _TMSServ__QueryObjectsResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__TMSServ__QueryObjectsResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__TMSServ__QueryObjects
#define SOAP_TYPE__TMSServ__QueryObjects (20)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__TMSServ__QueryObjects(struct soap*, const char*, int, const _TMSServ__QueryObjects *, const char*);
SOAP_FMAC3 _TMSServ__QueryObjects * SOAP_FMAC4 soap_in__TMSServ__QueryObjects(struct soap*, const char*, _TMSServ__QueryObjects *, const char*);

#ifndef soap_write__TMSServ__QueryObjects
#define soap_write__TMSServ__QueryObjects(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "TMSServ:QueryObjects", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _TMSServ__QueryObjects * SOAP_FMAC4 soap_get__TMSServ__QueryObjects(struct soap*, _TMSServ__QueryObjects *, const char*, const char*);

#ifndef soap_read__TMSServ__QueryObjects
#define soap_read__TMSServ__QueryObjects(soap, data) ( soap_begin_recv(soap) || !soap_get__TMSServ__QueryObjects(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _TMSServ__QueryObjects * SOAP_FMAC2 soap_instantiate__TMSServ__QueryObjects(struct soap*, int, const char*, const char*, size_t*);

inline _TMSServ__QueryObjects * soap_new__TMSServ__QueryObjects(struct soap *soap, int n = -1) { return soap_instantiate__TMSServ__QueryObjects(soap, n, NULL, NULL, NULL); }

inline _TMSServ__QueryObjects * soap_new_req__TMSServ__QueryObjects(struct soap *soap, int sessionId) { _TMSServ__QueryObjects *_p = soap_instantiate__TMSServ__QueryObjects(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_TMSServ__QueryObjects::sessionId = sessionId; } return _p; }

inline _TMSServ__QueryObjects * soap_new_set__TMSServ__QueryObjects(struct soap *soap, int sessionId, char *clsName, char *xmlScope) { _TMSServ__QueryObjects *_p = soap_instantiate__TMSServ__QueryObjects(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_TMSServ__QueryObjects::sessionId = sessionId; _p->_TMSServ__QueryObjects::clsName = clsName; _p->_TMSServ__QueryObjects::xmlScope = xmlScope; } return _p; }

inline void soap_delete__TMSServ__QueryObjects(struct soap *soap, _TMSServ__QueryObjects *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__TMSServ__QueryObjects(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__TMSServ__logoutUserResponse
#define SOAP_TYPE__TMSServ__logoutUserResponse (19)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__TMSServ__logoutUserResponse(struct soap*, const char*, int, const _TMSServ__logoutUserResponse *, const char*);
SOAP_FMAC3 _TMSServ__logoutUserResponse * SOAP_FMAC4 soap_in__TMSServ__logoutUserResponse(struct soap*, const char*, _TMSServ__logoutUserResponse *, const char*);

#ifndef soap_write__TMSServ__logoutUserResponse
#define soap_write__TMSServ__logoutUserResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "TMSServ:logoutUserResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _TMSServ__logoutUserResponse * SOAP_FMAC4 soap_get__TMSServ__logoutUserResponse(struct soap*, _TMSServ__logoutUserResponse *, const char*, const char*);

#ifndef soap_read__TMSServ__logoutUserResponse
#define soap_read__TMSServ__logoutUserResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__TMSServ__logoutUserResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _TMSServ__logoutUserResponse * SOAP_FMAC2 soap_instantiate__TMSServ__logoutUserResponse(struct soap*, int, const char*, const char*, size_t*);

inline _TMSServ__logoutUserResponse * soap_new__TMSServ__logoutUserResponse(struct soap *soap, int n = -1) { return soap_instantiate__TMSServ__logoutUserResponse(soap, n, NULL, NULL, NULL); }

inline _TMSServ__logoutUserResponse * soap_new_req__TMSServ__logoutUserResponse(struct soap *soap, int logoutUserResult) { _TMSServ__logoutUserResponse *_p = soap_instantiate__TMSServ__logoutUserResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_TMSServ__logoutUserResponse::logoutUserResult = logoutUserResult; } return _p; }

inline _TMSServ__logoutUserResponse * soap_new_set__TMSServ__logoutUserResponse(struct soap *soap, int logoutUserResult) { _TMSServ__logoutUserResponse *_p = soap_instantiate__TMSServ__logoutUserResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_TMSServ__logoutUserResponse::logoutUserResult = logoutUserResult; } return _p; }

inline void soap_delete__TMSServ__logoutUserResponse(struct soap *soap, _TMSServ__logoutUserResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__TMSServ__logoutUserResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__TMSServ__logoutUser
#define SOAP_TYPE__TMSServ__logoutUser (18)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__TMSServ__logoutUser(struct soap*, const char*, int, const _TMSServ__logoutUser *, const char*);
SOAP_FMAC3 _TMSServ__logoutUser * SOAP_FMAC4 soap_in__TMSServ__logoutUser(struct soap*, const char*, _TMSServ__logoutUser *, const char*);

#ifndef soap_write__TMSServ__logoutUser
#define soap_write__TMSServ__logoutUser(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "TMSServ:logoutUser", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _TMSServ__logoutUser * SOAP_FMAC4 soap_get__TMSServ__logoutUser(struct soap*, _TMSServ__logoutUser *, const char*, const char*);

#ifndef soap_read__TMSServ__logoutUser
#define soap_read__TMSServ__logoutUser(soap, data) ( soap_begin_recv(soap) || !soap_get__TMSServ__logoutUser(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _TMSServ__logoutUser * SOAP_FMAC2 soap_instantiate__TMSServ__logoutUser(struct soap*, int, const char*, const char*, size_t*);

inline _TMSServ__logoutUser * soap_new__TMSServ__logoutUser(struct soap *soap, int n = -1) { return soap_instantiate__TMSServ__logoutUser(soap, n, NULL, NULL, NULL); }

inline _TMSServ__logoutUser * soap_new_req__TMSServ__logoutUser(struct soap *soap, int sessionId) { _TMSServ__logoutUser *_p = soap_instantiate__TMSServ__logoutUser(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_TMSServ__logoutUser::sessionId = sessionId; } return _p; }

inline _TMSServ__logoutUser * soap_new_set__TMSServ__logoutUser(struct soap *soap, int sessionId) { _TMSServ__logoutUser *_p = soap_instantiate__TMSServ__logoutUser(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_TMSServ__logoutUser::sessionId = sessionId; } return _p; }

inline void soap_delete__TMSServ__logoutUser(struct soap *soap, _TMSServ__logoutUser *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__TMSServ__logoutUser(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__TMSServ__loginUserByByteArrResponse
#define SOAP_TYPE__TMSServ__loginUserByByteArrResponse (17)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__TMSServ__loginUserByByteArrResponse(struct soap*, const char*, int, const _TMSServ__loginUserByByteArrResponse *, const char*);
SOAP_FMAC3 _TMSServ__loginUserByByteArrResponse * SOAP_FMAC4 soap_in__TMSServ__loginUserByByteArrResponse(struct soap*, const char*, _TMSServ__loginUserByByteArrResponse *, const char*);

#ifndef soap_write__TMSServ__loginUserByByteArrResponse
#define soap_write__TMSServ__loginUserByByteArrResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "TMSServ:loginUserByByteArrResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _TMSServ__loginUserByByteArrResponse * SOAP_FMAC4 soap_get__TMSServ__loginUserByByteArrResponse(struct soap*, _TMSServ__loginUserByByteArrResponse *, const char*, const char*);

#ifndef soap_read__TMSServ__loginUserByByteArrResponse
#define soap_read__TMSServ__loginUserByByteArrResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__TMSServ__loginUserByByteArrResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _TMSServ__loginUserByByteArrResponse * SOAP_FMAC2 soap_instantiate__TMSServ__loginUserByByteArrResponse(struct soap*, int, const char*, const char*, size_t*);

inline _TMSServ__loginUserByByteArrResponse * soap_new__TMSServ__loginUserByByteArrResponse(struct soap *soap, int n = -1) { return soap_instantiate__TMSServ__loginUserByByteArrResponse(soap, n, NULL, NULL, NULL); }

inline _TMSServ__loginUserByByteArrResponse * soap_new_req__TMSServ__loginUserByByteArrResponse(struct soap *soap, int loginUserByByteArrResult) { _TMSServ__loginUserByByteArrResponse *_p = soap_instantiate__TMSServ__loginUserByByteArrResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_TMSServ__loginUserByByteArrResponse::loginUserByByteArrResult = loginUserByByteArrResult; } return _p; }

inline _TMSServ__loginUserByByteArrResponse * soap_new_set__TMSServ__loginUserByByteArrResponse(struct soap *soap, int loginUserByByteArrResult) { _TMSServ__loginUserByByteArrResponse *_p = soap_instantiate__TMSServ__loginUserByByteArrResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_TMSServ__loginUserByByteArrResponse::loginUserByByteArrResult = loginUserByByteArrResult; } return _p; }

inline void soap_delete__TMSServ__loginUserByByteArrResponse(struct soap *soap, _TMSServ__loginUserByByteArrResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__TMSServ__loginUserByByteArrResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__TMSServ__loginUserByByteArr
#define SOAP_TYPE__TMSServ__loginUserByByteArr (16)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__TMSServ__loginUserByByteArr(struct soap*, const char*, int, const _TMSServ__loginUserByByteArr *, const char*);
SOAP_FMAC3 _TMSServ__loginUserByByteArr * SOAP_FMAC4 soap_in__TMSServ__loginUserByByteArr(struct soap*, const char*, _TMSServ__loginUserByByteArr *, const char*);

#ifndef soap_write__TMSServ__loginUserByByteArr
#define soap_write__TMSServ__loginUserByByteArr(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "TMSServ:loginUserByByteArr", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _TMSServ__loginUserByByteArr * SOAP_FMAC4 soap_get__TMSServ__loginUserByByteArr(struct soap*, _TMSServ__loginUserByByteArr *, const char*, const char*);

#ifndef soap_read__TMSServ__loginUserByByteArr
#define soap_read__TMSServ__loginUserByByteArr(soap, data) ( soap_begin_recv(soap) || !soap_get__TMSServ__loginUserByByteArr(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _TMSServ__loginUserByByteArr * SOAP_FMAC2 soap_instantiate__TMSServ__loginUserByByteArr(struct soap*, int, const char*, const char*, size_t*);

inline _TMSServ__loginUserByByteArr * soap_new__TMSServ__loginUserByByteArr(struct soap *soap, int n = -1) { return soap_instantiate__TMSServ__loginUserByByteArr(soap, n, NULL, NULL, NULL); }

inline _TMSServ__loginUserByByteArr * soap_new_req__TMSServ__loginUserByByteArr(struct soap *soap) { _TMSServ__loginUserByByteArr *_p = soap_instantiate__TMSServ__loginUserByByteArr(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _TMSServ__loginUserByByteArr * soap_new_set__TMSServ__loginUserByByteArr(struct soap *soap, xsd__base64Binary *userInfo) { _TMSServ__loginUserByByteArr *_p = soap_instantiate__TMSServ__loginUserByByteArr(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_TMSServ__loginUserByByteArr::userInfo = userInfo; } return _p; }

inline void soap_delete__TMSServ__loginUserByByteArr(struct soap *soap, _TMSServ__loginUserByByteArr *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__TMSServ__loginUserByByteArr(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__TMSServ__loginUserResponse
#define SOAP_TYPE__TMSServ__loginUserResponse (15)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__TMSServ__loginUserResponse(struct soap*, const char*, int, const _TMSServ__loginUserResponse *, const char*);
SOAP_FMAC3 _TMSServ__loginUserResponse * SOAP_FMAC4 soap_in__TMSServ__loginUserResponse(struct soap*, const char*, _TMSServ__loginUserResponse *, const char*);

#ifndef soap_write__TMSServ__loginUserResponse
#define soap_write__TMSServ__loginUserResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "TMSServ:loginUserResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _TMSServ__loginUserResponse * SOAP_FMAC4 soap_get__TMSServ__loginUserResponse(struct soap*, _TMSServ__loginUserResponse *, const char*, const char*);

#ifndef soap_read__TMSServ__loginUserResponse
#define soap_read__TMSServ__loginUserResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__TMSServ__loginUserResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _TMSServ__loginUserResponse * SOAP_FMAC2 soap_instantiate__TMSServ__loginUserResponse(struct soap*, int, const char*, const char*, size_t*);

inline _TMSServ__loginUserResponse * soap_new__TMSServ__loginUserResponse(struct soap *soap, int n = -1) { return soap_instantiate__TMSServ__loginUserResponse(soap, n, NULL, NULL, NULL); }

inline _TMSServ__loginUserResponse * soap_new_req__TMSServ__loginUserResponse(struct soap *soap, int loginUserResult) { _TMSServ__loginUserResponse *_p = soap_instantiate__TMSServ__loginUserResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_TMSServ__loginUserResponse::loginUserResult = loginUserResult; } return _p; }

inline _TMSServ__loginUserResponse * soap_new_set__TMSServ__loginUserResponse(struct soap *soap, int loginUserResult) { _TMSServ__loginUserResponse *_p = soap_instantiate__TMSServ__loginUserResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_TMSServ__loginUserResponse::loginUserResult = loginUserResult; } return _p; }

inline void soap_delete__TMSServ__loginUserResponse(struct soap *soap, _TMSServ__loginUserResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__TMSServ__loginUserResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__TMSServ__loginUser
#define SOAP_TYPE__TMSServ__loginUser (14)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__TMSServ__loginUser(struct soap*, const char*, int, const _TMSServ__loginUser *, const char*);
SOAP_FMAC3 _TMSServ__loginUser * SOAP_FMAC4 soap_in__TMSServ__loginUser(struct soap*, const char*, _TMSServ__loginUser *, const char*);

#ifndef soap_write__TMSServ__loginUser
#define soap_write__TMSServ__loginUser(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "TMSServ:loginUser", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _TMSServ__loginUser * SOAP_FMAC4 soap_get__TMSServ__loginUser(struct soap*, _TMSServ__loginUser *, const char*, const char*);

#ifndef soap_read__TMSServ__loginUser
#define soap_read__TMSServ__loginUser(soap, data) ( soap_begin_recv(soap) || !soap_get__TMSServ__loginUser(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _TMSServ__loginUser * SOAP_FMAC2 soap_instantiate__TMSServ__loginUser(struct soap*, int, const char*, const char*, size_t*);

inline _TMSServ__loginUser * soap_new__TMSServ__loginUser(struct soap *soap, int n = -1) { return soap_instantiate__TMSServ__loginUser(soap, n, NULL, NULL, NULL); }

inline _TMSServ__loginUser * soap_new_req__TMSServ__loginUser(struct soap *soap) { _TMSServ__loginUser *_p = soap_instantiate__TMSServ__loginUser(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _TMSServ__loginUser * soap_new_set__TMSServ__loginUser(struct soap *soap, char *userName, char *password, char *fingerprint) { _TMSServ__loginUser *_p = soap_instantiate__TMSServ__loginUser(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_TMSServ__loginUser::userName = userName; _p->_TMSServ__loginUser::password = password; _p->_TMSServ__loginUser::fingerprint = fingerprint; } return _p; }

inline void soap_delete__TMSServ__loginUser(struct soap *soap, _TMSServ__loginUser *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__TMSServ__loginUser(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_TMSServ__ArrayOfUnsignedInt
#define SOAP_TYPE_TMSServ__ArrayOfUnsignedInt (13)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_TMSServ__ArrayOfUnsignedInt(struct soap*, const char*, int, const TMSServ__ArrayOfUnsignedInt *, const char*);
SOAP_FMAC3 TMSServ__ArrayOfUnsignedInt * SOAP_FMAC4 soap_in_TMSServ__ArrayOfUnsignedInt(struct soap*, const char*, TMSServ__ArrayOfUnsignedInt *, const char*);

#ifndef soap_write_TMSServ__ArrayOfUnsignedInt
#define soap_write_TMSServ__ArrayOfUnsignedInt(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "TMSServ:ArrayOfUnsignedInt", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 TMSServ__ArrayOfUnsignedInt * SOAP_FMAC4 soap_get_TMSServ__ArrayOfUnsignedInt(struct soap*, TMSServ__ArrayOfUnsignedInt *, const char*, const char*);

#ifndef soap_read_TMSServ__ArrayOfUnsignedInt
#define soap_read_TMSServ__ArrayOfUnsignedInt(soap, data) ( soap_begin_recv(soap) || !soap_get_TMSServ__ArrayOfUnsignedInt(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 TMSServ__ArrayOfUnsignedInt * SOAP_FMAC2 soap_instantiate_TMSServ__ArrayOfUnsignedInt(struct soap*, int, const char*, const char*, size_t*);

inline TMSServ__ArrayOfUnsignedInt * soap_new_TMSServ__ArrayOfUnsignedInt(struct soap *soap, int n = -1) { return soap_instantiate_TMSServ__ArrayOfUnsignedInt(soap, n, NULL, NULL, NULL); }

inline TMSServ__ArrayOfUnsignedInt * soap_new_req_TMSServ__ArrayOfUnsignedInt(struct soap *soap, int __sizeunsignedInt, unsigned int *unsignedInt) { TMSServ__ArrayOfUnsignedInt *_p = soap_instantiate_TMSServ__ArrayOfUnsignedInt(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->TMSServ__ArrayOfUnsignedInt::__sizeunsignedInt = __sizeunsignedInt; _p->TMSServ__ArrayOfUnsignedInt::unsignedInt = unsignedInt; } return _p; }

inline TMSServ__ArrayOfUnsignedInt * soap_new_set_TMSServ__ArrayOfUnsignedInt(struct soap *soap, int __sizeunsignedInt, unsigned int *unsignedInt) { TMSServ__ArrayOfUnsignedInt *_p = soap_instantiate_TMSServ__ArrayOfUnsignedInt(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->TMSServ__ArrayOfUnsignedInt::__sizeunsignedInt = __sizeunsignedInt; _p->TMSServ__ArrayOfUnsignedInt::unsignedInt = unsignedInt; } return _p; }

inline void soap_delete_TMSServ__ArrayOfUnsignedInt(struct soap *soap, TMSServ__ArrayOfUnsignedInt *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_TMSServ__ArrayOfUnsignedInt(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_TMSServ__ArrayOfInt
#define SOAP_TYPE_TMSServ__ArrayOfInt (12)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_TMSServ__ArrayOfInt(struct soap*, const char*, int, const TMSServ__ArrayOfInt *, const char*);
SOAP_FMAC3 TMSServ__ArrayOfInt * SOAP_FMAC4 soap_in_TMSServ__ArrayOfInt(struct soap*, const char*, TMSServ__ArrayOfInt *, const char*);

#ifndef soap_write_TMSServ__ArrayOfInt
#define soap_write_TMSServ__ArrayOfInt(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "TMSServ:ArrayOfInt", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 TMSServ__ArrayOfInt * SOAP_FMAC4 soap_get_TMSServ__ArrayOfInt(struct soap*, TMSServ__ArrayOfInt *, const char*, const char*);

#ifndef soap_read_TMSServ__ArrayOfInt
#define soap_read_TMSServ__ArrayOfInt(soap, data) ( soap_begin_recv(soap) || !soap_get_TMSServ__ArrayOfInt(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 TMSServ__ArrayOfInt * SOAP_FMAC2 soap_instantiate_TMSServ__ArrayOfInt(struct soap*, int, const char*, const char*, size_t*);

inline TMSServ__ArrayOfInt * soap_new_TMSServ__ArrayOfInt(struct soap *soap, int n = -1) { return soap_instantiate_TMSServ__ArrayOfInt(soap, n, NULL, NULL, NULL); }

inline TMSServ__ArrayOfInt * soap_new_req_TMSServ__ArrayOfInt(struct soap *soap, int __sizeint_, int *int_) { TMSServ__ArrayOfInt *_p = soap_instantiate_TMSServ__ArrayOfInt(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->TMSServ__ArrayOfInt::__sizeint_ = __sizeint_; _p->TMSServ__ArrayOfInt::int_ = int_; } return _p; }

inline TMSServ__ArrayOfInt * soap_new_set_TMSServ__ArrayOfInt(struct soap *soap, int __sizeint_, int *int_) { TMSServ__ArrayOfInt *_p = soap_instantiate_TMSServ__ArrayOfInt(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->TMSServ__ArrayOfInt::__sizeint_ = __sizeint_; _p->TMSServ__ArrayOfInt::int_ = int_; } return _p; }

inline void soap_delete_TMSServ__ArrayOfInt(struct soap *soap, TMSServ__ArrayOfInt *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_TMSServ__ArrayOfInt(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_xsd__base64Binary
#define SOAP_TYPE_xsd__base64Binary (7)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_xsd__base64Binary(struct soap*, const char*, int, const xsd__base64Binary *, const char*);
SOAP_FMAC3 xsd__base64Binary * SOAP_FMAC4 soap_in_xsd__base64Binary(struct soap*, const char*, xsd__base64Binary *, const char*);

#ifndef soap_write_xsd__base64Binary
#define soap_write_xsd__base64Binary(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "xsd:base64Binary", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 xsd__base64Binary * SOAP_FMAC4 soap_get_xsd__base64Binary(struct soap*, xsd__base64Binary *, const char*, const char*);

#ifndef soap_read_xsd__base64Binary
#define soap_read_xsd__base64Binary(soap, data) ( soap_begin_recv(soap) || !soap_get_xsd__base64Binary(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 xsd__base64Binary * SOAP_FMAC2 soap_instantiate_xsd__base64Binary(struct soap*, int, const char*, const char*, size_t*);

inline xsd__base64Binary * soap_new_xsd__base64Binary(struct soap *soap, int n = -1) { return soap_instantiate_xsd__base64Binary(soap, n, NULL, NULL, NULL); }

inline xsd__base64Binary * soap_new_req_xsd__base64Binary(struct soap *soap) { xsd__base64Binary *_p = soap_instantiate_xsd__base64Binary(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline xsd__base64Binary * soap_new_set_xsd__base64Binary(struct soap *soap, unsigned char *__ptr, int __size, char *id, char *type, char *options) { xsd__base64Binary *_p = soap_instantiate_xsd__base64Binary(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->xsd__base64Binary::__ptr = __ptr; _p->xsd__base64Binary::__size = __size; _p->xsd__base64Binary::id = id; _p->xsd__base64Binary::type = type; _p->xsd__base64Binary::options = options; } return _p; }

inline void soap_delete_xsd__base64Binary(struct soap *soap, xsd__base64Binary *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_xsd__base64Binary(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Fault
#define SOAP_TYPE_SOAP_ENV__Fault (292)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Fault(struct soap*, struct SOAP_ENV__Fault *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Fault(struct soap*, const struct SOAP_ENV__Fault *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Fault(struct soap*, const char*, int, const struct SOAP_ENV__Fault *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Fault * SOAP_FMAC4 soap_in_SOAP_ENV__Fault(struct soap*, const char*, struct SOAP_ENV__Fault *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Fault(struct soap*, const struct SOAP_ENV__Fault *, const char*, const char*);

#ifndef soap_write_SOAP_ENV__Fault
#define soap_write_SOAP_ENV__Fault(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Fault(soap, data),0) || soap_put_SOAP_ENV__Fault(soap, data, "SOAP-ENV:Fault", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Fault * SOAP_FMAC4 soap_get_SOAP_ENV__Fault(struct soap*, struct SOAP_ENV__Fault *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Fault
#define soap_read_SOAP_ENV__Fault(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Fault(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct SOAP_ENV__Fault * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Fault(struct soap*, int, const char*, const char*, size_t*);

inline struct SOAP_ENV__Fault * soap_new_SOAP_ENV__Fault(struct soap *soap, int n = -1) { return soap_instantiate_SOAP_ENV__Fault(soap, n, NULL, NULL, NULL); }

inline struct SOAP_ENV__Fault * soap_new_req_SOAP_ENV__Fault(struct soap *soap) { struct SOAP_ENV__Fault *_p = soap_instantiate_SOAP_ENV__Fault(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Fault(soap, _p); } return _p; }

inline struct SOAP_ENV__Fault * soap_new_set_SOAP_ENV__Fault(struct soap *soap, char *faultcode, char *faultstring, char *faultactor, struct SOAP_ENV__Detail *detail, struct SOAP_ENV__Code *SOAP_ENV__Code, struct SOAP_ENV__Reason *SOAP_ENV__Reason, char *SOAP_ENV__Node, char *SOAP_ENV__Role, struct SOAP_ENV__Detail *SOAP_ENV__Detail) { struct SOAP_ENV__Fault *_p = soap_instantiate_SOAP_ENV__Fault(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Fault(soap, _p); _p->faultcode = faultcode; _p->faultstring = faultstring; _p->faultactor = faultactor; _p->detail = detail; _p->SOAP_ENV__Code = SOAP_ENV__Code; _p->SOAP_ENV__Reason = SOAP_ENV__Reason; _p->SOAP_ENV__Node = SOAP_ENV__Node; _p->SOAP_ENV__Role = SOAP_ENV__Role; _p->SOAP_ENV__Detail = SOAP_ENV__Detail; } return _p; }

inline void soap_delete_SOAP_ENV__Fault(struct soap *soap, struct SOAP_ENV__Fault *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Fault(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Reason
#define SOAP_TYPE_SOAP_ENV__Reason (291)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Reason(struct soap*, const struct SOAP_ENV__Reason *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Reason(struct soap*, const char*, int, const struct SOAP_ENV__Reason *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Reason * SOAP_FMAC4 soap_in_SOAP_ENV__Reason(struct soap*, const char*, struct SOAP_ENV__Reason *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Reason(struct soap*, const struct SOAP_ENV__Reason *, const char*, const char*);

#ifndef soap_write_SOAP_ENV__Reason
#define soap_write_SOAP_ENV__Reason(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Reason(soap, data),0) || soap_put_SOAP_ENV__Reason(soap, data, "SOAP-ENV:Reason", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Reason * SOAP_FMAC4 soap_get_SOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Reason
#define soap_read_SOAP_ENV__Reason(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Reason(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct SOAP_ENV__Reason * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Reason(struct soap*, int, const char*, const char*, size_t*);

inline struct SOAP_ENV__Reason * soap_new_SOAP_ENV__Reason(struct soap *soap, int n = -1) { return soap_instantiate_SOAP_ENV__Reason(soap, n, NULL, NULL, NULL); }

inline struct SOAP_ENV__Reason * soap_new_req_SOAP_ENV__Reason(struct soap *soap) { struct SOAP_ENV__Reason *_p = soap_instantiate_SOAP_ENV__Reason(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Reason(soap, _p); } return _p; }

inline struct SOAP_ENV__Reason * soap_new_set_SOAP_ENV__Reason(struct soap *soap, char *SOAP_ENV__Text) { struct SOAP_ENV__Reason *_p = soap_instantiate_SOAP_ENV__Reason(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Reason(soap, _p); _p->SOAP_ENV__Text = SOAP_ENV__Text; } return _p; }

inline void soap_delete_SOAP_ENV__Reason(struct soap *soap, struct SOAP_ENV__Reason *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Reason(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Detail
#define SOAP_TYPE_SOAP_ENV__Detail (288)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Detail(struct soap*, const struct SOAP_ENV__Detail *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Detail(struct soap*, const char*, int, const struct SOAP_ENV__Detail *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Detail * SOAP_FMAC4 soap_in_SOAP_ENV__Detail(struct soap*, const char*, struct SOAP_ENV__Detail *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Detail(struct soap*, const struct SOAP_ENV__Detail *, const char*, const char*);

#ifndef soap_write_SOAP_ENV__Detail
#define soap_write_SOAP_ENV__Detail(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Detail(soap, data),0) || soap_put_SOAP_ENV__Detail(soap, data, "SOAP-ENV:Detail", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Detail * SOAP_FMAC4 soap_get_SOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Detail
#define soap_read_SOAP_ENV__Detail(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Detail(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct SOAP_ENV__Detail * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Detail(struct soap*, int, const char*, const char*, size_t*);

inline struct SOAP_ENV__Detail * soap_new_SOAP_ENV__Detail(struct soap *soap, int n = -1) { return soap_instantiate_SOAP_ENV__Detail(soap, n, NULL, NULL, NULL); }

inline struct SOAP_ENV__Detail * soap_new_req_SOAP_ENV__Detail(struct soap *soap, int __type, void *fault) { struct SOAP_ENV__Detail *_p = soap_instantiate_SOAP_ENV__Detail(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Detail(soap, _p); _p->__type = __type; _p->fault = fault; } return _p; }

inline struct SOAP_ENV__Detail * soap_new_set_SOAP_ENV__Detail(struct soap *soap, char *__any, int __type, void *fault) { struct SOAP_ENV__Detail *_p = soap_instantiate_SOAP_ENV__Detail(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Detail(soap, _p); _p->__any = __any; _p->__type = __type; _p->fault = fault; } return _p; }

inline void soap_delete_SOAP_ENV__Detail(struct soap *soap, struct SOAP_ENV__Detail *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Detail(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Code
#define SOAP_TYPE_SOAP_ENV__Code (286)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Code(struct soap*, const struct SOAP_ENV__Code *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Code(struct soap*, const char*, int, const struct SOAP_ENV__Code *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Code * SOAP_FMAC4 soap_in_SOAP_ENV__Code(struct soap*, const char*, struct SOAP_ENV__Code *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Code(struct soap*, const struct SOAP_ENV__Code *, const char*, const char*);

#ifndef soap_write_SOAP_ENV__Code
#define soap_write_SOAP_ENV__Code(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Code(soap, data),0) || soap_put_SOAP_ENV__Code(soap, data, "SOAP-ENV:Code", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Code * SOAP_FMAC4 soap_get_SOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Code
#define soap_read_SOAP_ENV__Code(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Code(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct SOAP_ENV__Code * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Code(struct soap*, int, const char*, const char*, size_t*);

inline struct SOAP_ENV__Code * soap_new_SOAP_ENV__Code(struct soap *soap, int n = -1) { return soap_instantiate_SOAP_ENV__Code(soap, n, NULL, NULL, NULL); }

inline struct SOAP_ENV__Code * soap_new_req_SOAP_ENV__Code(struct soap *soap) { struct SOAP_ENV__Code *_p = soap_instantiate_SOAP_ENV__Code(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Code(soap, _p); } return _p; }

inline struct SOAP_ENV__Code * soap_new_set_SOAP_ENV__Code(struct soap *soap, char *SOAP_ENV__Value, struct SOAP_ENV__Code *SOAP_ENV__Subcode) { struct SOAP_ENV__Code *_p = soap_instantiate_SOAP_ENV__Code(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Code(soap, _p); _p->SOAP_ENV__Value = SOAP_ENV__Value; _p->SOAP_ENV__Subcode = SOAP_ENV__Subcode; } return _p; }

inline void soap_delete_SOAP_ENV__Code(struct soap *soap, struct SOAP_ENV__Code *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Code(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Header
#define SOAP_TYPE_SOAP_ENV__Header (285)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Header(struct soap*, struct SOAP_ENV__Header *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Header(struct soap*, const struct SOAP_ENV__Header *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Header(struct soap*, const char*, int, const struct SOAP_ENV__Header *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Header * SOAP_FMAC4 soap_in_SOAP_ENV__Header(struct soap*, const char*, struct SOAP_ENV__Header *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Header(struct soap*, const struct SOAP_ENV__Header *, const char*, const char*);

#ifndef soap_write_SOAP_ENV__Header
#define soap_write_SOAP_ENV__Header(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Header(soap, data),0) || soap_put_SOAP_ENV__Header(soap, data, "SOAP-ENV:Header", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Header * SOAP_FMAC4 soap_get_SOAP_ENV__Header(struct soap*, struct SOAP_ENV__Header *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Header
#define soap_read_SOAP_ENV__Header(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Header(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct SOAP_ENV__Header * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Header(struct soap*, int, const char*, const char*, size_t*);

inline struct SOAP_ENV__Header * soap_new_SOAP_ENV__Header(struct soap *soap, int n = -1) { return soap_instantiate_SOAP_ENV__Header(soap, n, NULL, NULL, NULL); }

inline struct SOAP_ENV__Header * soap_new_req_SOAP_ENV__Header(struct soap *soap) { struct SOAP_ENV__Header *_p = soap_instantiate_SOAP_ENV__Header(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Header(soap, _p); } return _p; }

inline struct SOAP_ENV__Header * soap_new_set_SOAP_ENV__Header(struct soap *soap) { struct SOAP_ENV__Header *_p = soap_instantiate_SOAP_ENV__Header(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Header(soap, _p); } return _p; }

inline void soap_delete_SOAP_ENV__Header(struct soap *soap, struct SOAP_ENV__Header *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Header(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef SOAP_TYPE___VersionServ3__SaveOrUpdateObjects
#define SOAP_TYPE___VersionServ3__SaveOrUpdateObjects (284)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___VersionServ3__SaveOrUpdateObjects(struct soap*, struct __VersionServ3__SaveOrUpdateObjects *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___VersionServ3__SaveOrUpdateObjects(struct soap*, const struct __VersionServ3__SaveOrUpdateObjects *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___VersionServ3__SaveOrUpdateObjects(struct soap*, const char*, int, const struct __VersionServ3__SaveOrUpdateObjects *, const char*);
SOAP_FMAC3 struct __VersionServ3__SaveOrUpdateObjects * SOAP_FMAC4 soap_in___VersionServ3__SaveOrUpdateObjects(struct soap*, const char*, struct __VersionServ3__SaveOrUpdateObjects *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___VersionServ3__SaveOrUpdateObjects(struct soap*, const struct __VersionServ3__SaveOrUpdateObjects *, const char*, const char*);

#ifndef soap_write___VersionServ3__SaveOrUpdateObjects
#define soap_write___VersionServ3__SaveOrUpdateObjects(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___VersionServ3__SaveOrUpdateObjects(soap, data),0) || soap_put___VersionServ3__SaveOrUpdateObjects(soap, data, "-VersionServ3:SaveOrUpdateObjects", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __VersionServ3__SaveOrUpdateObjects * SOAP_FMAC4 soap_get___VersionServ3__SaveOrUpdateObjects(struct soap*, struct __VersionServ3__SaveOrUpdateObjects *, const char*, const char*);

#ifndef soap_read___VersionServ3__SaveOrUpdateObjects
#define soap_read___VersionServ3__SaveOrUpdateObjects(soap, data) ( soap_begin_recv(soap) || !soap_get___VersionServ3__SaveOrUpdateObjects(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __VersionServ3__SaveOrUpdateObjects * SOAP_FMAC2 soap_instantiate___VersionServ3__SaveOrUpdateObjects(struct soap*, int, const char*, const char*, size_t*);

inline struct __VersionServ3__SaveOrUpdateObjects * soap_new___VersionServ3__SaveOrUpdateObjects(struct soap *soap, int n = -1) { return soap_instantiate___VersionServ3__SaveOrUpdateObjects(soap, n, NULL, NULL, NULL); }

inline struct __VersionServ3__SaveOrUpdateObjects * soap_new_req___VersionServ3__SaveOrUpdateObjects(struct soap *soap) { struct __VersionServ3__SaveOrUpdateObjects *_p = soap_instantiate___VersionServ3__SaveOrUpdateObjects(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___VersionServ3__SaveOrUpdateObjects(soap, _p); } return _p; }

inline struct __VersionServ3__SaveOrUpdateObjects * soap_new_set___VersionServ3__SaveOrUpdateObjects(struct soap *soap, _VersionServ__SaveOrUpdateObjects *VersionServ__SaveOrUpdateObjects) { struct __VersionServ3__SaveOrUpdateObjects *_p = soap_instantiate___VersionServ3__SaveOrUpdateObjects(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___VersionServ3__SaveOrUpdateObjects(soap, _p); _p->VersionServ__SaveOrUpdateObjects = VersionServ__SaveOrUpdateObjects; } return _p; }

inline void soap_delete___VersionServ3__SaveOrUpdateObjects(struct soap *soap, struct __VersionServ3__SaveOrUpdateObjects *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___VersionServ3__SaveOrUpdateObjects(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___VersionServ3__DownloadObjects
#define SOAP_TYPE___VersionServ3__DownloadObjects (282)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___VersionServ3__DownloadObjects(struct soap*, struct __VersionServ3__DownloadObjects *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___VersionServ3__DownloadObjects(struct soap*, const struct __VersionServ3__DownloadObjects *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___VersionServ3__DownloadObjects(struct soap*, const char*, int, const struct __VersionServ3__DownloadObjects *, const char*);
SOAP_FMAC3 struct __VersionServ3__DownloadObjects * SOAP_FMAC4 soap_in___VersionServ3__DownloadObjects(struct soap*, const char*, struct __VersionServ3__DownloadObjects *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___VersionServ3__DownloadObjects(struct soap*, const struct __VersionServ3__DownloadObjects *, const char*, const char*);

#ifndef soap_write___VersionServ3__DownloadObjects
#define soap_write___VersionServ3__DownloadObjects(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___VersionServ3__DownloadObjects(soap, data),0) || soap_put___VersionServ3__DownloadObjects(soap, data, "-VersionServ3:DownloadObjects", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __VersionServ3__DownloadObjects * SOAP_FMAC4 soap_get___VersionServ3__DownloadObjects(struct soap*, struct __VersionServ3__DownloadObjects *, const char*, const char*);

#ifndef soap_read___VersionServ3__DownloadObjects
#define soap_read___VersionServ3__DownloadObjects(soap, data) ( soap_begin_recv(soap) || !soap_get___VersionServ3__DownloadObjects(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __VersionServ3__DownloadObjects * SOAP_FMAC2 soap_instantiate___VersionServ3__DownloadObjects(struct soap*, int, const char*, const char*, size_t*);

inline struct __VersionServ3__DownloadObjects * soap_new___VersionServ3__DownloadObjects(struct soap *soap, int n = -1) { return soap_instantiate___VersionServ3__DownloadObjects(soap, n, NULL, NULL, NULL); }

inline struct __VersionServ3__DownloadObjects * soap_new_req___VersionServ3__DownloadObjects(struct soap *soap) { struct __VersionServ3__DownloadObjects *_p = soap_instantiate___VersionServ3__DownloadObjects(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___VersionServ3__DownloadObjects(soap, _p); } return _p; }

inline struct __VersionServ3__DownloadObjects * soap_new_set___VersionServ3__DownloadObjects(struct soap *soap, _VersionServ__DownloadObjects *VersionServ__DownloadObjects) { struct __VersionServ3__DownloadObjects *_p = soap_instantiate___VersionServ3__DownloadObjects(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___VersionServ3__DownloadObjects(soap, _p); _p->VersionServ__DownloadObjects = VersionServ__DownloadObjects; } return _p; }

inline void soap_delete___VersionServ3__DownloadObjects(struct soap *soap, struct __VersionServ3__DownloadObjects *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___VersionServ3__DownloadObjects(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___VersionServ3__QueryObjects
#define SOAP_TYPE___VersionServ3__QueryObjects (280)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___VersionServ3__QueryObjects(struct soap*, struct __VersionServ3__QueryObjects *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___VersionServ3__QueryObjects(struct soap*, const struct __VersionServ3__QueryObjects *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___VersionServ3__QueryObjects(struct soap*, const char*, int, const struct __VersionServ3__QueryObjects *, const char*);
SOAP_FMAC3 struct __VersionServ3__QueryObjects * SOAP_FMAC4 soap_in___VersionServ3__QueryObjects(struct soap*, const char*, struct __VersionServ3__QueryObjects *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___VersionServ3__QueryObjects(struct soap*, const struct __VersionServ3__QueryObjects *, const char*, const char*);

#ifndef soap_write___VersionServ3__QueryObjects
#define soap_write___VersionServ3__QueryObjects(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___VersionServ3__QueryObjects(soap, data),0) || soap_put___VersionServ3__QueryObjects(soap, data, "-VersionServ3:QueryObjects", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __VersionServ3__QueryObjects * SOAP_FMAC4 soap_get___VersionServ3__QueryObjects(struct soap*, struct __VersionServ3__QueryObjects *, const char*, const char*);

#ifndef soap_read___VersionServ3__QueryObjects
#define soap_read___VersionServ3__QueryObjects(soap, data) ( soap_begin_recv(soap) || !soap_get___VersionServ3__QueryObjects(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __VersionServ3__QueryObjects * SOAP_FMAC2 soap_instantiate___VersionServ3__QueryObjects(struct soap*, int, const char*, const char*, size_t*);

inline struct __VersionServ3__QueryObjects * soap_new___VersionServ3__QueryObjects(struct soap *soap, int n = -1) { return soap_instantiate___VersionServ3__QueryObjects(soap, n, NULL, NULL, NULL); }

inline struct __VersionServ3__QueryObjects * soap_new_req___VersionServ3__QueryObjects(struct soap *soap) { struct __VersionServ3__QueryObjects *_p = soap_instantiate___VersionServ3__QueryObjects(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___VersionServ3__QueryObjects(soap, _p); } return _p; }

inline struct __VersionServ3__QueryObjects * soap_new_set___VersionServ3__QueryObjects(struct soap *soap, _VersionServ__QueryObjects *VersionServ__QueryObjects) { struct __VersionServ3__QueryObjects *_p = soap_instantiate___VersionServ3__QueryObjects(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___VersionServ3__QueryObjects(soap, _p); _p->VersionServ__QueryObjects = VersionServ__QueryObjects; } return _p; }

inline void soap_delete___VersionServ3__QueryObjects(struct soap *soap, struct __VersionServ3__QueryObjects *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___VersionServ3__QueryObjects(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___VersionServ3__GetFileHeader
#define SOAP_TYPE___VersionServ3__GetFileHeader (278)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___VersionServ3__GetFileHeader(struct soap*, struct __VersionServ3__GetFileHeader *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___VersionServ3__GetFileHeader(struct soap*, const struct __VersionServ3__GetFileHeader *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___VersionServ3__GetFileHeader(struct soap*, const char*, int, const struct __VersionServ3__GetFileHeader *, const char*);
SOAP_FMAC3 struct __VersionServ3__GetFileHeader * SOAP_FMAC4 soap_in___VersionServ3__GetFileHeader(struct soap*, const char*, struct __VersionServ3__GetFileHeader *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___VersionServ3__GetFileHeader(struct soap*, const struct __VersionServ3__GetFileHeader *, const char*, const char*);

#ifndef soap_write___VersionServ3__GetFileHeader
#define soap_write___VersionServ3__GetFileHeader(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___VersionServ3__GetFileHeader(soap, data),0) || soap_put___VersionServ3__GetFileHeader(soap, data, "-VersionServ3:GetFileHeader", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __VersionServ3__GetFileHeader * SOAP_FMAC4 soap_get___VersionServ3__GetFileHeader(struct soap*, struct __VersionServ3__GetFileHeader *, const char*, const char*);

#ifndef soap_read___VersionServ3__GetFileHeader
#define soap_read___VersionServ3__GetFileHeader(soap, data) ( soap_begin_recv(soap) || !soap_get___VersionServ3__GetFileHeader(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __VersionServ3__GetFileHeader * SOAP_FMAC2 soap_instantiate___VersionServ3__GetFileHeader(struct soap*, int, const char*, const char*, size_t*);

inline struct __VersionServ3__GetFileHeader * soap_new___VersionServ3__GetFileHeader(struct soap *soap, int n = -1) { return soap_instantiate___VersionServ3__GetFileHeader(soap, n, NULL, NULL, NULL); }

inline struct __VersionServ3__GetFileHeader * soap_new_req___VersionServ3__GetFileHeader(struct soap *soap) { struct __VersionServ3__GetFileHeader *_p = soap_instantiate___VersionServ3__GetFileHeader(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___VersionServ3__GetFileHeader(soap, _p); } return _p; }

inline struct __VersionServ3__GetFileHeader * soap_new_set___VersionServ3__GetFileHeader(struct soap *soap, _VersionServ__GetFileHeader *VersionServ__GetFileHeader) { struct __VersionServ3__GetFileHeader *_p = soap_instantiate___VersionServ3__GetFileHeader(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___VersionServ3__GetFileHeader(soap, _p); _p->VersionServ__GetFileHeader = VersionServ__GetFileHeader; } return _p; }

inline void soap_delete___VersionServ3__GetFileHeader(struct soap *soap, struct __VersionServ3__GetFileHeader *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___VersionServ3__GetFileHeader(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___VersionServ3__QueryDownLoadItemArrByProductId
#define SOAP_TYPE___VersionServ3__QueryDownLoadItemArrByProductId (276)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___VersionServ3__QueryDownLoadItemArrByProductId(struct soap*, struct __VersionServ3__QueryDownLoadItemArrByProductId *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___VersionServ3__QueryDownLoadItemArrByProductId(struct soap*, const struct __VersionServ3__QueryDownLoadItemArrByProductId *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___VersionServ3__QueryDownLoadItemArrByProductId(struct soap*, const char*, int, const struct __VersionServ3__QueryDownLoadItemArrByProductId *, const char*);
SOAP_FMAC3 struct __VersionServ3__QueryDownLoadItemArrByProductId * SOAP_FMAC4 soap_in___VersionServ3__QueryDownLoadItemArrByProductId(struct soap*, const char*, struct __VersionServ3__QueryDownLoadItemArrByProductId *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___VersionServ3__QueryDownLoadItemArrByProductId(struct soap*, const struct __VersionServ3__QueryDownLoadItemArrByProductId *, const char*, const char*);

#ifndef soap_write___VersionServ3__QueryDownLoadItemArrByProductId
#define soap_write___VersionServ3__QueryDownLoadItemArrByProductId(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___VersionServ3__QueryDownLoadItemArrByProductId(soap, data),0) || soap_put___VersionServ3__QueryDownLoadItemArrByProductId(soap, data, "-VersionServ3:QueryDownLoadItemArrByProductId", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __VersionServ3__QueryDownLoadItemArrByProductId * SOAP_FMAC4 soap_get___VersionServ3__QueryDownLoadItemArrByProductId(struct soap*, struct __VersionServ3__QueryDownLoadItemArrByProductId *, const char*, const char*);

#ifndef soap_read___VersionServ3__QueryDownLoadItemArrByProductId
#define soap_read___VersionServ3__QueryDownLoadItemArrByProductId(soap, data) ( soap_begin_recv(soap) || !soap_get___VersionServ3__QueryDownLoadItemArrByProductId(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __VersionServ3__QueryDownLoadItemArrByProductId * SOAP_FMAC2 soap_instantiate___VersionServ3__QueryDownLoadItemArrByProductId(struct soap*, int, const char*, const char*, size_t*);

inline struct __VersionServ3__QueryDownLoadItemArrByProductId * soap_new___VersionServ3__QueryDownLoadItemArrByProductId(struct soap *soap, int n = -1) { return soap_instantiate___VersionServ3__QueryDownLoadItemArrByProductId(soap, n, NULL, NULL, NULL); }

inline struct __VersionServ3__QueryDownLoadItemArrByProductId * soap_new_req___VersionServ3__QueryDownLoadItemArrByProductId(struct soap *soap) { struct __VersionServ3__QueryDownLoadItemArrByProductId *_p = soap_instantiate___VersionServ3__QueryDownLoadItemArrByProductId(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___VersionServ3__QueryDownLoadItemArrByProductId(soap, _p); } return _p; }

inline struct __VersionServ3__QueryDownLoadItemArrByProductId * soap_new_set___VersionServ3__QueryDownLoadItemArrByProductId(struct soap *soap, _VersionServ__QueryDownLoadItemArrByProductId *VersionServ__QueryDownLoadItemArrByProductId) { struct __VersionServ3__QueryDownLoadItemArrByProductId *_p = soap_instantiate___VersionServ3__QueryDownLoadItemArrByProductId(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___VersionServ3__QueryDownLoadItemArrByProductId(soap, _p); _p->VersionServ__QueryDownLoadItemArrByProductId = VersionServ__QueryDownLoadItemArrByProductId; } return _p; }

inline void soap_delete___VersionServ3__QueryDownLoadItemArrByProductId(struct soap *soap, struct __VersionServ3__QueryDownLoadItemArrByProductId *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___VersionServ3__QueryDownLoadItemArrByProductId(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___VersionServ3__GetDogAccessHistory
#define SOAP_TYPE___VersionServ3__GetDogAccessHistory (274)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___VersionServ3__GetDogAccessHistory(struct soap*, struct __VersionServ3__GetDogAccessHistory *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___VersionServ3__GetDogAccessHistory(struct soap*, const struct __VersionServ3__GetDogAccessHistory *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___VersionServ3__GetDogAccessHistory(struct soap*, const char*, int, const struct __VersionServ3__GetDogAccessHistory *, const char*);
SOAP_FMAC3 struct __VersionServ3__GetDogAccessHistory * SOAP_FMAC4 soap_in___VersionServ3__GetDogAccessHistory(struct soap*, const char*, struct __VersionServ3__GetDogAccessHistory *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___VersionServ3__GetDogAccessHistory(struct soap*, const struct __VersionServ3__GetDogAccessHistory *, const char*, const char*);

#ifndef soap_write___VersionServ3__GetDogAccessHistory
#define soap_write___VersionServ3__GetDogAccessHistory(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___VersionServ3__GetDogAccessHistory(soap, data),0) || soap_put___VersionServ3__GetDogAccessHistory(soap, data, "-VersionServ3:GetDogAccessHistory", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __VersionServ3__GetDogAccessHistory * SOAP_FMAC4 soap_get___VersionServ3__GetDogAccessHistory(struct soap*, struct __VersionServ3__GetDogAccessHistory *, const char*, const char*);

#ifndef soap_read___VersionServ3__GetDogAccessHistory
#define soap_read___VersionServ3__GetDogAccessHistory(soap, data) ( soap_begin_recv(soap) || !soap_get___VersionServ3__GetDogAccessHistory(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __VersionServ3__GetDogAccessHistory * SOAP_FMAC2 soap_instantiate___VersionServ3__GetDogAccessHistory(struct soap*, int, const char*, const char*, size_t*);

inline struct __VersionServ3__GetDogAccessHistory * soap_new___VersionServ3__GetDogAccessHistory(struct soap *soap, int n = -1) { return soap_instantiate___VersionServ3__GetDogAccessHistory(soap, n, NULL, NULL, NULL); }

inline struct __VersionServ3__GetDogAccessHistory * soap_new_req___VersionServ3__GetDogAccessHistory(struct soap *soap) { struct __VersionServ3__GetDogAccessHistory *_p = soap_instantiate___VersionServ3__GetDogAccessHistory(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___VersionServ3__GetDogAccessHistory(soap, _p); } return _p; }

inline struct __VersionServ3__GetDogAccessHistory * soap_new_set___VersionServ3__GetDogAccessHistory(struct soap *soap, _VersionServ__GetDogAccessHistory *VersionServ__GetDogAccessHistory) { struct __VersionServ3__GetDogAccessHistory *_p = soap_instantiate___VersionServ3__GetDogAccessHistory(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___VersionServ3__GetDogAccessHistory(soap, _p); _p->VersionServ__GetDogAccessHistory = VersionServ__GetDogAccessHistory; } return _p; }

inline void soap_delete___VersionServ3__GetDogAccessHistory(struct soap *soap, struct __VersionServ3__GetDogAccessHistory *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___VersionServ3__GetDogAccessHistory(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___VersionServ3__GetVersionReleaseNotes
#define SOAP_TYPE___VersionServ3__GetVersionReleaseNotes (272)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___VersionServ3__GetVersionReleaseNotes(struct soap*, struct __VersionServ3__GetVersionReleaseNotes *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___VersionServ3__GetVersionReleaseNotes(struct soap*, const struct __VersionServ3__GetVersionReleaseNotes *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___VersionServ3__GetVersionReleaseNotes(struct soap*, const char*, int, const struct __VersionServ3__GetVersionReleaseNotes *, const char*);
SOAP_FMAC3 struct __VersionServ3__GetVersionReleaseNotes * SOAP_FMAC4 soap_in___VersionServ3__GetVersionReleaseNotes(struct soap*, const char*, struct __VersionServ3__GetVersionReleaseNotes *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___VersionServ3__GetVersionReleaseNotes(struct soap*, const struct __VersionServ3__GetVersionReleaseNotes *, const char*, const char*);

#ifndef soap_write___VersionServ3__GetVersionReleaseNotes
#define soap_write___VersionServ3__GetVersionReleaseNotes(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___VersionServ3__GetVersionReleaseNotes(soap, data),0) || soap_put___VersionServ3__GetVersionReleaseNotes(soap, data, "-VersionServ3:GetVersionReleaseNotes", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __VersionServ3__GetVersionReleaseNotes * SOAP_FMAC4 soap_get___VersionServ3__GetVersionReleaseNotes(struct soap*, struct __VersionServ3__GetVersionReleaseNotes *, const char*, const char*);

#ifndef soap_read___VersionServ3__GetVersionReleaseNotes
#define soap_read___VersionServ3__GetVersionReleaseNotes(soap, data) ( soap_begin_recv(soap) || !soap_get___VersionServ3__GetVersionReleaseNotes(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __VersionServ3__GetVersionReleaseNotes * SOAP_FMAC2 soap_instantiate___VersionServ3__GetVersionReleaseNotes(struct soap*, int, const char*, const char*, size_t*);

inline struct __VersionServ3__GetVersionReleaseNotes * soap_new___VersionServ3__GetVersionReleaseNotes(struct soap *soap, int n = -1) { return soap_instantiate___VersionServ3__GetVersionReleaseNotes(soap, n, NULL, NULL, NULL); }

inline struct __VersionServ3__GetVersionReleaseNotes * soap_new_req___VersionServ3__GetVersionReleaseNotes(struct soap *soap) { struct __VersionServ3__GetVersionReleaseNotes *_p = soap_instantiate___VersionServ3__GetVersionReleaseNotes(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___VersionServ3__GetVersionReleaseNotes(soap, _p); } return _p; }

inline struct __VersionServ3__GetVersionReleaseNotes * soap_new_set___VersionServ3__GetVersionReleaseNotes(struct soap *soap, _VersionServ__GetVersionReleaseNotes *VersionServ__GetVersionReleaseNotes) { struct __VersionServ3__GetVersionReleaseNotes *_p = soap_instantiate___VersionServ3__GetVersionReleaseNotes(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___VersionServ3__GetVersionReleaseNotes(soap, _p); _p->VersionServ__GetVersionReleaseNotes = VersionServ__GetVersionReleaseNotes; } return _p; }

inline void soap_delete___VersionServ3__GetVersionReleaseNotes(struct soap *soap, struct __VersionServ3__GetVersionReleaseNotes *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___VersionServ3__GetVersionReleaseNotes(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___VersionServ3__CompareVersion
#define SOAP_TYPE___VersionServ3__CompareVersion (270)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___VersionServ3__CompareVersion(struct soap*, struct __VersionServ3__CompareVersion *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___VersionServ3__CompareVersion(struct soap*, const struct __VersionServ3__CompareVersion *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___VersionServ3__CompareVersion(struct soap*, const char*, int, const struct __VersionServ3__CompareVersion *, const char*);
SOAP_FMAC3 struct __VersionServ3__CompareVersion * SOAP_FMAC4 soap_in___VersionServ3__CompareVersion(struct soap*, const char*, struct __VersionServ3__CompareVersion *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___VersionServ3__CompareVersion(struct soap*, const struct __VersionServ3__CompareVersion *, const char*, const char*);

#ifndef soap_write___VersionServ3__CompareVersion
#define soap_write___VersionServ3__CompareVersion(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___VersionServ3__CompareVersion(soap, data),0) || soap_put___VersionServ3__CompareVersion(soap, data, "-VersionServ3:CompareVersion", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __VersionServ3__CompareVersion * SOAP_FMAC4 soap_get___VersionServ3__CompareVersion(struct soap*, struct __VersionServ3__CompareVersion *, const char*, const char*);

#ifndef soap_read___VersionServ3__CompareVersion
#define soap_read___VersionServ3__CompareVersion(soap, data) ( soap_begin_recv(soap) || !soap_get___VersionServ3__CompareVersion(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __VersionServ3__CompareVersion * SOAP_FMAC2 soap_instantiate___VersionServ3__CompareVersion(struct soap*, int, const char*, const char*, size_t*);

inline struct __VersionServ3__CompareVersion * soap_new___VersionServ3__CompareVersion(struct soap *soap, int n = -1) { return soap_instantiate___VersionServ3__CompareVersion(soap, n, NULL, NULL, NULL); }

inline struct __VersionServ3__CompareVersion * soap_new_req___VersionServ3__CompareVersion(struct soap *soap) { struct __VersionServ3__CompareVersion *_p = soap_instantiate___VersionServ3__CompareVersion(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___VersionServ3__CompareVersion(soap, _p); } return _p; }

inline struct __VersionServ3__CompareVersion * soap_new_set___VersionServ3__CompareVersion(struct soap *soap, _VersionServ__CompareVersion *VersionServ__CompareVersion) { struct __VersionServ3__CompareVersion *_p = soap_instantiate___VersionServ3__CompareVersion(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___VersionServ3__CompareVersion(soap, _p); _p->VersionServ__CompareVersion = VersionServ__CompareVersion; } return _p; }

inline void soap_delete___VersionServ3__CompareVersion(struct soap *soap, struct __VersionServ3__CompareVersion *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___VersionServ3__CompareVersion(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___VersionServ3__SetRevisionReadFlag
#define SOAP_TYPE___VersionServ3__SetRevisionReadFlag (268)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___VersionServ3__SetRevisionReadFlag(struct soap*, struct __VersionServ3__SetRevisionReadFlag *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___VersionServ3__SetRevisionReadFlag(struct soap*, const struct __VersionServ3__SetRevisionReadFlag *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___VersionServ3__SetRevisionReadFlag(struct soap*, const char*, int, const struct __VersionServ3__SetRevisionReadFlag *, const char*);
SOAP_FMAC3 struct __VersionServ3__SetRevisionReadFlag * SOAP_FMAC4 soap_in___VersionServ3__SetRevisionReadFlag(struct soap*, const char*, struct __VersionServ3__SetRevisionReadFlag *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___VersionServ3__SetRevisionReadFlag(struct soap*, const struct __VersionServ3__SetRevisionReadFlag *, const char*, const char*);

#ifndef soap_write___VersionServ3__SetRevisionReadFlag
#define soap_write___VersionServ3__SetRevisionReadFlag(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___VersionServ3__SetRevisionReadFlag(soap, data),0) || soap_put___VersionServ3__SetRevisionReadFlag(soap, data, "-VersionServ3:SetRevisionReadFlag", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __VersionServ3__SetRevisionReadFlag * SOAP_FMAC4 soap_get___VersionServ3__SetRevisionReadFlag(struct soap*, struct __VersionServ3__SetRevisionReadFlag *, const char*, const char*);

#ifndef soap_read___VersionServ3__SetRevisionReadFlag
#define soap_read___VersionServ3__SetRevisionReadFlag(soap, data) ( soap_begin_recv(soap) || !soap_get___VersionServ3__SetRevisionReadFlag(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __VersionServ3__SetRevisionReadFlag * SOAP_FMAC2 soap_instantiate___VersionServ3__SetRevisionReadFlag(struct soap*, int, const char*, const char*, size_t*);

inline struct __VersionServ3__SetRevisionReadFlag * soap_new___VersionServ3__SetRevisionReadFlag(struct soap *soap, int n = -1) { return soap_instantiate___VersionServ3__SetRevisionReadFlag(soap, n, NULL, NULL, NULL); }

inline struct __VersionServ3__SetRevisionReadFlag * soap_new_req___VersionServ3__SetRevisionReadFlag(struct soap *soap) { struct __VersionServ3__SetRevisionReadFlag *_p = soap_instantiate___VersionServ3__SetRevisionReadFlag(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___VersionServ3__SetRevisionReadFlag(soap, _p); } return _p; }

inline struct __VersionServ3__SetRevisionReadFlag * soap_new_set___VersionServ3__SetRevisionReadFlag(struct soap *soap, _VersionServ__SetRevisionReadFlag *VersionServ__SetRevisionReadFlag) { struct __VersionServ3__SetRevisionReadFlag *_p = soap_instantiate___VersionServ3__SetRevisionReadFlag(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___VersionServ3__SetRevisionReadFlag(soap, _p); _p->VersionServ__SetRevisionReadFlag = VersionServ__SetRevisionReadFlag; } return _p; }

inline void soap_delete___VersionServ3__SetRevisionReadFlag(struct soap *soap, struct __VersionServ3__SetRevisionReadFlag *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___VersionServ3__SetRevisionReadFlag(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___VersionServ3__GetUpdateVerByCurVer
#define SOAP_TYPE___VersionServ3__GetUpdateVerByCurVer (266)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___VersionServ3__GetUpdateVerByCurVer(struct soap*, struct __VersionServ3__GetUpdateVerByCurVer *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___VersionServ3__GetUpdateVerByCurVer(struct soap*, const struct __VersionServ3__GetUpdateVerByCurVer *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___VersionServ3__GetUpdateVerByCurVer(struct soap*, const char*, int, const struct __VersionServ3__GetUpdateVerByCurVer *, const char*);
SOAP_FMAC3 struct __VersionServ3__GetUpdateVerByCurVer * SOAP_FMAC4 soap_in___VersionServ3__GetUpdateVerByCurVer(struct soap*, const char*, struct __VersionServ3__GetUpdateVerByCurVer *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___VersionServ3__GetUpdateVerByCurVer(struct soap*, const struct __VersionServ3__GetUpdateVerByCurVer *, const char*, const char*);

#ifndef soap_write___VersionServ3__GetUpdateVerByCurVer
#define soap_write___VersionServ3__GetUpdateVerByCurVer(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___VersionServ3__GetUpdateVerByCurVer(soap, data),0) || soap_put___VersionServ3__GetUpdateVerByCurVer(soap, data, "-VersionServ3:GetUpdateVerByCurVer", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __VersionServ3__GetUpdateVerByCurVer * SOAP_FMAC4 soap_get___VersionServ3__GetUpdateVerByCurVer(struct soap*, struct __VersionServ3__GetUpdateVerByCurVer *, const char*, const char*);

#ifndef soap_read___VersionServ3__GetUpdateVerByCurVer
#define soap_read___VersionServ3__GetUpdateVerByCurVer(soap, data) ( soap_begin_recv(soap) || !soap_get___VersionServ3__GetUpdateVerByCurVer(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __VersionServ3__GetUpdateVerByCurVer * SOAP_FMAC2 soap_instantiate___VersionServ3__GetUpdateVerByCurVer(struct soap*, int, const char*, const char*, size_t*);

inline struct __VersionServ3__GetUpdateVerByCurVer * soap_new___VersionServ3__GetUpdateVerByCurVer(struct soap *soap, int n = -1) { return soap_instantiate___VersionServ3__GetUpdateVerByCurVer(soap, n, NULL, NULL, NULL); }

inline struct __VersionServ3__GetUpdateVerByCurVer * soap_new_req___VersionServ3__GetUpdateVerByCurVer(struct soap *soap) { struct __VersionServ3__GetUpdateVerByCurVer *_p = soap_instantiate___VersionServ3__GetUpdateVerByCurVer(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___VersionServ3__GetUpdateVerByCurVer(soap, _p); } return _p; }

inline struct __VersionServ3__GetUpdateVerByCurVer * soap_new_set___VersionServ3__GetUpdateVerByCurVer(struct soap *soap, _VersionServ__GetUpdateVerByCurVer *VersionServ__GetUpdateVerByCurVer) { struct __VersionServ3__GetUpdateVerByCurVer *_p = soap_instantiate___VersionServ3__GetUpdateVerByCurVer(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___VersionServ3__GetUpdateVerByCurVer(soap, _p); _p->VersionServ__GetUpdateVerByCurVer = VersionServ__GetUpdateVerByCurVer; } return _p; }

inline void soap_delete___VersionServ3__GetUpdateVerByCurVer(struct soap *soap, struct __VersionServ3__GetUpdateVerByCurVer *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___VersionServ3__GetUpdateVerByCurVer(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___VersionServ3__LoginByByteArr
#define SOAP_TYPE___VersionServ3__LoginByByteArr (264)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___VersionServ3__LoginByByteArr(struct soap*, struct __VersionServ3__LoginByByteArr *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___VersionServ3__LoginByByteArr(struct soap*, const struct __VersionServ3__LoginByByteArr *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___VersionServ3__LoginByByteArr(struct soap*, const char*, int, const struct __VersionServ3__LoginByByteArr *, const char*);
SOAP_FMAC3 struct __VersionServ3__LoginByByteArr * SOAP_FMAC4 soap_in___VersionServ3__LoginByByteArr(struct soap*, const char*, struct __VersionServ3__LoginByByteArr *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___VersionServ3__LoginByByteArr(struct soap*, const struct __VersionServ3__LoginByByteArr *, const char*, const char*);

#ifndef soap_write___VersionServ3__LoginByByteArr
#define soap_write___VersionServ3__LoginByByteArr(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___VersionServ3__LoginByByteArr(soap, data),0) || soap_put___VersionServ3__LoginByByteArr(soap, data, "-VersionServ3:LoginByByteArr", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __VersionServ3__LoginByByteArr * SOAP_FMAC4 soap_get___VersionServ3__LoginByByteArr(struct soap*, struct __VersionServ3__LoginByByteArr *, const char*, const char*);

#ifndef soap_read___VersionServ3__LoginByByteArr
#define soap_read___VersionServ3__LoginByByteArr(soap, data) ( soap_begin_recv(soap) || !soap_get___VersionServ3__LoginByByteArr(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __VersionServ3__LoginByByteArr * SOAP_FMAC2 soap_instantiate___VersionServ3__LoginByByteArr(struct soap*, int, const char*, const char*, size_t*);

inline struct __VersionServ3__LoginByByteArr * soap_new___VersionServ3__LoginByByteArr(struct soap *soap, int n = -1) { return soap_instantiate___VersionServ3__LoginByByteArr(soap, n, NULL, NULL, NULL); }

inline struct __VersionServ3__LoginByByteArr * soap_new_req___VersionServ3__LoginByByteArr(struct soap *soap) { struct __VersionServ3__LoginByByteArr *_p = soap_instantiate___VersionServ3__LoginByByteArr(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___VersionServ3__LoginByByteArr(soap, _p); } return _p; }

inline struct __VersionServ3__LoginByByteArr * soap_new_set___VersionServ3__LoginByByteArr(struct soap *soap, _VersionServ__LoginByByteArr *VersionServ__LoginByByteArr) { struct __VersionServ3__LoginByByteArr *_p = soap_instantiate___VersionServ3__LoginByByteArr(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___VersionServ3__LoginByByteArr(soap, _p); _p->VersionServ__LoginByByteArr = VersionServ__LoginByByteArr; } return _p; }

inline void soap_delete___VersionServ3__LoginByByteArr(struct soap *soap, struct __VersionServ3__LoginByByteArr *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___VersionServ3__LoginByByteArr(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___VersionServ3__Login
#define SOAP_TYPE___VersionServ3__Login (262)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___VersionServ3__Login(struct soap*, struct __VersionServ3__Login *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___VersionServ3__Login(struct soap*, const struct __VersionServ3__Login *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___VersionServ3__Login(struct soap*, const char*, int, const struct __VersionServ3__Login *, const char*);
SOAP_FMAC3 struct __VersionServ3__Login * SOAP_FMAC4 soap_in___VersionServ3__Login(struct soap*, const char*, struct __VersionServ3__Login *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___VersionServ3__Login(struct soap*, const struct __VersionServ3__Login *, const char*, const char*);

#ifndef soap_write___VersionServ3__Login
#define soap_write___VersionServ3__Login(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___VersionServ3__Login(soap, data),0) || soap_put___VersionServ3__Login(soap, data, "-VersionServ3:Login", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __VersionServ3__Login * SOAP_FMAC4 soap_get___VersionServ3__Login(struct soap*, struct __VersionServ3__Login *, const char*, const char*);

#ifndef soap_read___VersionServ3__Login
#define soap_read___VersionServ3__Login(soap, data) ( soap_begin_recv(soap) || !soap_get___VersionServ3__Login(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __VersionServ3__Login * SOAP_FMAC2 soap_instantiate___VersionServ3__Login(struct soap*, int, const char*, const char*, size_t*);

inline struct __VersionServ3__Login * soap_new___VersionServ3__Login(struct soap *soap, int n = -1) { return soap_instantiate___VersionServ3__Login(soap, n, NULL, NULL, NULL); }

inline struct __VersionServ3__Login * soap_new_req___VersionServ3__Login(struct soap *soap) { struct __VersionServ3__Login *_p = soap_instantiate___VersionServ3__Login(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___VersionServ3__Login(soap, _p); } return _p; }

inline struct __VersionServ3__Login * soap_new_set___VersionServ3__Login(struct soap *soap, _VersionServ__Login *VersionServ__Login) { struct __VersionServ3__Login *_p = soap_instantiate___VersionServ3__Login(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___VersionServ3__Login(soap, _p); _p->VersionServ__Login = VersionServ__Login; } return _p; }

inline void soap_delete___VersionServ3__Login(struct soap *soap, struct __VersionServ3__Login *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___VersionServ3__Login(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___VersionServ2__SaveOrUpdateObjects
#define SOAP_TYPE___VersionServ2__SaveOrUpdateObjects (260)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___VersionServ2__SaveOrUpdateObjects(struct soap*, struct __VersionServ2__SaveOrUpdateObjects *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___VersionServ2__SaveOrUpdateObjects(struct soap*, const struct __VersionServ2__SaveOrUpdateObjects *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___VersionServ2__SaveOrUpdateObjects(struct soap*, const char*, int, const struct __VersionServ2__SaveOrUpdateObjects *, const char*);
SOAP_FMAC3 struct __VersionServ2__SaveOrUpdateObjects * SOAP_FMAC4 soap_in___VersionServ2__SaveOrUpdateObjects(struct soap*, const char*, struct __VersionServ2__SaveOrUpdateObjects *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___VersionServ2__SaveOrUpdateObjects(struct soap*, const struct __VersionServ2__SaveOrUpdateObjects *, const char*, const char*);

#ifndef soap_write___VersionServ2__SaveOrUpdateObjects
#define soap_write___VersionServ2__SaveOrUpdateObjects(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___VersionServ2__SaveOrUpdateObjects(soap, data),0) || soap_put___VersionServ2__SaveOrUpdateObjects(soap, data, "-VersionServ2:SaveOrUpdateObjects", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __VersionServ2__SaveOrUpdateObjects * SOAP_FMAC4 soap_get___VersionServ2__SaveOrUpdateObjects(struct soap*, struct __VersionServ2__SaveOrUpdateObjects *, const char*, const char*);

#ifndef soap_read___VersionServ2__SaveOrUpdateObjects
#define soap_read___VersionServ2__SaveOrUpdateObjects(soap, data) ( soap_begin_recv(soap) || !soap_get___VersionServ2__SaveOrUpdateObjects(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __VersionServ2__SaveOrUpdateObjects * SOAP_FMAC2 soap_instantiate___VersionServ2__SaveOrUpdateObjects(struct soap*, int, const char*, const char*, size_t*);

inline struct __VersionServ2__SaveOrUpdateObjects * soap_new___VersionServ2__SaveOrUpdateObjects(struct soap *soap, int n = -1) { return soap_instantiate___VersionServ2__SaveOrUpdateObjects(soap, n, NULL, NULL, NULL); }

inline struct __VersionServ2__SaveOrUpdateObjects * soap_new_req___VersionServ2__SaveOrUpdateObjects(struct soap *soap) { struct __VersionServ2__SaveOrUpdateObjects *_p = soap_instantiate___VersionServ2__SaveOrUpdateObjects(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___VersionServ2__SaveOrUpdateObjects(soap, _p); } return _p; }

inline struct __VersionServ2__SaveOrUpdateObjects * soap_new_set___VersionServ2__SaveOrUpdateObjects(struct soap *soap, _VersionServ__SaveOrUpdateObjects *VersionServ__SaveOrUpdateObjects) { struct __VersionServ2__SaveOrUpdateObjects *_p = soap_instantiate___VersionServ2__SaveOrUpdateObjects(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___VersionServ2__SaveOrUpdateObjects(soap, _p); _p->VersionServ__SaveOrUpdateObjects = VersionServ__SaveOrUpdateObjects; } return _p; }

inline void soap_delete___VersionServ2__SaveOrUpdateObjects(struct soap *soap, struct __VersionServ2__SaveOrUpdateObjects *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___VersionServ2__SaveOrUpdateObjects(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___VersionServ2__DownloadObjects
#define SOAP_TYPE___VersionServ2__DownloadObjects (256)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___VersionServ2__DownloadObjects(struct soap*, struct __VersionServ2__DownloadObjects *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___VersionServ2__DownloadObjects(struct soap*, const struct __VersionServ2__DownloadObjects *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___VersionServ2__DownloadObjects(struct soap*, const char*, int, const struct __VersionServ2__DownloadObjects *, const char*);
SOAP_FMAC3 struct __VersionServ2__DownloadObjects * SOAP_FMAC4 soap_in___VersionServ2__DownloadObjects(struct soap*, const char*, struct __VersionServ2__DownloadObjects *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___VersionServ2__DownloadObjects(struct soap*, const struct __VersionServ2__DownloadObjects *, const char*, const char*);

#ifndef soap_write___VersionServ2__DownloadObjects
#define soap_write___VersionServ2__DownloadObjects(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___VersionServ2__DownloadObjects(soap, data),0) || soap_put___VersionServ2__DownloadObjects(soap, data, "-VersionServ2:DownloadObjects", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __VersionServ2__DownloadObjects * SOAP_FMAC4 soap_get___VersionServ2__DownloadObjects(struct soap*, struct __VersionServ2__DownloadObjects *, const char*, const char*);

#ifndef soap_read___VersionServ2__DownloadObjects
#define soap_read___VersionServ2__DownloadObjects(soap, data) ( soap_begin_recv(soap) || !soap_get___VersionServ2__DownloadObjects(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __VersionServ2__DownloadObjects * SOAP_FMAC2 soap_instantiate___VersionServ2__DownloadObjects(struct soap*, int, const char*, const char*, size_t*);

inline struct __VersionServ2__DownloadObjects * soap_new___VersionServ2__DownloadObjects(struct soap *soap, int n = -1) { return soap_instantiate___VersionServ2__DownloadObjects(soap, n, NULL, NULL, NULL); }

inline struct __VersionServ2__DownloadObjects * soap_new_req___VersionServ2__DownloadObjects(struct soap *soap) { struct __VersionServ2__DownloadObjects *_p = soap_instantiate___VersionServ2__DownloadObjects(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___VersionServ2__DownloadObjects(soap, _p); } return _p; }

inline struct __VersionServ2__DownloadObjects * soap_new_set___VersionServ2__DownloadObjects(struct soap *soap, _VersionServ__DownloadObjects *VersionServ__DownloadObjects) { struct __VersionServ2__DownloadObjects *_p = soap_instantiate___VersionServ2__DownloadObjects(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___VersionServ2__DownloadObjects(soap, _p); _p->VersionServ__DownloadObjects = VersionServ__DownloadObjects; } return _p; }

inline void soap_delete___VersionServ2__DownloadObjects(struct soap *soap, struct __VersionServ2__DownloadObjects *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___VersionServ2__DownloadObjects(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___VersionServ2__QueryObjects
#define SOAP_TYPE___VersionServ2__QueryObjects (252)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___VersionServ2__QueryObjects(struct soap*, struct __VersionServ2__QueryObjects *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___VersionServ2__QueryObjects(struct soap*, const struct __VersionServ2__QueryObjects *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___VersionServ2__QueryObjects(struct soap*, const char*, int, const struct __VersionServ2__QueryObjects *, const char*);
SOAP_FMAC3 struct __VersionServ2__QueryObjects * SOAP_FMAC4 soap_in___VersionServ2__QueryObjects(struct soap*, const char*, struct __VersionServ2__QueryObjects *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___VersionServ2__QueryObjects(struct soap*, const struct __VersionServ2__QueryObjects *, const char*, const char*);

#ifndef soap_write___VersionServ2__QueryObjects
#define soap_write___VersionServ2__QueryObjects(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___VersionServ2__QueryObjects(soap, data),0) || soap_put___VersionServ2__QueryObjects(soap, data, "-VersionServ2:QueryObjects", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __VersionServ2__QueryObjects * SOAP_FMAC4 soap_get___VersionServ2__QueryObjects(struct soap*, struct __VersionServ2__QueryObjects *, const char*, const char*);

#ifndef soap_read___VersionServ2__QueryObjects
#define soap_read___VersionServ2__QueryObjects(soap, data) ( soap_begin_recv(soap) || !soap_get___VersionServ2__QueryObjects(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __VersionServ2__QueryObjects * SOAP_FMAC2 soap_instantiate___VersionServ2__QueryObjects(struct soap*, int, const char*, const char*, size_t*);

inline struct __VersionServ2__QueryObjects * soap_new___VersionServ2__QueryObjects(struct soap *soap, int n = -1) { return soap_instantiate___VersionServ2__QueryObjects(soap, n, NULL, NULL, NULL); }

inline struct __VersionServ2__QueryObjects * soap_new_req___VersionServ2__QueryObjects(struct soap *soap) { struct __VersionServ2__QueryObjects *_p = soap_instantiate___VersionServ2__QueryObjects(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___VersionServ2__QueryObjects(soap, _p); } return _p; }

inline struct __VersionServ2__QueryObjects * soap_new_set___VersionServ2__QueryObjects(struct soap *soap, _VersionServ__QueryObjects *VersionServ__QueryObjects) { struct __VersionServ2__QueryObjects *_p = soap_instantiate___VersionServ2__QueryObjects(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___VersionServ2__QueryObjects(soap, _p); _p->VersionServ__QueryObjects = VersionServ__QueryObjects; } return _p; }

inline void soap_delete___VersionServ2__QueryObjects(struct soap *soap, struct __VersionServ2__QueryObjects *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___VersionServ2__QueryObjects(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___VersionServ2__GetFileHeader
#define SOAP_TYPE___VersionServ2__GetFileHeader (248)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___VersionServ2__GetFileHeader(struct soap*, struct __VersionServ2__GetFileHeader *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___VersionServ2__GetFileHeader(struct soap*, const struct __VersionServ2__GetFileHeader *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___VersionServ2__GetFileHeader(struct soap*, const char*, int, const struct __VersionServ2__GetFileHeader *, const char*);
SOAP_FMAC3 struct __VersionServ2__GetFileHeader * SOAP_FMAC4 soap_in___VersionServ2__GetFileHeader(struct soap*, const char*, struct __VersionServ2__GetFileHeader *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___VersionServ2__GetFileHeader(struct soap*, const struct __VersionServ2__GetFileHeader *, const char*, const char*);

#ifndef soap_write___VersionServ2__GetFileHeader
#define soap_write___VersionServ2__GetFileHeader(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___VersionServ2__GetFileHeader(soap, data),0) || soap_put___VersionServ2__GetFileHeader(soap, data, "-VersionServ2:GetFileHeader", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __VersionServ2__GetFileHeader * SOAP_FMAC4 soap_get___VersionServ2__GetFileHeader(struct soap*, struct __VersionServ2__GetFileHeader *, const char*, const char*);

#ifndef soap_read___VersionServ2__GetFileHeader
#define soap_read___VersionServ2__GetFileHeader(soap, data) ( soap_begin_recv(soap) || !soap_get___VersionServ2__GetFileHeader(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __VersionServ2__GetFileHeader * SOAP_FMAC2 soap_instantiate___VersionServ2__GetFileHeader(struct soap*, int, const char*, const char*, size_t*);

inline struct __VersionServ2__GetFileHeader * soap_new___VersionServ2__GetFileHeader(struct soap *soap, int n = -1) { return soap_instantiate___VersionServ2__GetFileHeader(soap, n, NULL, NULL, NULL); }

inline struct __VersionServ2__GetFileHeader * soap_new_req___VersionServ2__GetFileHeader(struct soap *soap) { struct __VersionServ2__GetFileHeader *_p = soap_instantiate___VersionServ2__GetFileHeader(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___VersionServ2__GetFileHeader(soap, _p); } return _p; }

inline struct __VersionServ2__GetFileHeader * soap_new_set___VersionServ2__GetFileHeader(struct soap *soap, _VersionServ__GetFileHeader *VersionServ__GetFileHeader) { struct __VersionServ2__GetFileHeader *_p = soap_instantiate___VersionServ2__GetFileHeader(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___VersionServ2__GetFileHeader(soap, _p); _p->VersionServ__GetFileHeader = VersionServ__GetFileHeader; } return _p; }

inline void soap_delete___VersionServ2__GetFileHeader(struct soap *soap, struct __VersionServ2__GetFileHeader *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___VersionServ2__GetFileHeader(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___VersionServ2__QueryDownLoadItemArrByProductId
#define SOAP_TYPE___VersionServ2__QueryDownLoadItemArrByProductId (244)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___VersionServ2__QueryDownLoadItemArrByProductId(struct soap*, struct __VersionServ2__QueryDownLoadItemArrByProductId *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___VersionServ2__QueryDownLoadItemArrByProductId(struct soap*, const struct __VersionServ2__QueryDownLoadItemArrByProductId *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___VersionServ2__QueryDownLoadItemArrByProductId(struct soap*, const char*, int, const struct __VersionServ2__QueryDownLoadItemArrByProductId *, const char*);
SOAP_FMAC3 struct __VersionServ2__QueryDownLoadItemArrByProductId * SOAP_FMAC4 soap_in___VersionServ2__QueryDownLoadItemArrByProductId(struct soap*, const char*, struct __VersionServ2__QueryDownLoadItemArrByProductId *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___VersionServ2__QueryDownLoadItemArrByProductId(struct soap*, const struct __VersionServ2__QueryDownLoadItemArrByProductId *, const char*, const char*);

#ifndef soap_write___VersionServ2__QueryDownLoadItemArrByProductId
#define soap_write___VersionServ2__QueryDownLoadItemArrByProductId(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___VersionServ2__QueryDownLoadItemArrByProductId(soap, data),0) || soap_put___VersionServ2__QueryDownLoadItemArrByProductId(soap, data, "-VersionServ2:QueryDownLoadItemArrByProductId", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __VersionServ2__QueryDownLoadItemArrByProductId * SOAP_FMAC4 soap_get___VersionServ2__QueryDownLoadItemArrByProductId(struct soap*, struct __VersionServ2__QueryDownLoadItemArrByProductId *, const char*, const char*);

#ifndef soap_read___VersionServ2__QueryDownLoadItemArrByProductId
#define soap_read___VersionServ2__QueryDownLoadItemArrByProductId(soap, data) ( soap_begin_recv(soap) || !soap_get___VersionServ2__QueryDownLoadItemArrByProductId(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __VersionServ2__QueryDownLoadItemArrByProductId * SOAP_FMAC2 soap_instantiate___VersionServ2__QueryDownLoadItemArrByProductId(struct soap*, int, const char*, const char*, size_t*);

inline struct __VersionServ2__QueryDownLoadItemArrByProductId * soap_new___VersionServ2__QueryDownLoadItemArrByProductId(struct soap *soap, int n = -1) { return soap_instantiate___VersionServ2__QueryDownLoadItemArrByProductId(soap, n, NULL, NULL, NULL); }

inline struct __VersionServ2__QueryDownLoadItemArrByProductId * soap_new_req___VersionServ2__QueryDownLoadItemArrByProductId(struct soap *soap) { struct __VersionServ2__QueryDownLoadItemArrByProductId *_p = soap_instantiate___VersionServ2__QueryDownLoadItemArrByProductId(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___VersionServ2__QueryDownLoadItemArrByProductId(soap, _p); } return _p; }

inline struct __VersionServ2__QueryDownLoadItemArrByProductId * soap_new_set___VersionServ2__QueryDownLoadItemArrByProductId(struct soap *soap, _VersionServ__QueryDownLoadItemArrByProductId *VersionServ__QueryDownLoadItemArrByProductId) { struct __VersionServ2__QueryDownLoadItemArrByProductId *_p = soap_instantiate___VersionServ2__QueryDownLoadItemArrByProductId(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___VersionServ2__QueryDownLoadItemArrByProductId(soap, _p); _p->VersionServ__QueryDownLoadItemArrByProductId = VersionServ__QueryDownLoadItemArrByProductId; } return _p; }

inline void soap_delete___VersionServ2__QueryDownLoadItemArrByProductId(struct soap *soap, struct __VersionServ2__QueryDownLoadItemArrByProductId *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___VersionServ2__QueryDownLoadItemArrByProductId(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___VersionServ2__GetDogAccessHistory
#define SOAP_TYPE___VersionServ2__GetDogAccessHistory (240)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___VersionServ2__GetDogAccessHistory(struct soap*, struct __VersionServ2__GetDogAccessHistory *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___VersionServ2__GetDogAccessHistory(struct soap*, const struct __VersionServ2__GetDogAccessHistory *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___VersionServ2__GetDogAccessHistory(struct soap*, const char*, int, const struct __VersionServ2__GetDogAccessHistory *, const char*);
SOAP_FMAC3 struct __VersionServ2__GetDogAccessHistory * SOAP_FMAC4 soap_in___VersionServ2__GetDogAccessHistory(struct soap*, const char*, struct __VersionServ2__GetDogAccessHistory *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___VersionServ2__GetDogAccessHistory(struct soap*, const struct __VersionServ2__GetDogAccessHistory *, const char*, const char*);

#ifndef soap_write___VersionServ2__GetDogAccessHistory
#define soap_write___VersionServ2__GetDogAccessHistory(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___VersionServ2__GetDogAccessHistory(soap, data),0) || soap_put___VersionServ2__GetDogAccessHistory(soap, data, "-VersionServ2:GetDogAccessHistory", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __VersionServ2__GetDogAccessHistory * SOAP_FMAC4 soap_get___VersionServ2__GetDogAccessHistory(struct soap*, struct __VersionServ2__GetDogAccessHistory *, const char*, const char*);

#ifndef soap_read___VersionServ2__GetDogAccessHistory
#define soap_read___VersionServ2__GetDogAccessHistory(soap, data) ( soap_begin_recv(soap) || !soap_get___VersionServ2__GetDogAccessHistory(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __VersionServ2__GetDogAccessHistory * SOAP_FMAC2 soap_instantiate___VersionServ2__GetDogAccessHistory(struct soap*, int, const char*, const char*, size_t*);

inline struct __VersionServ2__GetDogAccessHistory * soap_new___VersionServ2__GetDogAccessHistory(struct soap *soap, int n = -1) { return soap_instantiate___VersionServ2__GetDogAccessHistory(soap, n, NULL, NULL, NULL); }

inline struct __VersionServ2__GetDogAccessHistory * soap_new_req___VersionServ2__GetDogAccessHistory(struct soap *soap) { struct __VersionServ2__GetDogAccessHistory *_p = soap_instantiate___VersionServ2__GetDogAccessHistory(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___VersionServ2__GetDogAccessHistory(soap, _p); } return _p; }

inline struct __VersionServ2__GetDogAccessHistory * soap_new_set___VersionServ2__GetDogAccessHistory(struct soap *soap, _VersionServ__GetDogAccessHistory *VersionServ__GetDogAccessHistory) { struct __VersionServ2__GetDogAccessHistory *_p = soap_instantiate___VersionServ2__GetDogAccessHistory(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___VersionServ2__GetDogAccessHistory(soap, _p); _p->VersionServ__GetDogAccessHistory = VersionServ__GetDogAccessHistory; } return _p; }

inline void soap_delete___VersionServ2__GetDogAccessHistory(struct soap *soap, struct __VersionServ2__GetDogAccessHistory *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___VersionServ2__GetDogAccessHistory(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___VersionServ2__GetVersionReleaseNotes
#define SOAP_TYPE___VersionServ2__GetVersionReleaseNotes (236)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___VersionServ2__GetVersionReleaseNotes(struct soap*, struct __VersionServ2__GetVersionReleaseNotes *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___VersionServ2__GetVersionReleaseNotes(struct soap*, const struct __VersionServ2__GetVersionReleaseNotes *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___VersionServ2__GetVersionReleaseNotes(struct soap*, const char*, int, const struct __VersionServ2__GetVersionReleaseNotes *, const char*);
SOAP_FMAC3 struct __VersionServ2__GetVersionReleaseNotes * SOAP_FMAC4 soap_in___VersionServ2__GetVersionReleaseNotes(struct soap*, const char*, struct __VersionServ2__GetVersionReleaseNotes *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___VersionServ2__GetVersionReleaseNotes(struct soap*, const struct __VersionServ2__GetVersionReleaseNotes *, const char*, const char*);

#ifndef soap_write___VersionServ2__GetVersionReleaseNotes
#define soap_write___VersionServ2__GetVersionReleaseNotes(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___VersionServ2__GetVersionReleaseNotes(soap, data),0) || soap_put___VersionServ2__GetVersionReleaseNotes(soap, data, "-VersionServ2:GetVersionReleaseNotes", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __VersionServ2__GetVersionReleaseNotes * SOAP_FMAC4 soap_get___VersionServ2__GetVersionReleaseNotes(struct soap*, struct __VersionServ2__GetVersionReleaseNotes *, const char*, const char*);

#ifndef soap_read___VersionServ2__GetVersionReleaseNotes
#define soap_read___VersionServ2__GetVersionReleaseNotes(soap, data) ( soap_begin_recv(soap) || !soap_get___VersionServ2__GetVersionReleaseNotes(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __VersionServ2__GetVersionReleaseNotes * SOAP_FMAC2 soap_instantiate___VersionServ2__GetVersionReleaseNotes(struct soap*, int, const char*, const char*, size_t*);

inline struct __VersionServ2__GetVersionReleaseNotes * soap_new___VersionServ2__GetVersionReleaseNotes(struct soap *soap, int n = -1) { return soap_instantiate___VersionServ2__GetVersionReleaseNotes(soap, n, NULL, NULL, NULL); }

inline struct __VersionServ2__GetVersionReleaseNotes * soap_new_req___VersionServ2__GetVersionReleaseNotes(struct soap *soap) { struct __VersionServ2__GetVersionReleaseNotes *_p = soap_instantiate___VersionServ2__GetVersionReleaseNotes(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___VersionServ2__GetVersionReleaseNotes(soap, _p); } return _p; }

inline struct __VersionServ2__GetVersionReleaseNotes * soap_new_set___VersionServ2__GetVersionReleaseNotes(struct soap *soap, _VersionServ__GetVersionReleaseNotes *VersionServ__GetVersionReleaseNotes) { struct __VersionServ2__GetVersionReleaseNotes *_p = soap_instantiate___VersionServ2__GetVersionReleaseNotes(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___VersionServ2__GetVersionReleaseNotes(soap, _p); _p->VersionServ__GetVersionReleaseNotes = VersionServ__GetVersionReleaseNotes; } return _p; }

inline void soap_delete___VersionServ2__GetVersionReleaseNotes(struct soap *soap, struct __VersionServ2__GetVersionReleaseNotes *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___VersionServ2__GetVersionReleaseNotes(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___VersionServ2__CompareVersion
#define SOAP_TYPE___VersionServ2__CompareVersion (232)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___VersionServ2__CompareVersion(struct soap*, struct __VersionServ2__CompareVersion *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___VersionServ2__CompareVersion(struct soap*, const struct __VersionServ2__CompareVersion *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___VersionServ2__CompareVersion(struct soap*, const char*, int, const struct __VersionServ2__CompareVersion *, const char*);
SOAP_FMAC3 struct __VersionServ2__CompareVersion * SOAP_FMAC4 soap_in___VersionServ2__CompareVersion(struct soap*, const char*, struct __VersionServ2__CompareVersion *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___VersionServ2__CompareVersion(struct soap*, const struct __VersionServ2__CompareVersion *, const char*, const char*);

#ifndef soap_write___VersionServ2__CompareVersion
#define soap_write___VersionServ2__CompareVersion(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___VersionServ2__CompareVersion(soap, data),0) || soap_put___VersionServ2__CompareVersion(soap, data, "-VersionServ2:CompareVersion", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __VersionServ2__CompareVersion * SOAP_FMAC4 soap_get___VersionServ2__CompareVersion(struct soap*, struct __VersionServ2__CompareVersion *, const char*, const char*);

#ifndef soap_read___VersionServ2__CompareVersion
#define soap_read___VersionServ2__CompareVersion(soap, data) ( soap_begin_recv(soap) || !soap_get___VersionServ2__CompareVersion(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __VersionServ2__CompareVersion * SOAP_FMAC2 soap_instantiate___VersionServ2__CompareVersion(struct soap*, int, const char*, const char*, size_t*);

inline struct __VersionServ2__CompareVersion * soap_new___VersionServ2__CompareVersion(struct soap *soap, int n = -1) { return soap_instantiate___VersionServ2__CompareVersion(soap, n, NULL, NULL, NULL); }

inline struct __VersionServ2__CompareVersion * soap_new_req___VersionServ2__CompareVersion(struct soap *soap) { struct __VersionServ2__CompareVersion *_p = soap_instantiate___VersionServ2__CompareVersion(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___VersionServ2__CompareVersion(soap, _p); } return _p; }

inline struct __VersionServ2__CompareVersion * soap_new_set___VersionServ2__CompareVersion(struct soap *soap, _VersionServ__CompareVersion *VersionServ__CompareVersion) { struct __VersionServ2__CompareVersion *_p = soap_instantiate___VersionServ2__CompareVersion(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___VersionServ2__CompareVersion(soap, _p); _p->VersionServ__CompareVersion = VersionServ__CompareVersion; } return _p; }

inline void soap_delete___VersionServ2__CompareVersion(struct soap *soap, struct __VersionServ2__CompareVersion *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___VersionServ2__CompareVersion(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___VersionServ2__SetRevisionReadFlag
#define SOAP_TYPE___VersionServ2__SetRevisionReadFlag (228)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___VersionServ2__SetRevisionReadFlag(struct soap*, struct __VersionServ2__SetRevisionReadFlag *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___VersionServ2__SetRevisionReadFlag(struct soap*, const struct __VersionServ2__SetRevisionReadFlag *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___VersionServ2__SetRevisionReadFlag(struct soap*, const char*, int, const struct __VersionServ2__SetRevisionReadFlag *, const char*);
SOAP_FMAC3 struct __VersionServ2__SetRevisionReadFlag * SOAP_FMAC4 soap_in___VersionServ2__SetRevisionReadFlag(struct soap*, const char*, struct __VersionServ2__SetRevisionReadFlag *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___VersionServ2__SetRevisionReadFlag(struct soap*, const struct __VersionServ2__SetRevisionReadFlag *, const char*, const char*);

#ifndef soap_write___VersionServ2__SetRevisionReadFlag
#define soap_write___VersionServ2__SetRevisionReadFlag(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___VersionServ2__SetRevisionReadFlag(soap, data),0) || soap_put___VersionServ2__SetRevisionReadFlag(soap, data, "-VersionServ2:SetRevisionReadFlag", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __VersionServ2__SetRevisionReadFlag * SOAP_FMAC4 soap_get___VersionServ2__SetRevisionReadFlag(struct soap*, struct __VersionServ2__SetRevisionReadFlag *, const char*, const char*);

#ifndef soap_read___VersionServ2__SetRevisionReadFlag
#define soap_read___VersionServ2__SetRevisionReadFlag(soap, data) ( soap_begin_recv(soap) || !soap_get___VersionServ2__SetRevisionReadFlag(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __VersionServ2__SetRevisionReadFlag * SOAP_FMAC2 soap_instantiate___VersionServ2__SetRevisionReadFlag(struct soap*, int, const char*, const char*, size_t*);

inline struct __VersionServ2__SetRevisionReadFlag * soap_new___VersionServ2__SetRevisionReadFlag(struct soap *soap, int n = -1) { return soap_instantiate___VersionServ2__SetRevisionReadFlag(soap, n, NULL, NULL, NULL); }

inline struct __VersionServ2__SetRevisionReadFlag * soap_new_req___VersionServ2__SetRevisionReadFlag(struct soap *soap) { struct __VersionServ2__SetRevisionReadFlag *_p = soap_instantiate___VersionServ2__SetRevisionReadFlag(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___VersionServ2__SetRevisionReadFlag(soap, _p); } return _p; }

inline struct __VersionServ2__SetRevisionReadFlag * soap_new_set___VersionServ2__SetRevisionReadFlag(struct soap *soap, _VersionServ__SetRevisionReadFlag *VersionServ__SetRevisionReadFlag) { struct __VersionServ2__SetRevisionReadFlag *_p = soap_instantiate___VersionServ2__SetRevisionReadFlag(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___VersionServ2__SetRevisionReadFlag(soap, _p); _p->VersionServ__SetRevisionReadFlag = VersionServ__SetRevisionReadFlag; } return _p; }

inline void soap_delete___VersionServ2__SetRevisionReadFlag(struct soap *soap, struct __VersionServ2__SetRevisionReadFlag *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___VersionServ2__SetRevisionReadFlag(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___VersionServ2__GetUpdateVerByCurVer
#define SOAP_TYPE___VersionServ2__GetUpdateVerByCurVer (224)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___VersionServ2__GetUpdateVerByCurVer(struct soap*, struct __VersionServ2__GetUpdateVerByCurVer *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___VersionServ2__GetUpdateVerByCurVer(struct soap*, const struct __VersionServ2__GetUpdateVerByCurVer *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___VersionServ2__GetUpdateVerByCurVer(struct soap*, const char*, int, const struct __VersionServ2__GetUpdateVerByCurVer *, const char*);
SOAP_FMAC3 struct __VersionServ2__GetUpdateVerByCurVer * SOAP_FMAC4 soap_in___VersionServ2__GetUpdateVerByCurVer(struct soap*, const char*, struct __VersionServ2__GetUpdateVerByCurVer *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___VersionServ2__GetUpdateVerByCurVer(struct soap*, const struct __VersionServ2__GetUpdateVerByCurVer *, const char*, const char*);

#ifndef soap_write___VersionServ2__GetUpdateVerByCurVer
#define soap_write___VersionServ2__GetUpdateVerByCurVer(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___VersionServ2__GetUpdateVerByCurVer(soap, data),0) || soap_put___VersionServ2__GetUpdateVerByCurVer(soap, data, "-VersionServ2:GetUpdateVerByCurVer", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __VersionServ2__GetUpdateVerByCurVer * SOAP_FMAC4 soap_get___VersionServ2__GetUpdateVerByCurVer(struct soap*, struct __VersionServ2__GetUpdateVerByCurVer *, const char*, const char*);

#ifndef soap_read___VersionServ2__GetUpdateVerByCurVer
#define soap_read___VersionServ2__GetUpdateVerByCurVer(soap, data) ( soap_begin_recv(soap) || !soap_get___VersionServ2__GetUpdateVerByCurVer(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __VersionServ2__GetUpdateVerByCurVer * SOAP_FMAC2 soap_instantiate___VersionServ2__GetUpdateVerByCurVer(struct soap*, int, const char*, const char*, size_t*);

inline struct __VersionServ2__GetUpdateVerByCurVer * soap_new___VersionServ2__GetUpdateVerByCurVer(struct soap *soap, int n = -1) { return soap_instantiate___VersionServ2__GetUpdateVerByCurVer(soap, n, NULL, NULL, NULL); }

inline struct __VersionServ2__GetUpdateVerByCurVer * soap_new_req___VersionServ2__GetUpdateVerByCurVer(struct soap *soap) { struct __VersionServ2__GetUpdateVerByCurVer *_p = soap_instantiate___VersionServ2__GetUpdateVerByCurVer(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___VersionServ2__GetUpdateVerByCurVer(soap, _p); } return _p; }

inline struct __VersionServ2__GetUpdateVerByCurVer * soap_new_set___VersionServ2__GetUpdateVerByCurVer(struct soap *soap, _VersionServ__GetUpdateVerByCurVer *VersionServ__GetUpdateVerByCurVer) { struct __VersionServ2__GetUpdateVerByCurVer *_p = soap_instantiate___VersionServ2__GetUpdateVerByCurVer(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___VersionServ2__GetUpdateVerByCurVer(soap, _p); _p->VersionServ__GetUpdateVerByCurVer = VersionServ__GetUpdateVerByCurVer; } return _p; }

inline void soap_delete___VersionServ2__GetUpdateVerByCurVer(struct soap *soap, struct __VersionServ2__GetUpdateVerByCurVer *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___VersionServ2__GetUpdateVerByCurVer(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___VersionServ2__LoginByByteArr
#define SOAP_TYPE___VersionServ2__LoginByByteArr (220)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___VersionServ2__LoginByByteArr(struct soap*, struct __VersionServ2__LoginByByteArr *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___VersionServ2__LoginByByteArr(struct soap*, const struct __VersionServ2__LoginByByteArr *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___VersionServ2__LoginByByteArr(struct soap*, const char*, int, const struct __VersionServ2__LoginByByteArr *, const char*);
SOAP_FMAC3 struct __VersionServ2__LoginByByteArr * SOAP_FMAC4 soap_in___VersionServ2__LoginByByteArr(struct soap*, const char*, struct __VersionServ2__LoginByByteArr *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___VersionServ2__LoginByByteArr(struct soap*, const struct __VersionServ2__LoginByByteArr *, const char*, const char*);

#ifndef soap_write___VersionServ2__LoginByByteArr
#define soap_write___VersionServ2__LoginByByteArr(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___VersionServ2__LoginByByteArr(soap, data),0) || soap_put___VersionServ2__LoginByByteArr(soap, data, "-VersionServ2:LoginByByteArr", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __VersionServ2__LoginByByteArr * SOAP_FMAC4 soap_get___VersionServ2__LoginByByteArr(struct soap*, struct __VersionServ2__LoginByByteArr *, const char*, const char*);

#ifndef soap_read___VersionServ2__LoginByByteArr
#define soap_read___VersionServ2__LoginByByteArr(soap, data) ( soap_begin_recv(soap) || !soap_get___VersionServ2__LoginByByteArr(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __VersionServ2__LoginByByteArr * SOAP_FMAC2 soap_instantiate___VersionServ2__LoginByByteArr(struct soap*, int, const char*, const char*, size_t*);

inline struct __VersionServ2__LoginByByteArr * soap_new___VersionServ2__LoginByByteArr(struct soap *soap, int n = -1) { return soap_instantiate___VersionServ2__LoginByByteArr(soap, n, NULL, NULL, NULL); }

inline struct __VersionServ2__LoginByByteArr * soap_new_req___VersionServ2__LoginByByteArr(struct soap *soap) { struct __VersionServ2__LoginByByteArr *_p = soap_instantiate___VersionServ2__LoginByByteArr(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___VersionServ2__LoginByByteArr(soap, _p); } return _p; }

inline struct __VersionServ2__LoginByByteArr * soap_new_set___VersionServ2__LoginByByteArr(struct soap *soap, _VersionServ__LoginByByteArr *VersionServ__LoginByByteArr) { struct __VersionServ2__LoginByByteArr *_p = soap_instantiate___VersionServ2__LoginByByteArr(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___VersionServ2__LoginByByteArr(soap, _p); _p->VersionServ__LoginByByteArr = VersionServ__LoginByByteArr; } return _p; }

inline void soap_delete___VersionServ2__LoginByByteArr(struct soap *soap, struct __VersionServ2__LoginByByteArr *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___VersionServ2__LoginByByteArr(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___VersionServ2__Login
#define SOAP_TYPE___VersionServ2__Login (216)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___VersionServ2__Login(struct soap*, struct __VersionServ2__Login *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___VersionServ2__Login(struct soap*, const struct __VersionServ2__Login *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___VersionServ2__Login(struct soap*, const char*, int, const struct __VersionServ2__Login *, const char*);
SOAP_FMAC3 struct __VersionServ2__Login * SOAP_FMAC4 soap_in___VersionServ2__Login(struct soap*, const char*, struct __VersionServ2__Login *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___VersionServ2__Login(struct soap*, const struct __VersionServ2__Login *, const char*, const char*);

#ifndef soap_write___VersionServ2__Login
#define soap_write___VersionServ2__Login(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___VersionServ2__Login(soap, data),0) || soap_put___VersionServ2__Login(soap, data, "-VersionServ2:Login", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __VersionServ2__Login * SOAP_FMAC4 soap_get___VersionServ2__Login(struct soap*, struct __VersionServ2__Login *, const char*, const char*);

#ifndef soap_read___VersionServ2__Login
#define soap_read___VersionServ2__Login(soap, data) ( soap_begin_recv(soap) || !soap_get___VersionServ2__Login(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __VersionServ2__Login * SOAP_FMAC2 soap_instantiate___VersionServ2__Login(struct soap*, int, const char*, const char*, size_t*);

inline struct __VersionServ2__Login * soap_new___VersionServ2__Login(struct soap *soap, int n = -1) { return soap_instantiate___VersionServ2__Login(soap, n, NULL, NULL, NULL); }

inline struct __VersionServ2__Login * soap_new_req___VersionServ2__Login(struct soap *soap) { struct __VersionServ2__Login *_p = soap_instantiate___VersionServ2__Login(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___VersionServ2__Login(soap, _p); } return _p; }

inline struct __VersionServ2__Login * soap_new_set___VersionServ2__Login(struct soap *soap, _VersionServ__Login *VersionServ__Login) { struct __VersionServ2__Login *_p = soap_instantiate___VersionServ2__Login(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___VersionServ2__Login(soap, _p); _p->VersionServ__Login = VersionServ__Login; } return _p; }

inline void soap_delete___VersionServ2__Login(struct soap *soap, struct __VersionServ2__Login *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___VersionServ2__Login(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___TMSServ3__CloseFileObjectDataProvider
#define SOAP_TYPE___TMSServ3__CloseFileObjectDataProvider (163)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___TMSServ3__CloseFileObjectDataProvider(struct soap*, struct __TMSServ3__CloseFileObjectDataProvider *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___TMSServ3__CloseFileObjectDataProvider(struct soap*, const struct __TMSServ3__CloseFileObjectDataProvider *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___TMSServ3__CloseFileObjectDataProvider(struct soap*, const char*, int, const struct __TMSServ3__CloseFileObjectDataProvider *, const char*);
SOAP_FMAC3 struct __TMSServ3__CloseFileObjectDataProvider * SOAP_FMAC4 soap_in___TMSServ3__CloseFileObjectDataProvider(struct soap*, const char*, struct __TMSServ3__CloseFileObjectDataProvider *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___TMSServ3__CloseFileObjectDataProvider(struct soap*, const struct __TMSServ3__CloseFileObjectDataProvider *, const char*, const char*);

#ifndef soap_write___TMSServ3__CloseFileObjectDataProvider
#define soap_write___TMSServ3__CloseFileObjectDataProvider(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___TMSServ3__CloseFileObjectDataProvider(soap, data),0) || soap_put___TMSServ3__CloseFileObjectDataProvider(soap, data, "-TMSServ3:CloseFileObjectDataProvider", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __TMSServ3__CloseFileObjectDataProvider * SOAP_FMAC4 soap_get___TMSServ3__CloseFileObjectDataProvider(struct soap*, struct __TMSServ3__CloseFileObjectDataProvider *, const char*, const char*);

#ifndef soap_read___TMSServ3__CloseFileObjectDataProvider
#define soap_read___TMSServ3__CloseFileObjectDataProvider(soap, data) ( soap_begin_recv(soap) || !soap_get___TMSServ3__CloseFileObjectDataProvider(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __TMSServ3__CloseFileObjectDataProvider * SOAP_FMAC2 soap_instantiate___TMSServ3__CloseFileObjectDataProvider(struct soap*, int, const char*, const char*, size_t*);

inline struct __TMSServ3__CloseFileObjectDataProvider * soap_new___TMSServ3__CloseFileObjectDataProvider(struct soap *soap, int n = -1) { return soap_instantiate___TMSServ3__CloseFileObjectDataProvider(soap, n, NULL, NULL, NULL); }

inline struct __TMSServ3__CloseFileObjectDataProvider * soap_new_req___TMSServ3__CloseFileObjectDataProvider(struct soap *soap) { struct __TMSServ3__CloseFileObjectDataProvider *_p = soap_instantiate___TMSServ3__CloseFileObjectDataProvider(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___TMSServ3__CloseFileObjectDataProvider(soap, _p); } return _p; }

inline struct __TMSServ3__CloseFileObjectDataProvider * soap_new_set___TMSServ3__CloseFileObjectDataProvider(struct soap *soap, _TMSServ__CloseFileObjectDataProvider *TMSServ__CloseFileObjectDataProvider) { struct __TMSServ3__CloseFileObjectDataProvider *_p = soap_instantiate___TMSServ3__CloseFileObjectDataProvider(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___TMSServ3__CloseFileObjectDataProvider(soap, _p); _p->TMSServ__CloseFileObjectDataProvider = TMSServ__CloseFileObjectDataProvider; } return _p; }

inline void soap_delete___TMSServ3__CloseFileObjectDataProvider(struct soap *soap, struct __TMSServ3__CloseFileObjectDataProvider *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___TMSServ3__CloseFileObjectDataProvider(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___TMSServ3__DownloadFileObject
#define SOAP_TYPE___TMSServ3__DownloadFileObject (161)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___TMSServ3__DownloadFileObject(struct soap*, struct __TMSServ3__DownloadFileObject *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___TMSServ3__DownloadFileObject(struct soap*, const struct __TMSServ3__DownloadFileObject *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___TMSServ3__DownloadFileObject(struct soap*, const char*, int, const struct __TMSServ3__DownloadFileObject *, const char*);
SOAP_FMAC3 struct __TMSServ3__DownloadFileObject * SOAP_FMAC4 soap_in___TMSServ3__DownloadFileObject(struct soap*, const char*, struct __TMSServ3__DownloadFileObject *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___TMSServ3__DownloadFileObject(struct soap*, const struct __TMSServ3__DownloadFileObject *, const char*, const char*);

#ifndef soap_write___TMSServ3__DownloadFileObject
#define soap_write___TMSServ3__DownloadFileObject(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___TMSServ3__DownloadFileObject(soap, data),0) || soap_put___TMSServ3__DownloadFileObject(soap, data, "-TMSServ3:DownloadFileObject", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __TMSServ3__DownloadFileObject * SOAP_FMAC4 soap_get___TMSServ3__DownloadFileObject(struct soap*, struct __TMSServ3__DownloadFileObject *, const char*, const char*);

#ifndef soap_read___TMSServ3__DownloadFileObject
#define soap_read___TMSServ3__DownloadFileObject(soap, data) ( soap_begin_recv(soap) || !soap_get___TMSServ3__DownloadFileObject(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __TMSServ3__DownloadFileObject * SOAP_FMAC2 soap_instantiate___TMSServ3__DownloadFileObject(struct soap*, int, const char*, const char*, size_t*);

inline struct __TMSServ3__DownloadFileObject * soap_new___TMSServ3__DownloadFileObject(struct soap *soap, int n = -1) { return soap_instantiate___TMSServ3__DownloadFileObject(soap, n, NULL, NULL, NULL); }

inline struct __TMSServ3__DownloadFileObject * soap_new_req___TMSServ3__DownloadFileObject(struct soap *soap) { struct __TMSServ3__DownloadFileObject *_p = soap_instantiate___TMSServ3__DownloadFileObject(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___TMSServ3__DownloadFileObject(soap, _p); } return _p; }

inline struct __TMSServ3__DownloadFileObject * soap_new_set___TMSServ3__DownloadFileObject(struct soap *soap, _TMSServ__DownloadFileObject *TMSServ__DownloadFileObject) { struct __TMSServ3__DownloadFileObject *_p = soap_instantiate___TMSServ3__DownloadFileObject(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___TMSServ3__DownloadFileObject(soap, _p); _p->TMSServ__DownloadFileObject = TMSServ__DownloadFileObject; } return _p; }

inline void soap_delete___TMSServ3__DownloadFileObject(struct soap *soap, struct __TMSServ3__DownloadFileObject *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___TMSServ3__DownloadFileObject(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___TMSServ3__OpenServerObjectDataProvider
#define SOAP_TYPE___TMSServ3__OpenServerObjectDataProvider (159)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___TMSServ3__OpenServerObjectDataProvider(struct soap*, struct __TMSServ3__OpenServerObjectDataProvider *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___TMSServ3__OpenServerObjectDataProvider(struct soap*, const struct __TMSServ3__OpenServerObjectDataProvider *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___TMSServ3__OpenServerObjectDataProvider(struct soap*, const char*, int, const struct __TMSServ3__OpenServerObjectDataProvider *, const char*);
SOAP_FMAC3 struct __TMSServ3__OpenServerObjectDataProvider * SOAP_FMAC4 soap_in___TMSServ3__OpenServerObjectDataProvider(struct soap*, const char*, struct __TMSServ3__OpenServerObjectDataProvider *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___TMSServ3__OpenServerObjectDataProvider(struct soap*, const struct __TMSServ3__OpenServerObjectDataProvider *, const char*, const char*);

#ifndef soap_write___TMSServ3__OpenServerObjectDataProvider
#define soap_write___TMSServ3__OpenServerObjectDataProvider(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___TMSServ3__OpenServerObjectDataProvider(soap, data),0) || soap_put___TMSServ3__OpenServerObjectDataProvider(soap, data, "-TMSServ3:OpenServerObjectDataProvider", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __TMSServ3__OpenServerObjectDataProvider * SOAP_FMAC4 soap_get___TMSServ3__OpenServerObjectDataProvider(struct soap*, struct __TMSServ3__OpenServerObjectDataProvider *, const char*, const char*);

#ifndef soap_read___TMSServ3__OpenServerObjectDataProvider
#define soap_read___TMSServ3__OpenServerObjectDataProvider(soap, data) ( soap_begin_recv(soap) || !soap_get___TMSServ3__OpenServerObjectDataProvider(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __TMSServ3__OpenServerObjectDataProvider * SOAP_FMAC2 soap_instantiate___TMSServ3__OpenServerObjectDataProvider(struct soap*, int, const char*, const char*, size_t*);

inline struct __TMSServ3__OpenServerObjectDataProvider * soap_new___TMSServ3__OpenServerObjectDataProvider(struct soap *soap, int n = -1) { return soap_instantiate___TMSServ3__OpenServerObjectDataProvider(soap, n, NULL, NULL, NULL); }

inline struct __TMSServ3__OpenServerObjectDataProvider * soap_new_req___TMSServ3__OpenServerObjectDataProvider(struct soap *soap) { struct __TMSServ3__OpenServerObjectDataProvider *_p = soap_instantiate___TMSServ3__OpenServerObjectDataProvider(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___TMSServ3__OpenServerObjectDataProvider(soap, _p); } return _p; }

inline struct __TMSServ3__OpenServerObjectDataProvider * soap_new_set___TMSServ3__OpenServerObjectDataProvider(struct soap *soap, _TMSServ__OpenServerObjectDataProvider *TMSServ__OpenServerObjectDataProvider) { struct __TMSServ3__OpenServerObjectDataProvider *_p = soap_instantiate___TMSServ3__OpenServerObjectDataProvider(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___TMSServ3__OpenServerObjectDataProvider(soap, _p); _p->TMSServ__OpenServerObjectDataProvider = TMSServ__OpenServerObjectDataProvider; } return _p; }

inline void soap_delete___TMSServ3__OpenServerObjectDataProvider(struct soap *soap, struct __TMSServ3__OpenServerObjectDataProvider *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___TMSServ3__OpenServerObjectDataProvider(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___TMSServ3__OpenTapModelDataProvider
#define SOAP_TYPE___TMSServ3__OpenTapModelDataProvider (157)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___TMSServ3__OpenTapModelDataProvider(struct soap*, struct __TMSServ3__OpenTapModelDataProvider *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___TMSServ3__OpenTapModelDataProvider(struct soap*, const struct __TMSServ3__OpenTapModelDataProvider *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___TMSServ3__OpenTapModelDataProvider(struct soap*, const char*, int, const struct __TMSServ3__OpenTapModelDataProvider *, const char*);
SOAP_FMAC3 struct __TMSServ3__OpenTapModelDataProvider * SOAP_FMAC4 soap_in___TMSServ3__OpenTapModelDataProvider(struct soap*, const char*, struct __TMSServ3__OpenTapModelDataProvider *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___TMSServ3__OpenTapModelDataProvider(struct soap*, const struct __TMSServ3__OpenTapModelDataProvider *, const char*, const char*);

#ifndef soap_write___TMSServ3__OpenTapModelDataProvider
#define soap_write___TMSServ3__OpenTapModelDataProvider(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___TMSServ3__OpenTapModelDataProvider(soap, data),0) || soap_put___TMSServ3__OpenTapModelDataProvider(soap, data, "-TMSServ3:OpenTapModelDataProvider", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __TMSServ3__OpenTapModelDataProvider * SOAP_FMAC4 soap_get___TMSServ3__OpenTapModelDataProvider(struct soap*, struct __TMSServ3__OpenTapModelDataProvider *, const char*, const char*);

#ifndef soap_read___TMSServ3__OpenTapModelDataProvider
#define soap_read___TMSServ3__OpenTapModelDataProvider(soap, data) ( soap_begin_recv(soap) || !soap_get___TMSServ3__OpenTapModelDataProvider(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __TMSServ3__OpenTapModelDataProvider * SOAP_FMAC2 soap_instantiate___TMSServ3__OpenTapModelDataProvider(struct soap*, int, const char*, const char*, size_t*);

inline struct __TMSServ3__OpenTapModelDataProvider * soap_new___TMSServ3__OpenTapModelDataProvider(struct soap *soap, int n = -1) { return soap_instantiate___TMSServ3__OpenTapModelDataProvider(soap, n, NULL, NULL, NULL); }

inline struct __TMSServ3__OpenTapModelDataProvider * soap_new_req___TMSServ3__OpenTapModelDataProvider(struct soap *soap) { struct __TMSServ3__OpenTapModelDataProvider *_p = soap_instantiate___TMSServ3__OpenTapModelDataProvider(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___TMSServ3__OpenTapModelDataProvider(soap, _p); } return _p; }

inline struct __TMSServ3__OpenTapModelDataProvider * soap_new_set___TMSServ3__OpenTapModelDataProvider(struct soap *soap, _TMSServ__OpenTapModelDataProvider *TMSServ__OpenTapModelDataProvider) { struct __TMSServ3__OpenTapModelDataProvider *_p = soap_instantiate___TMSServ3__OpenTapModelDataProvider(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___TMSServ3__OpenTapModelDataProvider(soap, _p); _p->TMSServ__OpenTapModelDataProvider = TMSServ__OpenTapModelDataProvider; } return _p; }

inline void soap_delete___TMSServ3__OpenTapModelDataProvider(struct soap *soap, struct __TMSServ3__OpenTapModelDataProvider *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___TMSServ3__OpenTapModelDataProvider(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___TMSServ3__OpenFileObjectDataProvider
#define SOAP_TYPE___TMSServ3__OpenFileObjectDataProvider (155)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___TMSServ3__OpenFileObjectDataProvider(struct soap*, struct __TMSServ3__OpenFileObjectDataProvider *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___TMSServ3__OpenFileObjectDataProvider(struct soap*, const struct __TMSServ3__OpenFileObjectDataProvider *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___TMSServ3__OpenFileObjectDataProvider(struct soap*, const char*, int, const struct __TMSServ3__OpenFileObjectDataProvider *, const char*);
SOAP_FMAC3 struct __TMSServ3__OpenFileObjectDataProvider * SOAP_FMAC4 soap_in___TMSServ3__OpenFileObjectDataProvider(struct soap*, const char*, struct __TMSServ3__OpenFileObjectDataProvider *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___TMSServ3__OpenFileObjectDataProvider(struct soap*, const struct __TMSServ3__OpenFileObjectDataProvider *, const char*, const char*);

#ifndef soap_write___TMSServ3__OpenFileObjectDataProvider
#define soap_write___TMSServ3__OpenFileObjectDataProvider(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___TMSServ3__OpenFileObjectDataProvider(soap, data),0) || soap_put___TMSServ3__OpenFileObjectDataProvider(soap, data, "-TMSServ3:OpenFileObjectDataProvider", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __TMSServ3__OpenFileObjectDataProvider * SOAP_FMAC4 soap_get___TMSServ3__OpenFileObjectDataProvider(struct soap*, struct __TMSServ3__OpenFileObjectDataProvider *, const char*, const char*);

#ifndef soap_read___TMSServ3__OpenFileObjectDataProvider
#define soap_read___TMSServ3__OpenFileObjectDataProvider(soap, data) ( soap_begin_recv(soap) || !soap_get___TMSServ3__OpenFileObjectDataProvider(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __TMSServ3__OpenFileObjectDataProvider * SOAP_FMAC2 soap_instantiate___TMSServ3__OpenFileObjectDataProvider(struct soap*, int, const char*, const char*, size_t*);

inline struct __TMSServ3__OpenFileObjectDataProvider * soap_new___TMSServ3__OpenFileObjectDataProvider(struct soap *soap, int n = -1) { return soap_instantiate___TMSServ3__OpenFileObjectDataProvider(soap, n, NULL, NULL, NULL); }

inline struct __TMSServ3__OpenFileObjectDataProvider * soap_new_req___TMSServ3__OpenFileObjectDataProvider(struct soap *soap) { struct __TMSServ3__OpenFileObjectDataProvider *_p = soap_instantiate___TMSServ3__OpenFileObjectDataProvider(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___TMSServ3__OpenFileObjectDataProvider(soap, _p); } return _p; }

inline struct __TMSServ3__OpenFileObjectDataProvider * soap_new_set___TMSServ3__OpenFileObjectDataProvider(struct soap *soap, _TMSServ__OpenFileObjectDataProvider *TMSServ__OpenFileObjectDataProvider) { struct __TMSServ3__OpenFileObjectDataProvider *_p = soap_instantiate___TMSServ3__OpenFileObjectDataProvider(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___TMSServ3__OpenFileObjectDataProvider(soap, _p); _p->TMSServ__OpenFileObjectDataProvider = TMSServ__OpenFileObjectDataProvider; } return _p; }

inline void soap_delete___TMSServ3__OpenFileObjectDataProvider(struct soap *soap, struct __TMSServ3__OpenFileObjectDataProvider *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___TMSServ3__OpenFileObjectDataProvider(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___TMSServ3__FinalizeFileObjectData
#define SOAP_TYPE___TMSServ3__FinalizeFileObjectData (153)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___TMSServ3__FinalizeFileObjectData(struct soap*, struct __TMSServ3__FinalizeFileObjectData *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___TMSServ3__FinalizeFileObjectData(struct soap*, const struct __TMSServ3__FinalizeFileObjectData *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___TMSServ3__FinalizeFileObjectData(struct soap*, const char*, int, const struct __TMSServ3__FinalizeFileObjectData *, const char*);
SOAP_FMAC3 struct __TMSServ3__FinalizeFileObjectData * SOAP_FMAC4 soap_in___TMSServ3__FinalizeFileObjectData(struct soap*, const char*, struct __TMSServ3__FinalizeFileObjectData *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___TMSServ3__FinalizeFileObjectData(struct soap*, const struct __TMSServ3__FinalizeFileObjectData *, const char*, const char*);

#ifndef soap_write___TMSServ3__FinalizeFileObjectData
#define soap_write___TMSServ3__FinalizeFileObjectData(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___TMSServ3__FinalizeFileObjectData(soap, data),0) || soap_put___TMSServ3__FinalizeFileObjectData(soap, data, "-TMSServ3:FinalizeFileObjectData", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __TMSServ3__FinalizeFileObjectData * SOAP_FMAC4 soap_get___TMSServ3__FinalizeFileObjectData(struct soap*, struct __TMSServ3__FinalizeFileObjectData *, const char*, const char*);

#ifndef soap_read___TMSServ3__FinalizeFileObjectData
#define soap_read___TMSServ3__FinalizeFileObjectData(soap, data) ( soap_begin_recv(soap) || !soap_get___TMSServ3__FinalizeFileObjectData(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __TMSServ3__FinalizeFileObjectData * SOAP_FMAC2 soap_instantiate___TMSServ3__FinalizeFileObjectData(struct soap*, int, const char*, const char*, size_t*);

inline struct __TMSServ3__FinalizeFileObjectData * soap_new___TMSServ3__FinalizeFileObjectData(struct soap *soap, int n = -1) { return soap_instantiate___TMSServ3__FinalizeFileObjectData(soap, n, NULL, NULL, NULL); }

inline struct __TMSServ3__FinalizeFileObjectData * soap_new_req___TMSServ3__FinalizeFileObjectData(struct soap *soap) { struct __TMSServ3__FinalizeFileObjectData *_p = soap_instantiate___TMSServ3__FinalizeFileObjectData(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___TMSServ3__FinalizeFileObjectData(soap, _p); } return _p; }

inline struct __TMSServ3__FinalizeFileObjectData * soap_new_set___TMSServ3__FinalizeFileObjectData(struct soap *soap, _TMSServ__FinalizeFileObjectData *TMSServ__FinalizeFileObjectData) { struct __TMSServ3__FinalizeFileObjectData *_p = soap_instantiate___TMSServ3__FinalizeFileObjectData(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___TMSServ3__FinalizeFileObjectData(soap, _p); _p->TMSServ__FinalizeFileObjectData = TMSServ__FinalizeFileObjectData; } return _p; }

inline void soap_delete___TMSServ3__FinalizeFileObjectData(struct soap *soap, struct __TMSServ3__FinalizeFileObjectData *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___TMSServ3__FinalizeFileObjectData(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___TMSServ3__UploadFileObject
#define SOAP_TYPE___TMSServ3__UploadFileObject (151)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___TMSServ3__UploadFileObject(struct soap*, struct __TMSServ3__UploadFileObject *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___TMSServ3__UploadFileObject(struct soap*, const struct __TMSServ3__UploadFileObject *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___TMSServ3__UploadFileObject(struct soap*, const char*, int, const struct __TMSServ3__UploadFileObject *, const char*);
SOAP_FMAC3 struct __TMSServ3__UploadFileObject * SOAP_FMAC4 soap_in___TMSServ3__UploadFileObject(struct soap*, const char*, struct __TMSServ3__UploadFileObject *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___TMSServ3__UploadFileObject(struct soap*, const struct __TMSServ3__UploadFileObject *, const char*, const char*);

#ifndef soap_write___TMSServ3__UploadFileObject
#define soap_write___TMSServ3__UploadFileObject(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___TMSServ3__UploadFileObject(soap, data),0) || soap_put___TMSServ3__UploadFileObject(soap, data, "-TMSServ3:UploadFileObject", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __TMSServ3__UploadFileObject * SOAP_FMAC4 soap_get___TMSServ3__UploadFileObject(struct soap*, struct __TMSServ3__UploadFileObject *, const char*, const char*);

#ifndef soap_read___TMSServ3__UploadFileObject
#define soap_read___TMSServ3__UploadFileObject(soap, data) ( soap_begin_recv(soap) || !soap_get___TMSServ3__UploadFileObject(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __TMSServ3__UploadFileObject * SOAP_FMAC2 soap_instantiate___TMSServ3__UploadFileObject(struct soap*, int, const char*, const char*, size_t*);

inline struct __TMSServ3__UploadFileObject * soap_new___TMSServ3__UploadFileObject(struct soap *soap, int n = -1) { return soap_instantiate___TMSServ3__UploadFileObject(soap, n, NULL, NULL, NULL); }

inline struct __TMSServ3__UploadFileObject * soap_new_req___TMSServ3__UploadFileObject(struct soap *soap) { struct __TMSServ3__UploadFileObject *_p = soap_instantiate___TMSServ3__UploadFileObject(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___TMSServ3__UploadFileObject(soap, _p); } return _p; }

inline struct __TMSServ3__UploadFileObject * soap_new_set___TMSServ3__UploadFileObject(struct soap *soap, _TMSServ__UploadFileObject *TMSServ__UploadFileObject) { struct __TMSServ3__UploadFileObject *_p = soap_instantiate___TMSServ3__UploadFileObject(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___TMSServ3__UploadFileObject(soap, _p); _p->TMSServ__UploadFileObject = TMSServ__UploadFileObject; } return _p; }

inline void soap_delete___TMSServ3__UploadFileObject(struct soap *soap, struct __TMSServ3__UploadFileObject *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___TMSServ3__UploadFileObject(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___TMSServ3__DownloadFileById
#define SOAP_TYPE___TMSServ3__DownloadFileById (149)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___TMSServ3__DownloadFileById(struct soap*, struct __TMSServ3__DownloadFileById *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___TMSServ3__DownloadFileById(struct soap*, const struct __TMSServ3__DownloadFileById *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___TMSServ3__DownloadFileById(struct soap*, const char*, int, const struct __TMSServ3__DownloadFileById *, const char*);
SOAP_FMAC3 struct __TMSServ3__DownloadFileById * SOAP_FMAC4 soap_in___TMSServ3__DownloadFileById(struct soap*, const char*, struct __TMSServ3__DownloadFileById *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___TMSServ3__DownloadFileById(struct soap*, const struct __TMSServ3__DownloadFileById *, const char*, const char*);

#ifndef soap_write___TMSServ3__DownloadFileById
#define soap_write___TMSServ3__DownloadFileById(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___TMSServ3__DownloadFileById(soap, data),0) || soap_put___TMSServ3__DownloadFileById(soap, data, "-TMSServ3:DownloadFileById", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __TMSServ3__DownloadFileById * SOAP_FMAC4 soap_get___TMSServ3__DownloadFileById(struct soap*, struct __TMSServ3__DownloadFileById *, const char*, const char*);

#ifndef soap_read___TMSServ3__DownloadFileById
#define soap_read___TMSServ3__DownloadFileById(soap, data) ( soap_begin_recv(soap) || !soap_get___TMSServ3__DownloadFileById(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __TMSServ3__DownloadFileById * SOAP_FMAC2 soap_instantiate___TMSServ3__DownloadFileById(struct soap*, int, const char*, const char*, size_t*);

inline struct __TMSServ3__DownloadFileById * soap_new___TMSServ3__DownloadFileById(struct soap *soap, int n = -1) { return soap_instantiate___TMSServ3__DownloadFileById(soap, n, NULL, NULL, NULL); }

inline struct __TMSServ3__DownloadFileById * soap_new_req___TMSServ3__DownloadFileById(struct soap *soap) { struct __TMSServ3__DownloadFileById *_p = soap_instantiate___TMSServ3__DownloadFileById(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___TMSServ3__DownloadFileById(soap, _p); } return _p; }

inline struct __TMSServ3__DownloadFileById * soap_new_set___TMSServ3__DownloadFileById(struct soap *soap, _TMSServ__DownloadFileById *TMSServ__DownloadFileById) { struct __TMSServ3__DownloadFileById *_p = soap_instantiate___TMSServ3__DownloadFileById(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___TMSServ3__DownloadFileById(soap, _p); _p->TMSServ__DownloadFileById = TMSServ__DownloadFileById; } return _p; }

inline void soap_delete___TMSServ3__DownloadFileById(struct soap *soap, struct __TMSServ3__DownloadFileById *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___TMSServ3__DownloadFileById(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___TMSServ3__DeleteObject
#define SOAP_TYPE___TMSServ3__DeleteObject (147)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___TMSServ3__DeleteObject(struct soap*, struct __TMSServ3__DeleteObject *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___TMSServ3__DeleteObject(struct soap*, const struct __TMSServ3__DeleteObject *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___TMSServ3__DeleteObject(struct soap*, const char*, int, const struct __TMSServ3__DeleteObject *, const char*);
SOAP_FMAC3 struct __TMSServ3__DeleteObject * SOAP_FMAC4 soap_in___TMSServ3__DeleteObject(struct soap*, const char*, struct __TMSServ3__DeleteObject *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___TMSServ3__DeleteObject(struct soap*, const struct __TMSServ3__DeleteObject *, const char*, const char*);

#ifndef soap_write___TMSServ3__DeleteObject
#define soap_write___TMSServ3__DeleteObject(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___TMSServ3__DeleteObject(soap, data),0) || soap_put___TMSServ3__DeleteObject(soap, data, "-TMSServ3:DeleteObject", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __TMSServ3__DeleteObject * SOAP_FMAC4 soap_get___TMSServ3__DeleteObject(struct soap*, struct __TMSServ3__DeleteObject *, const char*, const char*);

#ifndef soap_read___TMSServ3__DeleteObject
#define soap_read___TMSServ3__DeleteObject(soap, data) ( soap_begin_recv(soap) || !soap_get___TMSServ3__DeleteObject(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __TMSServ3__DeleteObject * SOAP_FMAC2 soap_instantiate___TMSServ3__DeleteObject(struct soap*, int, const char*, const char*, size_t*);

inline struct __TMSServ3__DeleteObject * soap_new___TMSServ3__DeleteObject(struct soap *soap, int n = -1) { return soap_instantiate___TMSServ3__DeleteObject(soap, n, NULL, NULL, NULL); }

inline struct __TMSServ3__DeleteObject * soap_new_req___TMSServ3__DeleteObject(struct soap *soap) { struct __TMSServ3__DeleteObject *_p = soap_instantiate___TMSServ3__DeleteObject(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___TMSServ3__DeleteObject(soap, _p); } return _p; }

inline struct __TMSServ3__DeleteObject * soap_new_set___TMSServ3__DeleteObject(struct soap *soap, _TMSServ__DeleteObject *TMSServ__DeleteObject) { struct __TMSServ3__DeleteObject *_p = soap_instantiate___TMSServ3__DeleteObject(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___TMSServ3__DeleteObject(soap, _p); _p->TMSServ__DeleteObject = TMSServ__DeleteObject; } return _p; }

inline void soap_delete___TMSServ3__DeleteObject(struct soap *soap, struct __TMSServ3__DeleteObject *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___TMSServ3__DeleteObject(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___TMSServ3__SaveOrUpdateObjects
#define SOAP_TYPE___TMSServ3__SaveOrUpdateObjects (145)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___TMSServ3__SaveOrUpdateObjects(struct soap*, struct __TMSServ3__SaveOrUpdateObjects *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___TMSServ3__SaveOrUpdateObjects(struct soap*, const struct __TMSServ3__SaveOrUpdateObjects *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___TMSServ3__SaveOrUpdateObjects(struct soap*, const char*, int, const struct __TMSServ3__SaveOrUpdateObjects *, const char*);
SOAP_FMAC3 struct __TMSServ3__SaveOrUpdateObjects * SOAP_FMAC4 soap_in___TMSServ3__SaveOrUpdateObjects(struct soap*, const char*, struct __TMSServ3__SaveOrUpdateObjects *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___TMSServ3__SaveOrUpdateObjects(struct soap*, const struct __TMSServ3__SaveOrUpdateObjects *, const char*, const char*);

#ifndef soap_write___TMSServ3__SaveOrUpdateObjects
#define soap_write___TMSServ3__SaveOrUpdateObjects(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___TMSServ3__SaveOrUpdateObjects(soap, data),0) || soap_put___TMSServ3__SaveOrUpdateObjects(soap, data, "-TMSServ3:SaveOrUpdateObjects", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __TMSServ3__SaveOrUpdateObjects * SOAP_FMAC4 soap_get___TMSServ3__SaveOrUpdateObjects(struct soap*, struct __TMSServ3__SaveOrUpdateObjects *, const char*, const char*);

#ifndef soap_read___TMSServ3__SaveOrUpdateObjects
#define soap_read___TMSServ3__SaveOrUpdateObjects(soap, data) ( soap_begin_recv(soap) || !soap_get___TMSServ3__SaveOrUpdateObjects(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __TMSServ3__SaveOrUpdateObjects * SOAP_FMAC2 soap_instantiate___TMSServ3__SaveOrUpdateObjects(struct soap*, int, const char*, const char*, size_t*);

inline struct __TMSServ3__SaveOrUpdateObjects * soap_new___TMSServ3__SaveOrUpdateObjects(struct soap *soap, int n = -1) { return soap_instantiate___TMSServ3__SaveOrUpdateObjects(soap, n, NULL, NULL, NULL); }

inline struct __TMSServ3__SaveOrUpdateObjects * soap_new_req___TMSServ3__SaveOrUpdateObjects(struct soap *soap) { struct __TMSServ3__SaveOrUpdateObjects *_p = soap_instantiate___TMSServ3__SaveOrUpdateObjects(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___TMSServ3__SaveOrUpdateObjects(soap, _p); } return _p; }

inline struct __TMSServ3__SaveOrUpdateObjects * soap_new_set___TMSServ3__SaveOrUpdateObjects(struct soap *soap, _TMSServ__SaveOrUpdateObjects *TMSServ__SaveOrUpdateObjects) { struct __TMSServ3__SaveOrUpdateObjects *_p = soap_instantiate___TMSServ3__SaveOrUpdateObjects(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___TMSServ3__SaveOrUpdateObjects(soap, _p); _p->TMSServ__SaveOrUpdateObjects = TMSServ__SaveOrUpdateObjects; } return _p; }

inline void soap_delete___TMSServ3__SaveOrUpdateObjects(struct soap *soap, struct __TMSServ3__SaveOrUpdateObjects *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___TMSServ3__SaveOrUpdateObjects(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___TMSServ3__MatchTowerParts
#define SOAP_TYPE___TMSServ3__MatchTowerParts (143)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___TMSServ3__MatchTowerParts(struct soap*, struct __TMSServ3__MatchTowerParts *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___TMSServ3__MatchTowerParts(struct soap*, const struct __TMSServ3__MatchTowerParts *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___TMSServ3__MatchTowerParts(struct soap*, const char*, int, const struct __TMSServ3__MatchTowerParts *, const char*);
SOAP_FMAC3 struct __TMSServ3__MatchTowerParts * SOAP_FMAC4 soap_in___TMSServ3__MatchTowerParts(struct soap*, const char*, struct __TMSServ3__MatchTowerParts *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___TMSServ3__MatchTowerParts(struct soap*, const struct __TMSServ3__MatchTowerParts *, const char*, const char*);

#ifndef soap_write___TMSServ3__MatchTowerParts
#define soap_write___TMSServ3__MatchTowerParts(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___TMSServ3__MatchTowerParts(soap, data),0) || soap_put___TMSServ3__MatchTowerParts(soap, data, "-TMSServ3:MatchTowerParts", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __TMSServ3__MatchTowerParts * SOAP_FMAC4 soap_get___TMSServ3__MatchTowerParts(struct soap*, struct __TMSServ3__MatchTowerParts *, const char*, const char*);

#ifndef soap_read___TMSServ3__MatchTowerParts
#define soap_read___TMSServ3__MatchTowerParts(soap, data) ( soap_begin_recv(soap) || !soap_get___TMSServ3__MatchTowerParts(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __TMSServ3__MatchTowerParts * SOAP_FMAC2 soap_instantiate___TMSServ3__MatchTowerParts(struct soap*, int, const char*, const char*, size_t*);

inline struct __TMSServ3__MatchTowerParts * soap_new___TMSServ3__MatchTowerParts(struct soap *soap, int n = -1) { return soap_instantiate___TMSServ3__MatchTowerParts(soap, n, NULL, NULL, NULL); }

inline struct __TMSServ3__MatchTowerParts * soap_new_req___TMSServ3__MatchTowerParts(struct soap *soap) { struct __TMSServ3__MatchTowerParts *_p = soap_instantiate___TMSServ3__MatchTowerParts(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___TMSServ3__MatchTowerParts(soap, _p); } return _p; }

inline struct __TMSServ3__MatchTowerParts * soap_new_set___TMSServ3__MatchTowerParts(struct soap *soap, _TMSServ__MatchTowerParts *TMSServ__MatchTowerParts) { struct __TMSServ3__MatchTowerParts *_p = soap_instantiate___TMSServ3__MatchTowerParts(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___TMSServ3__MatchTowerParts(soap, _p); _p->TMSServ__MatchTowerParts = TMSServ__MatchTowerParts; } return _p; }

inline void soap_delete___TMSServ3__MatchTowerParts(struct soap *soap, struct __TMSServ3__MatchTowerParts *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___TMSServ3__MatchTowerParts(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___TMSServ3__GetTowerPartsLabelAndVersionSerial
#define SOAP_TYPE___TMSServ3__GetTowerPartsLabelAndVersionSerial (141)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___TMSServ3__GetTowerPartsLabelAndVersionSerial(struct soap*, struct __TMSServ3__GetTowerPartsLabelAndVersionSerial *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___TMSServ3__GetTowerPartsLabelAndVersionSerial(struct soap*, const struct __TMSServ3__GetTowerPartsLabelAndVersionSerial *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___TMSServ3__GetTowerPartsLabelAndVersionSerial(struct soap*, const char*, int, const struct __TMSServ3__GetTowerPartsLabelAndVersionSerial *, const char*);
SOAP_FMAC3 struct __TMSServ3__GetTowerPartsLabelAndVersionSerial * SOAP_FMAC4 soap_in___TMSServ3__GetTowerPartsLabelAndVersionSerial(struct soap*, const char*, struct __TMSServ3__GetTowerPartsLabelAndVersionSerial *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___TMSServ3__GetTowerPartsLabelAndVersionSerial(struct soap*, const struct __TMSServ3__GetTowerPartsLabelAndVersionSerial *, const char*, const char*);

#ifndef soap_write___TMSServ3__GetTowerPartsLabelAndVersionSerial
#define soap_write___TMSServ3__GetTowerPartsLabelAndVersionSerial(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___TMSServ3__GetTowerPartsLabelAndVersionSerial(soap, data),0) || soap_put___TMSServ3__GetTowerPartsLabelAndVersionSerial(soap, data, "-TMSServ3:GetTowerPartsLabelAndVersionSerial", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __TMSServ3__GetTowerPartsLabelAndVersionSerial * SOAP_FMAC4 soap_get___TMSServ3__GetTowerPartsLabelAndVersionSerial(struct soap*, struct __TMSServ3__GetTowerPartsLabelAndVersionSerial *, const char*, const char*);

#ifndef soap_read___TMSServ3__GetTowerPartsLabelAndVersionSerial
#define soap_read___TMSServ3__GetTowerPartsLabelAndVersionSerial(soap, data) ( soap_begin_recv(soap) || !soap_get___TMSServ3__GetTowerPartsLabelAndVersionSerial(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __TMSServ3__GetTowerPartsLabelAndVersionSerial * SOAP_FMAC2 soap_instantiate___TMSServ3__GetTowerPartsLabelAndVersionSerial(struct soap*, int, const char*, const char*, size_t*);

inline struct __TMSServ3__GetTowerPartsLabelAndVersionSerial * soap_new___TMSServ3__GetTowerPartsLabelAndVersionSerial(struct soap *soap, int n = -1) { return soap_instantiate___TMSServ3__GetTowerPartsLabelAndVersionSerial(soap, n, NULL, NULL, NULL); }

inline struct __TMSServ3__GetTowerPartsLabelAndVersionSerial * soap_new_req___TMSServ3__GetTowerPartsLabelAndVersionSerial(struct soap *soap) { struct __TMSServ3__GetTowerPartsLabelAndVersionSerial *_p = soap_instantiate___TMSServ3__GetTowerPartsLabelAndVersionSerial(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___TMSServ3__GetTowerPartsLabelAndVersionSerial(soap, _p); } return _p; }

inline struct __TMSServ3__GetTowerPartsLabelAndVersionSerial * soap_new_set___TMSServ3__GetTowerPartsLabelAndVersionSerial(struct soap *soap, _TMSServ__GetTowerPartsLabelAndVersionSerial *TMSServ__GetTowerPartsLabelAndVersionSerial) { struct __TMSServ3__GetTowerPartsLabelAndVersionSerial *_p = soap_instantiate___TMSServ3__GetTowerPartsLabelAndVersionSerial(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___TMSServ3__GetTowerPartsLabelAndVersionSerial(soap, _p); _p->TMSServ__GetTowerPartsLabelAndVersionSerial = TMSServ__GetTowerPartsLabelAndVersionSerial; } return _p; }

inline void soap_delete___TMSServ3__GetTowerPartsLabelAndVersionSerial(struct soap *soap, struct __TMSServ3__GetTowerPartsLabelAndVersionSerial *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___TMSServ3__GetTowerPartsLabelAndVersionSerial(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___TMSServ3__GetObjectsVersion
#define SOAP_TYPE___TMSServ3__GetObjectsVersion (139)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___TMSServ3__GetObjectsVersion(struct soap*, struct __TMSServ3__GetObjectsVersion *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___TMSServ3__GetObjectsVersion(struct soap*, const struct __TMSServ3__GetObjectsVersion *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___TMSServ3__GetObjectsVersion(struct soap*, const char*, int, const struct __TMSServ3__GetObjectsVersion *, const char*);
SOAP_FMAC3 struct __TMSServ3__GetObjectsVersion * SOAP_FMAC4 soap_in___TMSServ3__GetObjectsVersion(struct soap*, const char*, struct __TMSServ3__GetObjectsVersion *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___TMSServ3__GetObjectsVersion(struct soap*, const struct __TMSServ3__GetObjectsVersion *, const char*, const char*);

#ifndef soap_write___TMSServ3__GetObjectsVersion
#define soap_write___TMSServ3__GetObjectsVersion(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___TMSServ3__GetObjectsVersion(soap, data),0) || soap_put___TMSServ3__GetObjectsVersion(soap, data, "-TMSServ3:GetObjectsVersion", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __TMSServ3__GetObjectsVersion * SOAP_FMAC4 soap_get___TMSServ3__GetObjectsVersion(struct soap*, struct __TMSServ3__GetObjectsVersion *, const char*, const char*);

#ifndef soap_read___TMSServ3__GetObjectsVersion
#define soap_read___TMSServ3__GetObjectsVersion(soap, data) ( soap_begin_recv(soap) || !soap_get___TMSServ3__GetObjectsVersion(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __TMSServ3__GetObjectsVersion * SOAP_FMAC2 soap_instantiate___TMSServ3__GetObjectsVersion(struct soap*, int, const char*, const char*, size_t*);

inline struct __TMSServ3__GetObjectsVersion * soap_new___TMSServ3__GetObjectsVersion(struct soap *soap, int n = -1) { return soap_instantiate___TMSServ3__GetObjectsVersion(soap, n, NULL, NULL, NULL); }

inline struct __TMSServ3__GetObjectsVersion * soap_new_req___TMSServ3__GetObjectsVersion(struct soap *soap) { struct __TMSServ3__GetObjectsVersion *_p = soap_instantiate___TMSServ3__GetObjectsVersion(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___TMSServ3__GetObjectsVersion(soap, _p); } return _p; }

inline struct __TMSServ3__GetObjectsVersion * soap_new_set___TMSServ3__GetObjectsVersion(struct soap *soap, _TMSServ__GetObjectsVersion *TMSServ__GetObjectsVersion) { struct __TMSServ3__GetObjectsVersion *_p = soap_instantiate___TMSServ3__GetObjectsVersion(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___TMSServ3__GetObjectsVersion(soap, _p); _p->TMSServ__GetObjectsVersion = TMSServ__GetObjectsVersion; } return _p; }

inline void soap_delete___TMSServ3__GetObjectsVersion(struct soap *soap, struct __TMSServ3__GetObjectsVersion *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___TMSServ3__GetObjectsVersion(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___TMSServ3__DownloadObjects
#define SOAP_TYPE___TMSServ3__DownloadObjects (137)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___TMSServ3__DownloadObjects(struct soap*, struct __TMSServ3__DownloadObjects *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___TMSServ3__DownloadObjects(struct soap*, const struct __TMSServ3__DownloadObjects *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___TMSServ3__DownloadObjects(struct soap*, const char*, int, const struct __TMSServ3__DownloadObjects *, const char*);
SOAP_FMAC3 struct __TMSServ3__DownloadObjects * SOAP_FMAC4 soap_in___TMSServ3__DownloadObjects(struct soap*, const char*, struct __TMSServ3__DownloadObjects *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___TMSServ3__DownloadObjects(struct soap*, const struct __TMSServ3__DownloadObjects *, const char*, const char*);

#ifndef soap_write___TMSServ3__DownloadObjects
#define soap_write___TMSServ3__DownloadObjects(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___TMSServ3__DownloadObjects(soap, data),0) || soap_put___TMSServ3__DownloadObjects(soap, data, "-TMSServ3:DownloadObjects", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __TMSServ3__DownloadObjects * SOAP_FMAC4 soap_get___TMSServ3__DownloadObjects(struct soap*, struct __TMSServ3__DownloadObjects *, const char*, const char*);

#ifndef soap_read___TMSServ3__DownloadObjects
#define soap_read___TMSServ3__DownloadObjects(soap, data) ( soap_begin_recv(soap) || !soap_get___TMSServ3__DownloadObjects(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __TMSServ3__DownloadObjects * SOAP_FMAC2 soap_instantiate___TMSServ3__DownloadObjects(struct soap*, int, const char*, const char*, size_t*);

inline struct __TMSServ3__DownloadObjects * soap_new___TMSServ3__DownloadObjects(struct soap *soap, int n = -1) { return soap_instantiate___TMSServ3__DownloadObjects(soap, n, NULL, NULL, NULL); }

inline struct __TMSServ3__DownloadObjects * soap_new_req___TMSServ3__DownloadObjects(struct soap *soap) { struct __TMSServ3__DownloadObjects *_p = soap_instantiate___TMSServ3__DownloadObjects(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___TMSServ3__DownloadObjects(soap, _p); } return _p; }

inline struct __TMSServ3__DownloadObjects * soap_new_set___TMSServ3__DownloadObjects(struct soap *soap, _TMSServ__DownloadObjects *TMSServ__DownloadObjects) { struct __TMSServ3__DownloadObjects *_p = soap_instantiate___TMSServ3__DownloadObjects(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___TMSServ3__DownloadObjects(soap, _p); _p->TMSServ__DownloadObjects = TMSServ__DownloadObjects; } return _p; }

inline void soap_delete___TMSServ3__DownloadObjects(struct soap *soap, struct __TMSServ3__DownloadObjects *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___TMSServ3__DownloadObjects(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___TMSServ3__QueryObjects
#define SOAP_TYPE___TMSServ3__QueryObjects (135)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___TMSServ3__QueryObjects(struct soap*, struct __TMSServ3__QueryObjects *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___TMSServ3__QueryObjects(struct soap*, const struct __TMSServ3__QueryObjects *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___TMSServ3__QueryObjects(struct soap*, const char*, int, const struct __TMSServ3__QueryObjects *, const char*);
SOAP_FMAC3 struct __TMSServ3__QueryObjects * SOAP_FMAC4 soap_in___TMSServ3__QueryObjects(struct soap*, const char*, struct __TMSServ3__QueryObjects *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___TMSServ3__QueryObjects(struct soap*, const struct __TMSServ3__QueryObjects *, const char*, const char*);

#ifndef soap_write___TMSServ3__QueryObjects
#define soap_write___TMSServ3__QueryObjects(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___TMSServ3__QueryObjects(soap, data),0) || soap_put___TMSServ3__QueryObjects(soap, data, "-TMSServ3:QueryObjects", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __TMSServ3__QueryObjects * SOAP_FMAC4 soap_get___TMSServ3__QueryObjects(struct soap*, struct __TMSServ3__QueryObjects *, const char*, const char*);

#ifndef soap_read___TMSServ3__QueryObjects
#define soap_read___TMSServ3__QueryObjects(soap, data) ( soap_begin_recv(soap) || !soap_get___TMSServ3__QueryObjects(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __TMSServ3__QueryObjects * SOAP_FMAC2 soap_instantiate___TMSServ3__QueryObjects(struct soap*, int, const char*, const char*, size_t*);

inline struct __TMSServ3__QueryObjects * soap_new___TMSServ3__QueryObjects(struct soap *soap, int n = -1) { return soap_instantiate___TMSServ3__QueryObjects(soap, n, NULL, NULL, NULL); }

inline struct __TMSServ3__QueryObjects * soap_new_req___TMSServ3__QueryObjects(struct soap *soap) { struct __TMSServ3__QueryObjects *_p = soap_instantiate___TMSServ3__QueryObjects(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___TMSServ3__QueryObjects(soap, _p); } return _p; }

inline struct __TMSServ3__QueryObjects * soap_new_set___TMSServ3__QueryObjects(struct soap *soap, _TMSServ__QueryObjects *TMSServ__QueryObjects) { struct __TMSServ3__QueryObjects *_p = soap_instantiate___TMSServ3__QueryObjects(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___TMSServ3__QueryObjects(soap, _p); _p->TMSServ__QueryObjects = TMSServ__QueryObjects; } return _p; }

inline void soap_delete___TMSServ3__QueryObjects(struct soap *soap, struct __TMSServ3__QueryObjects *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___TMSServ3__QueryObjects(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___TMSServ3__logoutUser
#define SOAP_TYPE___TMSServ3__logoutUser (133)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___TMSServ3__logoutUser(struct soap*, struct __TMSServ3__logoutUser *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___TMSServ3__logoutUser(struct soap*, const struct __TMSServ3__logoutUser *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___TMSServ3__logoutUser(struct soap*, const char*, int, const struct __TMSServ3__logoutUser *, const char*);
SOAP_FMAC3 struct __TMSServ3__logoutUser * SOAP_FMAC4 soap_in___TMSServ3__logoutUser(struct soap*, const char*, struct __TMSServ3__logoutUser *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___TMSServ3__logoutUser(struct soap*, const struct __TMSServ3__logoutUser *, const char*, const char*);

#ifndef soap_write___TMSServ3__logoutUser
#define soap_write___TMSServ3__logoutUser(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___TMSServ3__logoutUser(soap, data),0) || soap_put___TMSServ3__logoutUser(soap, data, "-TMSServ3:logoutUser", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __TMSServ3__logoutUser * SOAP_FMAC4 soap_get___TMSServ3__logoutUser(struct soap*, struct __TMSServ3__logoutUser *, const char*, const char*);

#ifndef soap_read___TMSServ3__logoutUser
#define soap_read___TMSServ3__logoutUser(soap, data) ( soap_begin_recv(soap) || !soap_get___TMSServ3__logoutUser(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __TMSServ3__logoutUser * SOAP_FMAC2 soap_instantiate___TMSServ3__logoutUser(struct soap*, int, const char*, const char*, size_t*);

inline struct __TMSServ3__logoutUser * soap_new___TMSServ3__logoutUser(struct soap *soap, int n = -1) { return soap_instantiate___TMSServ3__logoutUser(soap, n, NULL, NULL, NULL); }

inline struct __TMSServ3__logoutUser * soap_new_req___TMSServ3__logoutUser(struct soap *soap) { struct __TMSServ3__logoutUser *_p = soap_instantiate___TMSServ3__logoutUser(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___TMSServ3__logoutUser(soap, _p); } return _p; }

inline struct __TMSServ3__logoutUser * soap_new_set___TMSServ3__logoutUser(struct soap *soap, _TMSServ__logoutUser *TMSServ__logoutUser) { struct __TMSServ3__logoutUser *_p = soap_instantiate___TMSServ3__logoutUser(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___TMSServ3__logoutUser(soap, _p); _p->TMSServ__logoutUser = TMSServ__logoutUser; } return _p; }

inline void soap_delete___TMSServ3__logoutUser(struct soap *soap, struct __TMSServ3__logoutUser *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___TMSServ3__logoutUser(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___TMSServ3__loginUserByByteArr
#define SOAP_TYPE___TMSServ3__loginUserByByteArr (131)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___TMSServ3__loginUserByByteArr(struct soap*, struct __TMSServ3__loginUserByByteArr *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___TMSServ3__loginUserByByteArr(struct soap*, const struct __TMSServ3__loginUserByByteArr *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___TMSServ3__loginUserByByteArr(struct soap*, const char*, int, const struct __TMSServ3__loginUserByByteArr *, const char*);
SOAP_FMAC3 struct __TMSServ3__loginUserByByteArr * SOAP_FMAC4 soap_in___TMSServ3__loginUserByByteArr(struct soap*, const char*, struct __TMSServ3__loginUserByByteArr *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___TMSServ3__loginUserByByteArr(struct soap*, const struct __TMSServ3__loginUserByByteArr *, const char*, const char*);

#ifndef soap_write___TMSServ3__loginUserByByteArr
#define soap_write___TMSServ3__loginUserByByteArr(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___TMSServ3__loginUserByByteArr(soap, data),0) || soap_put___TMSServ3__loginUserByByteArr(soap, data, "-TMSServ3:loginUserByByteArr", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __TMSServ3__loginUserByByteArr * SOAP_FMAC4 soap_get___TMSServ3__loginUserByByteArr(struct soap*, struct __TMSServ3__loginUserByByteArr *, const char*, const char*);

#ifndef soap_read___TMSServ3__loginUserByByteArr
#define soap_read___TMSServ3__loginUserByByteArr(soap, data) ( soap_begin_recv(soap) || !soap_get___TMSServ3__loginUserByByteArr(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __TMSServ3__loginUserByByteArr * SOAP_FMAC2 soap_instantiate___TMSServ3__loginUserByByteArr(struct soap*, int, const char*, const char*, size_t*);

inline struct __TMSServ3__loginUserByByteArr * soap_new___TMSServ3__loginUserByByteArr(struct soap *soap, int n = -1) { return soap_instantiate___TMSServ3__loginUserByByteArr(soap, n, NULL, NULL, NULL); }

inline struct __TMSServ3__loginUserByByteArr * soap_new_req___TMSServ3__loginUserByByteArr(struct soap *soap) { struct __TMSServ3__loginUserByByteArr *_p = soap_instantiate___TMSServ3__loginUserByByteArr(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___TMSServ3__loginUserByByteArr(soap, _p); } return _p; }

inline struct __TMSServ3__loginUserByByteArr * soap_new_set___TMSServ3__loginUserByByteArr(struct soap *soap, _TMSServ__loginUserByByteArr *TMSServ__loginUserByByteArr) { struct __TMSServ3__loginUserByByteArr *_p = soap_instantiate___TMSServ3__loginUserByByteArr(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___TMSServ3__loginUserByByteArr(soap, _p); _p->TMSServ__loginUserByByteArr = TMSServ__loginUserByByteArr; } return _p; }

inline void soap_delete___TMSServ3__loginUserByByteArr(struct soap *soap, struct __TMSServ3__loginUserByByteArr *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___TMSServ3__loginUserByByteArr(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___TMSServ3__loginUser
#define SOAP_TYPE___TMSServ3__loginUser (129)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___TMSServ3__loginUser(struct soap*, struct __TMSServ3__loginUser *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___TMSServ3__loginUser(struct soap*, const struct __TMSServ3__loginUser *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___TMSServ3__loginUser(struct soap*, const char*, int, const struct __TMSServ3__loginUser *, const char*);
SOAP_FMAC3 struct __TMSServ3__loginUser * SOAP_FMAC4 soap_in___TMSServ3__loginUser(struct soap*, const char*, struct __TMSServ3__loginUser *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___TMSServ3__loginUser(struct soap*, const struct __TMSServ3__loginUser *, const char*, const char*);

#ifndef soap_write___TMSServ3__loginUser
#define soap_write___TMSServ3__loginUser(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___TMSServ3__loginUser(soap, data),0) || soap_put___TMSServ3__loginUser(soap, data, "-TMSServ3:loginUser", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __TMSServ3__loginUser * SOAP_FMAC4 soap_get___TMSServ3__loginUser(struct soap*, struct __TMSServ3__loginUser *, const char*, const char*);

#ifndef soap_read___TMSServ3__loginUser
#define soap_read___TMSServ3__loginUser(soap, data) ( soap_begin_recv(soap) || !soap_get___TMSServ3__loginUser(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __TMSServ3__loginUser * SOAP_FMAC2 soap_instantiate___TMSServ3__loginUser(struct soap*, int, const char*, const char*, size_t*);

inline struct __TMSServ3__loginUser * soap_new___TMSServ3__loginUser(struct soap *soap, int n = -1) { return soap_instantiate___TMSServ3__loginUser(soap, n, NULL, NULL, NULL); }

inline struct __TMSServ3__loginUser * soap_new_req___TMSServ3__loginUser(struct soap *soap) { struct __TMSServ3__loginUser *_p = soap_instantiate___TMSServ3__loginUser(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___TMSServ3__loginUser(soap, _p); } return _p; }

inline struct __TMSServ3__loginUser * soap_new_set___TMSServ3__loginUser(struct soap *soap, _TMSServ__loginUser *TMSServ__loginUser) { struct __TMSServ3__loginUser *_p = soap_instantiate___TMSServ3__loginUser(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___TMSServ3__loginUser(soap, _p); _p->TMSServ__loginUser = TMSServ__loginUser; } return _p; }

inline void soap_delete___TMSServ3__loginUser(struct soap *soap, struct __TMSServ3__loginUser *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___TMSServ3__loginUser(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___TMSServ2__CloseFileObjectDataProvider
#define SOAP_TYPE___TMSServ2__CloseFileObjectDataProvider (127)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___TMSServ2__CloseFileObjectDataProvider(struct soap*, struct __TMSServ2__CloseFileObjectDataProvider *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___TMSServ2__CloseFileObjectDataProvider(struct soap*, const struct __TMSServ2__CloseFileObjectDataProvider *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___TMSServ2__CloseFileObjectDataProvider(struct soap*, const char*, int, const struct __TMSServ2__CloseFileObjectDataProvider *, const char*);
SOAP_FMAC3 struct __TMSServ2__CloseFileObjectDataProvider * SOAP_FMAC4 soap_in___TMSServ2__CloseFileObjectDataProvider(struct soap*, const char*, struct __TMSServ2__CloseFileObjectDataProvider *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___TMSServ2__CloseFileObjectDataProvider(struct soap*, const struct __TMSServ2__CloseFileObjectDataProvider *, const char*, const char*);

#ifndef soap_write___TMSServ2__CloseFileObjectDataProvider
#define soap_write___TMSServ2__CloseFileObjectDataProvider(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___TMSServ2__CloseFileObjectDataProvider(soap, data),0) || soap_put___TMSServ2__CloseFileObjectDataProvider(soap, data, "-TMSServ2:CloseFileObjectDataProvider", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __TMSServ2__CloseFileObjectDataProvider * SOAP_FMAC4 soap_get___TMSServ2__CloseFileObjectDataProvider(struct soap*, struct __TMSServ2__CloseFileObjectDataProvider *, const char*, const char*);

#ifndef soap_read___TMSServ2__CloseFileObjectDataProvider
#define soap_read___TMSServ2__CloseFileObjectDataProvider(soap, data) ( soap_begin_recv(soap) || !soap_get___TMSServ2__CloseFileObjectDataProvider(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __TMSServ2__CloseFileObjectDataProvider * SOAP_FMAC2 soap_instantiate___TMSServ2__CloseFileObjectDataProvider(struct soap*, int, const char*, const char*, size_t*);

inline struct __TMSServ2__CloseFileObjectDataProvider * soap_new___TMSServ2__CloseFileObjectDataProvider(struct soap *soap, int n = -1) { return soap_instantiate___TMSServ2__CloseFileObjectDataProvider(soap, n, NULL, NULL, NULL); }

inline struct __TMSServ2__CloseFileObjectDataProvider * soap_new_req___TMSServ2__CloseFileObjectDataProvider(struct soap *soap) { struct __TMSServ2__CloseFileObjectDataProvider *_p = soap_instantiate___TMSServ2__CloseFileObjectDataProvider(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___TMSServ2__CloseFileObjectDataProvider(soap, _p); } return _p; }

inline struct __TMSServ2__CloseFileObjectDataProvider * soap_new_set___TMSServ2__CloseFileObjectDataProvider(struct soap *soap, _TMSServ__CloseFileObjectDataProvider *TMSServ__CloseFileObjectDataProvider) { struct __TMSServ2__CloseFileObjectDataProvider *_p = soap_instantiate___TMSServ2__CloseFileObjectDataProvider(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___TMSServ2__CloseFileObjectDataProvider(soap, _p); _p->TMSServ__CloseFileObjectDataProvider = TMSServ__CloseFileObjectDataProvider; } return _p; }

inline void soap_delete___TMSServ2__CloseFileObjectDataProvider(struct soap *soap, struct __TMSServ2__CloseFileObjectDataProvider *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___TMSServ2__CloseFileObjectDataProvider(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___TMSServ2__DownloadFileObject
#define SOAP_TYPE___TMSServ2__DownloadFileObject (123)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___TMSServ2__DownloadFileObject(struct soap*, struct __TMSServ2__DownloadFileObject *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___TMSServ2__DownloadFileObject(struct soap*, const struct __TMSServ2__DownloadFileObject *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___TMSServ2__DownloadFileObject(struct soap*, const char*, int, const struct __TMSServ2__DownloadFileObject *, const char*);
SOAP_FMAC3 struct __TMSServ2__DownloadFileObject * SOAP_FMAC4 soap_in___TMSServ2__DownloadFileObject(struct soap*, const char*, struct __TMSServ2__DownloadFileObject *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___TMSServ2__DownloadFileObject(struct soap*, const struct __TMSServ2__DownloadFileObject *, const char*, const char*);

#ifndef soap_write___TMSServ2__DownloadFileObject
#define soap_write___TMSServ2__DownloadFileObject(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___TMSServ2__DownloadFileObject(soap, data),0) || soap_put___TMSServ2__DownloadFileObject(soap, data, "-TMSServ2:DownloadFileObject", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __TMSServ2__DownloadFileObject * SOAP_FMAC4 soap_get___TMSServ2__DownloadFileObject(struct soap*, struct __TMSServ2__DownloadFileObject *, const char*, const char*);

#ifndef soap_read___TMSServ2__DownloadFileObject
#define soap_read___TMSServ2__DownloadFileObject(soap, data) ( soap_begin_recv(soap) || !soap_get___TMSServ2__DownloadFileObject(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __TMSServ2__DownloadFileObject * SOAP_FMAC2 soap_instantiate___TMSServ2__DownloadFileObject(struct soap*, int, const char*, const char*, size_t*);

inline struct __TMSServ2__DownloadFileObject * soap_new___TMSServ2__DownloadFileObject(struct soap *soap, int n = -1) { return soap_instantiate___TMSServ2__DownloadFileObject(soap, n, NULL, NULL, NULL); }

inline struct __TMSServ2__DownloadFileObject * soap_new_req___TMSServ2__DownloadFileObject(struct soap *soap) { struct __TMSServ2__DownloadFileObject *_p = soap_instantiate___TMSServ2__DownloadFileObject(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___TMSServ2__DownloadFileObject(soap, _p); } return _p; }

inline struct __TMSServ2__DownloadFileObject * soap_new_set___TMSServ2__DownloadFileObject(struct soap *soap, _TMSServ__DownloadFileObject *TMSServ__DownloadFileObject) { struct __TMSServ2__DownloadFileObject *_p = soap_instantiate___TMSServ2__DownloadFileObject(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___TMSServ2__DownloadFileObject(soap, _p); _p->TMSServ__DownloadFileObject = TMSServ__DownloadFileObject; } return _p; }

inline void soap_delete___TMSServ2__DownloadFileObject(struct soap *soap, struct __TMSServ2__DownloadFileObject *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___TMSServ2__DownloadFileObject(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___TMSServ2__OpenServerObjectDataProvider
#define SOAP_TYPE___TMSServ2__OpenServerObjectDataProvider (119)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___TMSServ2__OpenServerObjectDataProvider(struct soap*, struct __TMSServ2__OpenServerObjectDataProvider *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___TMSServ2__OpenServerObjectDataProvider(struct soap*, const struct __TMSServ2__OpenServerObjectDataProvider *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___TMSServ2__OpenServerObjectDataProvider(struct soap*, const char*, int, const struct __TMSServ2__OpenServerObjectDataProvider *, const char*);
SOAP_FMAC3 struct __TMSServ2__OpenServerObjectDataProvider * SOAP_FMAC4 soap_in___TMSServ2__OpenServerObjectDataProvider(struct soap*, const char*, struct __TMSServ2__OpenServerObjectDataProvider *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___TMSServ2__OpenServerObjectDataProvider(struct soap*, const struct __TMSServ2__OpenServerObjectDataProvider *, const char*, const char*);

#ifndef soap_write___TMSServ2__OpenServerObjectDataProvider
#define soap_write___TMSServ2__OpenServerObjectDataProvider(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___TMSServ2__OpenServerObjectDataProvider(soap, data),0) || soap_put___TMSServ2__OpenServerObjectDataProvider(soap, data, "-TMSServ2:OpenServerObjectDataProvider", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __TMSServ2__OpenServerObjectDataProvider * SOAP_FMAC4 soap_get___TMSServ2__OpenServerObjectDataProvider(struct soap*, struct __TMSServ2__OpenServerObjectDataProvider *, const char*, const char*);

#ifndef soap_read___TMSServ2__OpenServerObjectDataProvider
#define soap_read___TMSServ2__OpenServerObjectDataProvider(soap, data) ( soap_begin_recv(soap) || !soap_get___TMSServ2__OpenServerObjectDataProvider(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __TMSServ2__OpenServerObjectDataProvider * SOAP_FMAC2 soap_instantiate___TMSServ2__OpenServerObjectDataProvider(struct soap*, int, const char*, const char*, size_t*);

inline struct __TMSServ2__OpenServerObjectDataProvider * soap_new___TMSServ2__OpenServerObjectDataProvider(struct soap *soap, int n = -1) { return soap_instantiate___TMSServ2__OpenServerObjectDataProvider(soap, n, NULL, NULL, NULL); }

inline struct __TMSServ2__OpenServerObjectDataProvider * soap_new_req___TMSServ2__OpenServerObjectDataProvider(struct soap *soap) { struct __TMSServ2__OpenServerObjectDataProvider *_p = soap_instantiate___TMSServ2__OpenServerObjectDataProvider(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___TMSServ2__OpenServerObjectDataProvider(soap, _p); } return _p; }

inline struct __TMSServ2__OpenServerObjectDataProvider * soap_new_set___TMSServ2__OpenServerObjectDataProvider(struct soap *soap, _TMSServ__OpenServerObjectDataProvider *TMSServ__OpenServerObjectDataProvider) { struct __TMSServ2__OpenServerObjectDataProvider *_p = soap_instantiate___TMSServ2__OpenServerObjectDataProvider(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___TMSServ2__OpenServerObjectDataProvider(soap, _p); _p->TMSServ__OpenServerObjectDataProvider = TMSServ__OpenServerObjectDataProvider; } return _p; }

inline void soap_delete___TMSServ2__OpenServerObjectDataProvider(struct soap *soap, struct __TMSServ2__OpenServerObjectDataProvider *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___TMSServ2__OpenServerObjectDataProvider(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___TMSServ2__OpenTapModelDataProvider
#define SOAP_TYPE___TMSServ2__OpenTapModelDataProvider (115)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___TMSServ2__OpenTapModelDataProvider(struct soap*, struct __TMSServ2__OpenTapModelDataProvider *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___TMSServ2__OpenTapModelDataProvider(struct soap*, const struct __TMSServ2__OpenTapModelDataProvider *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___TMSServ2__OpenTapModelDataProvider(struct soap*, const char*, int, const struct __TMSServ2__OpenTapModelDataProvider *, const char*);
SOAP_FMAC3 struct __TMSServ2__OpenTapModelDataProvider * SOAP_FMAC4 soap_in___TMSServ2__OpenTapModelDataProvider(struct soap*, const char*, struct __TMSServ2__OpenTapModelDataProvider *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___TMSServ2__OpenTapModelDataProvider(struct soap*, const struct __TMSServ2__OpenTapModelDataProvider *, const char*, const char*);

#ifndef soap_write___TMSServ2__OpenTapModelDataProvider
#define soap_write___TMSServ2__OpenTapModelDataProvider(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___TMSServ2__OpenTapModelDataProvider(soap, data),0) || soap_put___TMSServ2__OpenTapModelDataProvider(soap, data, "-TMSServ2:OpenTapModelDataProvider", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __TMSServ2__OpenTapModelDataProvider * SOAP_FMAC4 soap_get___TMSServ2__OpenTapModelDataProvider(struct soap*, struct __TMSServ2__OpenTapModelDataProvider *, const char*, const char*);

#ifndef soap_read___TMSServ2__OpenTapModelDataProvider
#define soap_read___TMSServ2__OpenTapModelDataProvider(soap, data) ( soap_begin_recv(soap) || !soap_get___TMSServ2__OpenTapModelDataProvider(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __TMSServ2__OpenTapModelDataProvider * SOAP_FMAC2 soap_instantiate___TMSServ2__OpenTapModelDataProvider(struct soap*, int, const char*, const char*, size_t*);

inline struct __TMSServ2__OpenTapModelDataProvider * soap_new___TMSServ2__OpenTapModelDataProvider(struct soap *soap, int n = -1) { return soap_instantiate___TMSServ2__OpenTapModelDataProvider(soap, n, NULL, NULL, NULL); }

inline struct __TMSServ2__OpenTapModelDataProvider * soap_new_req___TMSServ2__OpenTapModelDataProvider(struct soap *soap) { struct __TMSServ2__OpenTapModelDataProvider *_p = soap_instantiate___TMSServ2__OpenTapModelDataProvider(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___TMSServ2__OpenTapModelDataProvider(soap, _p); } return _p; }

inline struct __TMSServ2__OpenTapModelDataProvider * soap_new_set___TMSServ2__OpenTapModelDataProvider(struct soap *soap, _TMSServ__OpenTapModelDataProvider *TMSServ__OpenTapModelDataProvider) { struct __TMSServ2__OpenTapModelDataProvider *_p = soap_instantiate___TMSServ2__OpenTapModelDataProvider(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___TMSServ2__OpenTapModelDataProvider(soap, _p); _p->TMSServ__OpenTapModelDataProvider = TMSServ__OpenTapModelDataProvider; } return _p; }

inline void soap_delete___TMSServ2__OpenTapModelDataProvider(struct soap *soap, struct __TMSServ2__OpenTapModelDataProvider *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___TMSServ2__OpenTapModelDataProvider(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___TMSServ2__OpenFileObjectDataProvider
#define SOAP_TYPE___TMSServ2__OpenFileObjectDataProvider (111)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___TMSServ2__OpenFileObjectDataProvider(struct soap*, struct __TMSServ2__OpenFileObjectDataProvider *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___TMSServ2__OpenFileObjectDataProvider(struct soap*, const struct __TMSServ2__OpenFileObjectDataProvider *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___TMSServ2__OpenFileObjectDataProvider(struct soap*, const char*, int, const struct __TMSServ2__OpenFileObjectDataProvider *, const char*);
SOAP_FMAC3 struct __TMSServ2__OpenFileObjectDataProvider * SOAP_FMAC4 soap_in___TMSServ2__OpenFileObjectDataProvider(struct soap*, const char*, struct __TMSServ2__OpenFileObjectDataProvider *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___TMSServ2__OpenFileObjectDataProvider(struct soap*, const struct __TMSServ2__OpenFileObjectDataProvider *, const char*, const char*);

#ifndef soap_write___TMSServ2__OpenFileObjectDataProvider
#define soap_write___TMSServ2__OpenFileObjectDataProvider(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___TMSServ2__OpenFileObjectDataProvider(soap, data),0) || soap_put___TMSServ2__OpenFileObjectDataProvider(soap, data, "-TMSServ2:OpenFileObjectDataProvider", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __TMSServ2__OpenFileObjectDataProvider * SOAP_FMAC4 soap_get___TMSServ2__OpenFileObjectDataProvider(struct soap*, struct __TMSServ2__OpenFileObjectDataProvider *, const char*, const char*);

#ifndef soap_read___TMSServ2__OpenFileObjectDataProvider
#define soap_read___TMSServ2__OpenFileObjectDataProvider(soap, data) ( soap_begin_recv(soap) || !soap_get___TMSServ2__OpenFileObjectDataProvider(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __TMSServ2__OpenFileObjectDataProvider * SOAP_FMAC2 soap_instantiate___TMSServ2__OpenFileObjectDataProvider(struct soap*, int, const char*, const char*, size_t*);

inline struct __TMSServ2__OpenFileObjectDataProvider * soap_new___TMSServ2__OpenFileObjectDataProvider(struct soap *soap, int n = -1) { return soap_instantiate___TMSServ2__OpenFileObjectDataProvider(soap, n, NULL, NULL, NULL); }

inline struct __TMSServ2__OpenFileObjectDataProvider * soap_new_req___TMSServ2__OpenFileObjectDataProvider(struct soap *soap) { struct __TMSServ2__OpenFileObjectDataProvider *_p = soap_instantiate___TMSServ2__OpenFileObjectDataProvider(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___TMSServ2__OpenFileObjectDataProvider(soap, _p); } return _p; }

inline struct __TMSServ2__OpenFileObjectDataProvider * soap_new_set___TMSServ2__OpenFileObjectDataProvider(struct soap *soap, _TMSServ__OpenFileObjectDataProvider *TMSServ__OpenFileObjectDataProvider) { struct __TMSServ2__OpenFileObjectDataProvider *_p = soap_instantiate___TMSServ2__OpenFileObjectDataProvider(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___TMSServ2__OpenFileObjectDataProvider(soap, _p); _p->TMSServ__OpenFileObjectDataProvider = TMSServ__OpenFileObjectDataProvider; } return _p; }

inline void soap_delete___TMSServ2__OpenFileObjectDataProvider(struct soap *soap, struct __TMSServ2__OpenFileObjectDataProvider *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___TMSServ2__OpenFileObjectDataProvider(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___TMSServ2__FinalizeFileObjectData
#define SOAP_TYPE___TMSServ2__FinalizeFileObjectData (107)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___TMSServ2__FinalizeFileObjectData(struct soap*, struct __TMSServ2__FinalizeFileObjectData *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___TMSServ2__FinalizeFileObjectData(struct soap*, const struct __TMSServ2__FinalizeFileObjectData *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___TMSServ2__FinalizeFileObjectData(struct soap*, const char*, int, const struct __TMSServ2__FinalizeFileObjectData *, const char*);
SOAP_FMAC3 struct __TMSServ2__FinalizeFileObjectData * SOAP_FMAC4 soap_in___TMSServ2__FinalizeFileObjectData(struct soap*, const char*, struct __TMSServ2__FinalizeFileObjectData *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___TMSServ2__FinalizeFileObjectData(struct soap*, const struct __TMSServ2__FinalizeFileObjectData *, const char*, const char*);

#ifndef soap_write___TMSServ2__FinalizeFileObjectData
#define soap_write___TMSServ2__FinalizeFileObjectData(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___TMSServ2__FinalizeFileObjectData(soap, data),0) || soap_put___TMSServ2__FinalizeFileObjectData(soap, data, "-TMSServ2:FinalizeFileObjectData", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __TMSServ2__FinalizeFileObjectData * SOAP_FMAC4 soap_get___TMSServ2__FinalizeFileObjectData(struct soap*, struct __TMSServ2__FinalizeFileObjectData *, const char*, const char*);

#ifndef soap_read___TMSServ2__FinalizeFileObjectData
#define soap_read___TMSServ2__FinalizeFileObjectData(soap, data) ( soap_begin_recv(soap) || !soap_get___TMSServ2__FinalizeFileObjectData(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __TMSServ2__FinalizeFileObjectData * SOAP_FMAC2 soap_instantiate___TMSServ2__FinalizeFileObjectData(struct soap*, int, const char*, const char*, size_t*);

inline struct __TMSServ2__FinalizeFileObjectData * soap_new___TMSServ2__FinalizeFileObjectData(struct soap *soap, int n = -1) { return soap_instantiate___TMSServ2__FinalizeFileObjectData(soap, n, NULL, NULL, NULL); }

inline struct __TMSServ2__FinalizeFileObjectData * soap_new_req___TMSServ2__FinalizeFileObjectData(struct soap *soap) { struct __TMSServ2__FinalizeFileObjectData *_p = soap_instantiate___TMSServ2__FinalizeFileObjectData(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___TMSServ2__FinalizeFileObjectData(soap, _p); } return _p; }

inline struct __TMSServ2__FinalizeFileObjectData * soap_new_set___TMSServ2__FinalizeFileObjectData(struct soap *soap, _TMSServ__FinalizeFileObjectData *TMSServ__FinalizeFileObjectData) { struct __TMSServ2__FinalizeFileObjectData *_p = soap_instantiate___TMSServ2__FinalizeFileObjectData(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___TMSServ2__FinalizeFileObjectData(soap, _p); _p->TMSServ__FinalizeFileObjectData = TMSServ__FinalizeFileObjectData; } return _p; }

inline void soap_delete___TMSServ2__FinalizeFileObjectData(struct soap *soap, struct __TMSServ2__FinalizeFileObjectData *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___TMSServ2__FinalizeFileObjectData(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___TMSServ2__UploadFileObject
#define SOAP_TYPE___TMSServ2__UploadFileObject (103)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___TMSServ2__UploadFileObject(struct soap*, struct __TMSServ2__UploadFileObject *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___TMSServ2__UploadFileObject(struct soap*, const struct __TMSServ2__UploadFileObject *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___TMSServ2__UploadFileObject(struct soap*, const char*, int, const struct __TMSServ2__UploadFileObject *, const char*);
SOAP_FMAC3 struct __TMSServ2__UploadFileObject * SOAP_FMAC4 soap_in___TMSServ2__UploadFileObject(struct soap*, const char*, struct __TMSServ2__UploadFileObject *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___TMSServ2__UploadFileObject(struct soap*, const struct __TMSServ2__UploadFileObject *, const char*, const char*);

#ifndef soap_write___TMSServ2__UploadFileObject
#define soap_write___TMSServ2__UploadFileObject(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___TMSServ2__UploadFileObject(soap, data),0) || soap_put___TMSServ2__UploadFileObject(soap, data, "-TMSServ2:UploadFileObject", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __TMSServ2__UploadFileObject * SOAP_FMAC4 soap_get___TMSServ2__UploadFileObject(struct soap*, struct __TMSServ2__UploadFileObject *, const char*, const char*);

#ifndef soap_read___TMSServ2__UploadFileObject
#define soap_read___TMSServ2__UploadFileObject(soap, data) ( soap_begin_recv(soap) || !soap_get___TMSServ2__UploadFileObject(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __TMSServ2__UploadFileObject * SOAP_FMAC2 soap_instantiate___TMSServ2__UploadFileObject(struct soap*, int, const char*, const char*, size_t*);

inline struct __TMSServ2__UploadFileObject * soap_new___TMSServ2__UploadFileObject(struct soap *soap, int n = -1) { return soap_instantiate___TMSServ2__UploadFileObject(soap, n, NULL, NULL, NULL); }

inline struct __TMSServ2__UploadFileObject * soap_new_req___TMSServ2__UploadFileObject(struct soap *soap) { struct __TMSServ2__UploadFileObject *_p = soap_instantiate___TMSServ2__UploadFileObject(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___TMSServ2__UploadFileObject(soap, _p); } return _p; }

inline struct __TMSServ2__UploadFileObject * soap_new_set___TMSServ2__UploadFileObject(struct soap *soap, _TMSServ__UploadFileObject *TMSServ__UploadFileObject) { struct __TMSServ2__UploadFileObject *_p = soap_instantiate___TMSServ2__UploadFileObject(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___TMSServ2__UploadFileObject(soap, _p); _p->TMSServ__UploadFileObject = TMSServ__UploadFileObject; } return _p; }

inline void soap_delete___TMSServ2__UploadFileObject(struct soap *soap, struct __TMSServ2__UploadFileObject *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___TMSServ2__UploadFileObject(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___TMSServ2__DownloadFileById
#define SOAP_TYPE___TMSServ2__DownloadFileById (99)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___TMSServ2__DownloadFileById(struct soap*, struct __TMSServ2__DownloadFileById *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___TMSServ2__DownloadFileById(struct soap*, const struct __TMSServ2__DownloadFileById *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___TMSServ2__DownloadFileById(struct soap*, const char*, int, const struct __TMSServ2__DownloadFileById *, const char*);
SOAP_FMAC3 struct __TMSServ2__DownloadFileById * SOAP_FMAC4 soap_in___TMSServ2__DownloadFileById(struct soap*, const char*, struct __TMSServ2__DownloadFileById *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___TMSServ2__DownloadFileById(struct soap*, const struct __TMSServ2__DownloadFileById *, const char*, const char*);

#ifndef soap_write___TMSServ2__DownloadFileById
#define soap_write___TMSServ2__DownloadFileById(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___TMSServ2__DownloadFileById(soap, data),0) || soap_put___TMSServ2__DownloadFileById(soap, data, "-TMSServ2:DownloadFileById", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __TMSServ2__DownloadFileById * SOAP_FMAC4 soap_get___TMSServ2__DownloadFileById(struct soap*, struct __TMSServ2__DownloadFileById *, const char*, const char*);

#ifndef soap_read___TMSServ2__DownloadFileById
#define soap_read___TMSServ2__DownloadFileById(soap, data) ( soap_begin_recv(soap) || !soap_get___TMSServ2__DownloadFileById(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __TMSServ2__DownloadFileById * SOAP_FMAC2 soap_instantiate___TMSServ2__DownloadFileById(struct soap*, int, const char*, const char*, size_t*);

inline struct __TMSServ2__DownloadFileById * soap_new___TMSServ2__DownloadFileById(struct soap *soap, int n = -1) { return soap_instantiate___TMSServ2__DownloadFileById(soap, n, NULL, NULL, NULL); }

inline struct __TMSServ2__DownloadFileById * soap_new_req___TMSServ2__DownloadFileById(struct soap *soap) { struct __TMSServ2__DownloadFileById *_p = soap_instantiate___TMSServ2__DownloadFileById(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___TMSServ2__DownloadFileById(soap, _p); } return _p; }

inline struct __TMSServ2__DownloadFileById * soap_new_set___TMSServ2__DownloadFileById(struct soap *soap, _TMSServ__DownloadFileById *TMSServ__DownloadFileById) { struct __TMSServ2__DownloadFileById *_p = soap_instantiate___TMSServ2__DownloadFileById(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___TMSServ2__DownloadFileById(soap, _p); _p->TMSServ__DownloadFileById = TMSServ__DownloadFileById; } return _p; }

inline void soap_delete___TMSServ2__DownloadFileById(struct soap *soap, struct __TMSServ2__DownloadFileById *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___TMSServ2__DownloadFileById(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___TMSServ2__DeleteObject
#define SOAP_TYPE___TMSServ2__DeleteObject (95)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___TMSServ2__DeleteObject(struct soap*, struct __TMSServ2__DeleteObject *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___TMSServ2__DeleteObject(struct soap*, const struct __TMSServ2__DeleteObject *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___TMSServ2__DeleteObject(struct soap*, const char*, int, const struct __TMSServ2__DeleteObject *, const char*);
SOAP_FMAC3 struct __TMSServ2__DeleteObject * SOAP_FMAC4 soap_in___TMSServ2__DeleteObject(struct soap*, const char*, struct __TMSServ2__DeleteObject *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___TMSServ2__DeleteObject(struct soap*, const struct __TMSServ2__DeleteObject *, const char*, const char*);

#ifndef soap_write___TMSServ2__DeleteObject
#define soap_write___TMSServ2__DeleteObject(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___TMSServ2__DeleteObject(soap, data),0) || soap_put___TMSServ2__DeleteObject(soap, data, "-TMSServ2:DeleteObject", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __TMSServ2__DeleteObject * SOAP_FMAC4 soap_get___TMSServ2__DeleteObject(struct soap*, struct __TMSServ2__DeleteObject *, const char*, const char*);

#ifndef soap_read___TMSServ2__DeleteObject
#define soap_read___TMSServ2__DeleteObject(soap, data) ( soap_begin_recv(soap) || !soap_get___TMSServ2__DeleteObject(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __TMSServ2__DeleteObject * SOAP_FMAC2 soap_instantiate___TMSServ2__DeleteObject(struct soap*, int, const char*, const char*, size_t*);

inline struct __TMSServ2__DeleteObject * soap_new___TMSServ2__DeleteObject(struct soap *soap, int n = -1) { return soap_instantiate___TMSServ2__DeleteObject(soap, n, NULL, NULL, NULL); }

inline struct __TMSServ2__DeleteObject * soap_new_req___TMSServ2__DeleteObject(struct soap *soap) { struct __TMSServ2__DeleteObject *_p = soap_instantiate___TMSServ2__DeleteObject(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___TMSServ2__DeleteObject(soap, _p); } return _p; }

inline struct __TMSServ2__DeleteObject * soap_new_set___TMSServ2__DeleteObject(struct soap *soap, _TMSServ__DeleteObject *TMSServ__DeleteObject) { struct __TMSServ2__DeleteObject *_p = soap_instantiate___TMSServ2__DeleteObject(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___TMSServ2__DeleteObject(soap, _p); _p->TMSServ__DeleteObject = TMSServ__DeleteObject; } return _p; }

inline void soap_delete___TMSServ2__DeleteObject(struct soap *soap, struct __TMSServ2__DeleteObject *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___TMSServ2__DeleteObject(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___TMSServ2__SaveOrUpdateObjects
#define SOAP_TYPE___TMSServ2__SaveOrUpdateObjects (91)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___TMSServ2__SaveOrUpdateObjects(struct soap*, struct __TMSServ2__SaveOrUpdateObjects *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___TMSServ2__SaveOrUpdateObjects(struct soap*, const struct __TMSServ2__SaveOrUpdateObjects *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___TMSServ2__SaveOrUpdateObjects(struct soap*, const char*, int, const struct __TMSServ2__SaveOrUpdateObjects *, const char*);
SOAP_FMAC3 struct __TMSServ2__SaveOrUpdateObjects * SOAP_FMAC4 soap_in___TMSServ2__SaveOrUpdateObjects(struct soap*, const char*, struct __TMSServ2__SaveOrUpdateObjects *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___TMSServ2__SaveOrUpdateObjects(struct soap*, const struct __TMSServ2__SaveOrUpdateObjects *, const char*, const char*);

#ifndef soap_write___TMSServ2__SaveOrUpdateObjects
#define soap_write___TMSServ2__SaveOrUpdateObjects(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___TMSServ2__SaveOrUpdateObjects(soap, data),0) || soap_put___TMSServ2__SaveOrUpdateObjects(soap, data, "-TMSServ2:SaveOrUpdateObjects", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __TMSServ2__SaveOrUpdateObjects * SOAP_FMAC4 soap_get___TMSServ2__SaveOrUpdateObjects(struct soap*, struct __TMSServ2__SaveOrUpdateObjects *, const char*, const char*);

#ifndef soap_read___TMSServ2__SaveOrUpdateObjects
#define soap_read___TMSServ2__SaveOrUpdateObjects(soap, data) ( soap_begin_recv(soap) || !soap_get___TMSServ2__SaveOrUpdateObjects(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __TMSServ2__SaveOrUpdateObjects * SOAP_FMAC2 soap_instantiate___TMSServ2__SaveOrUpdateObjects(struct soap*, int, const char*, const char*, size_t*);

inline struct __TMSServ2__SaveOrUpdateObjects * soap_new___TMSServ2__SaveOrUpdateObjects(struct soap *soap, int n = -1) { return soap_instantiate___TMSServ2__SaveOrUpdateObjects(soap, n, NULL, NULL, NULL); }

inline struct __TMSServ2__SaveOrUpdateObjects * soap_new_req___TMSServ2__SaveOrUpdateObjects(struct soap *soap) { struct __TMSServ2__SaveOrUpdateObjects *_p = soap_instantiate___TMSServ2__SaveOrUpdateObjects(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___TMSServ2__SaveOrUpdateObjects(soap, _p); } return _p; }

inline struct __TMSServ2__SaveOrUpdateObjects * soap_new_set___TMSServ2__SaveOrUpdateObjects(struct soap *soap, _TMSServ__SaveOrUpdateObjects *TMSServ__SaveOrUpdateObjects) { struct __TMSServ2__SaveOrUpdateObjects *_p = soap_instantiate___TMSServ2__SaveOrUpdateObjects(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___TMSServ2__SaveOrUpdateObjects(soap, _p); _p->TMSServ__SaveOrUpdateObjects = TMSServ__SaveOrUpdateObjects; } return _p; }

inline void soap_delete___TMSServ2__SaveOrUpdateObjects(struct soap *soap, struct __TMSServ2__SaveOrUpdateObjects *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___TMSServ2__SaveOrUpdateObjects(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___TMSServ2__MatchTowerParts
#define SOAP_TYPE___TMSServ2__MatchTowerParts (87)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___TMSServ2__MatchTowerParts(struct soap*, struct __TMSServ2__MatchTowerParts *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___TMSServ2__MatchTowerParts(struct soap*, const struct __TMSServ2__MatchTowerParts *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___TMSServ2__MatchTowerParts(struct soap*, const char*, int, const struct __TMSServ2__MatchTowerParts *, const char*);
SOAP_FMAC3 struct __TMSServ2__MatchTowerParts * SOAP_FMAC4 soap_in___TMSServ2__MatchTowerParts(struct soap*, const char*, struct __TMSServ2__MatchTowerParts *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___TMSServ2__MatchTowerParts(struct soap*, const struct __TMSServ2__MatchTowerParts *, const char*, const char*);

#ifndef soap_write___TMSServ2__MatchTowerParts
#define soap_write___TMSServ2__MatchTowerParts(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___TMSServ2__MatchTowerParts(soap, data),0) || soap_put___TMSServ2__MatchTowerParts(soap, data, "-TMSServ2:MatchTowerParts", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __TMSServ2__MatchTowerParts * SOAP_FMAC4 soap_get___TMSServ2__MatchTowerParts(struct soap*, struct __TMSServ2__MatchTowerParts *, const char*, const char*);

#ifndef soap_read___TMSServ2__MatchTowerParts
#define soap_read___TMSServ2__MatchTowerParts(soap, data) ( soap_begin_recv(soap) || !soap_get___TMSServ2__MatchTowerParts(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __TMSServ2__MatchTowerParts * SOAP_FMAC2 soap_instantiate___TMSServ2__MatchTowerParts(struct soap*, int, const char*, const char*, size_t*);

inline struct __TMSServ2__MatchTowerParts * soap_new___TMSServ2__MatchTowerParts(struct soap *soap, int n = -1) { return soap_instantiate___TMSServ2__MatchTowerParts(soap, n, NULL, NULL, NULL); }

inline struct __TMSServ2__MatchTowerParts * soap_new_req___TMSServ2__MatchTowerParts(struct soap *soap) { struct __TMSServ2__MatchTowerParts *_p = soap_instantiate___TMSServ2__MatchTowerParts(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___TMSServ2__MatchTowerParts(soap, _p); } return _p; }

inline struct __TMSServ2__MatchTowerParts * soap_new_set___TMSServ2__MatchTowerParts(struct soap *soap, _TMSServ__MatchTowerParts *TMSServ__MatchTowerParts) { struct __TMSServ2__MatchTowerParts *_p = soap_instantiate___TMSServ2__MatchTowerParts(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___TMSServ2__MatchTowerParts(soap, _p); _p->TMSServ__MatchTowerParts = TMSServ__MatchTowerParts; } return _p; }

inline void soap_delete___TMSServ2__MatchTowerParts(struct soap *soap, struct __TMSServ2__MatchTowerParts *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___TMSServ2__MatchTowerParts(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___TMSServ2__GetTowerPartsLabelAndVersionSerial
#define SOAP_TYPE___TMSServ2__GetTowerPartsLabelAndVersionSerial (83)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___TMSServ2__GetTowerPartsLabelAndVersionSerial(struct soap*, struct __TMSServ2__GetTowerPartsLabelAndVersionSerial *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___TMSServ2__GetTowerPartsLabelAndVersionSerial(struct soap*, const struct __TMSServ2__GetTowerPartsLabelAndVersionSerial *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___TMSServ2__GetTowerPartsLabelAndVersionSerial(struct soap*, const char*, int, const struct __TMSServ2__GetTowerPartsLabelAndVersionSerial *, const char*);
SOAP_FMAC3 struct __TMSServ2__GetTowerPartsLabelAndVersionSerial * SOAP_FMAC4 soap_in___TMSServ2__GetTowerPartsLabelAndVersionSerial(struct soap*, const char*, struct __TMSServ2__GetTowerPartsLabelAndVersionSerial *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___TMSServ2__GetTowerPartsLabelAndVersionSerial(struct soap*, const struct __TMSServ2__GetTowerPartsLabelAndVersionSerial *, const char*, const char*);

#ifndef soap_write___TMSServ2__GetTowerPartsLabelAndVersionSerial
#define soap_write___TMSServ2__GetTowerPartsLabelAndVersionSerial(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___TMSServ2__GetTowerPartsLabelAndVersionSerial(soap, data),0) || soap_put___TMSServ2__GetTowerPartsLabelAndVersionSerial(soap, data, "-TMSServ2:GetTowerPartsLabelAndVersionSerial", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __TMSServ2__GetTowerPartsLabelAndVersionSerial * SOAP_FMAC4 soap_get___TMSServ2__GetTowerPartsLabelAndVersionSerial(struct soap*, struct __TMSServ2__GetTowerPartsLabelAndVersionSerial *, const char*, const char*);

#ifndef soap_read___TMSServ2__GetTowerPartsLabelAndVersionSerial
#define soap_read___TMSServ2__GetTowerPartsLabelAndVersionSerial(soap, data) ( soap_begin_recv(soap) || !soap_get___TMSServ2__GetTowerPartsLabelAndVersionSerial(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __TMSServ2__GetTowerPartsLabelAndVersionSerial * SOAP_FMAC2 soap_instantiate___TMSServ2__GetTowerPartsLabelAndVersionSerial(struct soap*, int, const char*, const char*, size_t*);

inline struct __TMSServ2__GetTowerPartsLabelAndVersionSerial * soap_new___TMSServ2__GetTowerPartsLabelAndVersionSerial(struct soap *soap, int n = -1) { return soap_instantiate___TMSServ2__GetTowerPartsLabelAndVersionSerial(soap, n, NULL, NULL, NULL); }

inline struct __TMSServ2__GetTowerPartsLabelAndVersionSerial * soap_new_req___TMSServ2__GetTowerPartsLabelAndVersionSerial(struct soap *soap) { struct __TMSServ2__GetTowerPartsLabelAndVersionSerial *_p = soap_instantiate___TMSServ2__GetTowerPartsLabelAndVersionSerial(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___TMSServ2__GetTowerPartsLabelAndVersionSerial(soap, _p); } return _p; }

inline struct __TMSServ2__GetTowerPartsLabelAndVersionSerial * soap_new_set___TMSServ2__GetTowerPartsLabelAndVersionSerial(struct soap *soap, _TMSServ__GetTowerPartsLabelAndVersionSerial *TMSServ__GetTowerPartsLabelAndVersionSerial) { struct __TMSServ2__GetTowerPartsLabelAndVersionSerial *_p = soap_instantiate___TMSServ2__GetTowerPartsLabelAndVersionSerial(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___TMSServ2__GetTowerPartsLabelAndVersionSerial(soap, _p); _p->TMSServ__GetTowerPartsLabelAndVersionSerial = TMSServ__GetTowerPartsLabelAndVersionSerial; } return _p; }

inline void soap_delete___TMSServ2__GetTowerPartsLabelAndVersionSerial(struct soap *soap, struct __TMSServ2__GetTowerPartsLabelAndVersionSerial *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___TMSServ2__GetTowerPartsLabelAndVersionSerial(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___TMSServ2__GetObjectsVersion
#define SOAP_TYPE___TMSServ2__GetObjectsVersion (79)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___TMSServ2__GetObjectsVersion(struct soap*, struct __TMSServ2__GetObjectsVersion *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___TMSServ2__GetObjectsVersion(struct soap*, const struct __TMSServ2__GetObjectsVersion *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___TMSServ2__GetObjectsVersion(struct soap*, const char*, int, const struct __TMSServ2__GetObjectsVersion *, const char*);
SOAP_FMAC3 struct __TMSServ2__GetObjectsVersion * SOAP_FMAC4 soap_in___TMSServ2__GetObjectsVersion(struct soap*, const char*, struct __TMSServ2__GetObjectsVersion *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___TMSServ2__GetObjectsVersion(struct soap*, const struct __TMSServ2__GetObjectsVersion *, const char*, const char*);

#ifndef soap_write___TMSServ2__GetObjectsVersion
#define soap_write___TMSServ2__GetObjectsVersion(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___TMSServ2__GetObjectsVersion(soap, data),0) || soap_put___TMSServ2__GetObjectsVersion(soap, data, "-TMSServ2:GetObjectsVersion", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __TMSServ2__GetObjectsVersion * SOAP_FMAC4 soap_get___TMSServ2__GetObjectsVersion(struct soap*, struct __TMSServ2__GetObjectsVersion *, const char*, const char*);

#ifndef soap_read___TMSServ2__GetObjectsVersion
#define soap_read___TMSServ2__GetObjectsVersion(soap, data) ( soap_begin_recv(soap) || !soap_get___TMSServ2__GetObjectsVersion(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __TMSServ2__GetObjectsVersion * SOAP_FMAC2 soap_instantiate___TMSServ2__GetObjectsVersion(struct soap*, int, const char*, const char*, size_t*);

inline struct __TMSServ2__GetObjectsVersion * soap_new___TMSServ2__GetObjectsVersion(struct soap *soap, int n = -1) { return soap_instantiate___TMSServ2__GetObjectsVersion(soap, n, NULL, NULL, NULL); }

inline struct __TMSServ2__GetObjectsVersion * soap_new_req___TMSServ2__GetObjectsVersion(struct soap *soap) { struct __TMSServ2__GetObjectsVersion *_p = soap_instantiate___TMSServ2__GetObjectsVersion(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___TMSServ2__GetObjectsVersion(soap, _p); } return _p; }

inline struct __TMSServ2__GetObjectsVersion * soap_new_set___TMSServ2__GetObjectsVersion(struct soap *soap, _TMSServ__GetObjectsVersion *TMSServ__GetObjectsVersion) { struct __TMSServ2__GetObjectsVersion *_p = soap_instantiate___TMSServ2__GetObjectsVersion(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___TMSServ2__GetObjectsVersion(soap, _p); _p->TMSServ__GetObjectsVersion = TMSServ__GetObjectsVersion; } return _p; }

inline void soap_delete___TMSServ2__GetObjectsVersion(struct soap *soap, struct __TMSServ2__GetObjectsVersion *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___TMSServ2__GetObjectsVersion(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___TMSServ2__DownloadObjects
#define SOAP_TYPE___TMSServ2__DownloadObjects (75)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___TMSServ2__DownloadObjects(struct soap*, struct __TMSServ2__DownloadObjects *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___TMSServ2__DownloadObjects(struct soap*, const struct __TMSServ2__DownloadObjects *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___TMSServ2__DownloadObjects(struct soap*, const char*, int, const struct __TMSServ2__DownloadObjects *, const char*);
SOAP_FMAC3 struct __TMSServ2__DownloadObjects * SOAP_FMAC4 soap_in___TMSServ2__DownloadObjects(struct soap*, const char*, struct __TMSServ2__DownloadObjects *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___TMSServ2__DownloadObjects(struct soap*, const struct __TMSServ2__DownloadObjects *, const char*, const char*);

#ifndef soap_write___TMSServ2__DownloadObjects
#define soap_write___TMSServ2__DownloadObjects(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___TMSServ2__DownloadObjects(soap, data),0) || soap_put___TMSServ2__DownloadObjects(soap, data, "-TMSServ2:DownloadObjects", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __TMSServ2__DownloadObjects * SOAP_FMAC4 soap_get___TMSServ2__DownloadObjects(struct soap*, struct __TMSServ2__DownloadObjects *, const char*, const char*);

#ifndef soap_read___TMSServ2__DownloadObjects
#define soap_read___TMSServ2__DownloadObjects(soap, data) ( soap_begin_recv(soap) || !soap_get___TMSServ2__DownloadObjects(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __TMSServ2__DownloadObjects * SOAP_FMAC2 soap_instantiate___TMSServ2__DownloadObjects(struct soap*, int, const char*, const char*, size_t*);

inline struct __TMSServ2__DownloadObjects * soap_new___TMSServ2__DownloadObjects(struct soap *soap, int n = -1) { return soap_instantiate___TMSServ2__DownloadObjects(soap, n, NULL, NULL, NULL); }

inline struct __TMSServ2__DownloadObjects * soap_new_req___TMSServ2__DownloadObjects(struct soap *soap) { struct __TMSServ2__DownloadObjects *_p = soap_instantiate___TMSServ2__DownloadObjects(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___TMSServ2__DownloadObjects(soap, _p); } return _p; }

inline struct __TMSServ2__DownloadObjects * soap_new_set___TMSServ2__DownloadObjects(struct soap *soap, _TMSServ__DownloadObjects *TMSServ__DownloadObjects) { struct __TMSServ2__DownloadObjects *_p = soap_instantiate___TMSServ2__DownloadObjects(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___TMSServ2__DownloadObjects(soap, _p); _p->TMSServ__DownloadObjects = TMSServ__DownloadObjects; } return _p; }

inline void soap_delete___TMSServ2__DownloadObjects(struct soap *soap, struct __TMSServ2__DownloadObjects *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___TMSServ2__DownloadObjects(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___TMSServ2__QueryObjects
#define SOAP_TYPE___TMSServ2__QueryObjects (71)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___TMSServ2__QueryObjects(struct soap*, struct __TMSServ2__QueryObjects *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___TMSServ2__QueryObjects(struct soap*, const struct __TMSServ2__QueryObjects *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___TMSServ2__QueryObjects(struct soap*, const char*, int, const struct __TMSServ2__QueryObjects *, const char*);
SOAP_FMAC3 struct __TMSServ2__QueryObjects * SOAP_FMAC4 soap_in___TMSServ2__QueryObjects(struct soap*, const char*, struct __TMSServ2__QueryObjects *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___TMSServ2__QueryObjects(struct soap*, const struct __TMSServ2__QueryObjects *, const char*, const char*);

#ifndef soap_write___TMSServ2__QueryObjects
#define soap_write___TMSServ2__QueryObjects(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___TMSServ2__QueryObjects(soap, data),0) || soap_put___TMSServ2__QueryObjects(soap, data, "-TMSServ2:QueryObjects", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __TMSServ2__QueryObjects * SOAP_FMAC4 soap_get___TMSServ2__QueryObjects(struct soap*, struct __TMSServ2__QueryObjects *, const char*, const char*);

#ifndef soap_read___TMSServ2__QueryObjects
#define soap_read___TMSServ2__QueryObjects(soap, data) ( soap_begin_recv(soap) || !soap_get___TMSServ2__QueryObjects(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __TMSServ2__QueryObjects * SOAP_FMAC2 soap_instantiate___TMSServ2__QueryObjects(struct soap*, int, const char*, const char*, size_t*);

inline struct __TMSServ2__QueryObjects * soap_new___TMSServ2__QueryObjects(struct soap *soap, int n = -1) { return soap_instantiate___TMSServ2__QueryObjects(soap, n, NULL, NULL, NULL); }

inline struct __TMSServ2__QueryObjects * soap_new_req___TMSServ2__QueryObjects(struct soap *soap) { struct __TMSServ2__QueryObjects *_p = soap_instantiate___TMSServ2__QueryObjects(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___TMSServ2__QueryObjects(soap, _p); } return _p; }

inline struct __TMSServ2__QueryObjects * soap_new_set___TMSServ2__QueryObjects(struct soap *soap, _TMSServ__QueryObjects *TMSServ__QueryObjects) { struct __TMSServ2__QueryObjects *_p = soap_instantiate___TMSServ2__QueryObjects(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___TMSServ2__QueryObjects(soap, _p); _p->TMSServ__QueryObjects = TMSServ__QueryObjects; } return _p; }

inline void soap_delete___TMSServ2__QueryObjects(struct soap *soap, struct __TMSServ2__QueryObjects *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___TMSServ2__QueryObjects(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___TMSServ2__logoutUser
#define SOAP_TYPE___TMSServ2__logoutUser (67)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___TMSServ2__logoutUser(struct soap*, struct __TMSServ2__logoutUser *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___TMSServ2__logoutUser(struct soap*, const struct __TMSServ2__logoutUser *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___TMSServ2__logoutUser(struct soap*, const char*, int, const struct __TMSServ2__logoutUser *, const char*);
SOAP_FMAC3 struct __TMSServ2__logoutUser * SOAP_FMAC4 soap_in___TMSServ2__logoutUser(struct soap*, const char*, struct __TMSServ2__logoutUser *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___TMSServ2__logoutUser(struct soap*, const struct __TMSServ2__logoutUser *, const char*, const char*);

#ifndef soap_write___TMSServ2__logoutUser
#define soap_write___TMSServ2__logoutUser(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___TMSServ2__logoutUser(soap, data),0) || soap_put___TMSServ2__logoutUser(soap, data, "-TMSServ2:logoutUser", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __TMSServ2__logoutUser * SOAP_FMAC4 soap_get___TMSServ2__logoutUser(struct soap*, struct __TMSServ2__logoutUser *, const char*, const char*);

#ifndef soap_read___TMSServ2__logoutUser
#define soap_read___TMSServ2__logoutUser(soap, data) ( soap_begin_recv(soap) || !soap_get___TMSServ2__logoutUser(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __TMSServ2__logoutUser * SOAP_FMAC2 soap_instantiate___TMSServ2__logoutUser(struct soap*, int, const char*, const char*, size_t*);

inline struct __TMSServ2__logoutUser * soap_new___TMSServ2__logoutUser(struct soap *soap, int n = -1) { return soap_instantiate___TMSServ2__logoutUser(soap, n, NULL, NULL, NULL); }

inline struct __TMSServ2__logoutUser * soap_new_req___TMSServ2__logoutUser(struct soap *soap) { struct __TMSServ2__logoutUser *_p = soap_instantiate___TMSServ2__logoutUser(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___TMSServ2__logoutUser(soap, _p); } return _p; }

inline struct __TMSServ2__logoutUser * soap_new_set___TMSServ2__logoutUser(struct soap *soap, _TMSServ__logoutUser *TMSServ__logoutUser) { struct __TMSServ2__logoutUser *_p = soap_instantiate___TMSServ2__logoutUser(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___TMSServ2__logoutUser(soap, _p); _p->TMSServ__logoutUser = TMSServ__logoutUser; } return _p; }

inline void soap_delete___TMSServ2__logoutUser(struct soap *soap, struct __TMSServ2__logoutUser *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___TMSServ2__logoutUser(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___TMSServ2__loginUserByByteArr
#define SOAP_TYPE___TMSServ2__loginUserByByteArr (63)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___TMSServ2__loginUserByByteArr(struct soap*, struct __TMSServ2__loginUserByByteArr *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___TMSServ2__loginUserByByteArr(struct soap*, const struct __TMSServ2__loginUserByByteArr *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___TMSServ2__loginUserByByteArr(struct soap*, const char*, int, const struct __TMSServ2__loginUserByByteArr *, const char*);
SOAP_FMAC3 struct __TMSServ2__loginUserByByteArr * SOAP_FMAC4 soap_in___TMSServ2__loginUserByByteArr(struct soap*, const char*, struct __TMSServ2__loginUserByByteArr *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___TMSServ2__loginUserByByteArr(struct soap*, const struct __TMSServ2__loginUserByByteArr *, const char*, const char*);

#ifndef soap_write___TMSServ2__loginUserByByteArr
#define soap_write___TMSServ2__loginUserByByteArr(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___TMSServ2__loginUserByByteArr(soap, data),0) || soap_put___TMSServ2__loginUserByByteArr(soap, data, "-TMSServ2:loginUserByByteArr", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __TMSServ2__loginUserByByteArr * SOAP_FMAC4 soap_get___TMSServ2__loginUserByByteArr(struct soap*, struct __TMSServ2__loginUserByByteArr *, const char*, const char*);

#ifndef soap_read___TMSServ2__loginUserByByteArr
#define soap_read___TMSServ2__loginUserByByteArr(soap, data) ( soap_begin_recv(soap) || !soap_get___TMSServ2__loginUserByByteArr(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __TMSServ2__loginUserByByteArr * SOAP_FMAC2 soap_instantiate___TMSServ2__loginUserByByteArr(struct soap*, int, const char*, const char*, size_t*);

inline struct __TMSServ2__loginUserByByteArr * soap_new___TMSServ2__loginUserByByteArr(struct soap *soap, int n = -1) { return soap_instantiate___TMSServ2__loginUserByByteArr(soap, n, NULL, NULL, NULL); }

inline struct __TMSServ2__loginUserByByteArr * soap_new_req___TMSServ2__loginUserByByteArr(struct soap *soap) { struct __TMSServ2__loginUserByByteArr *_p = soap_instantiate___TMSServ2__loginUserByByteArr(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___TMSServ2__loginUserByByteArr(soap, _p); } return _p; }

inline struct __TMSServ2__loginUserByByteArr * soap_new_set___TMSServ2__loginUserByByteArr(struct soap *soap, _TMSServ__loginUserByByteArr *TMSServ__loginUserByByteArr) { struct __TMSServ2__loginUserByByteArr *_p = soap_instantiate___TMSServ2__loginUserByByteArr(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___TMSServ2__loginUserByByteArr(soap, _p); _p->TMSServ__loginUserByByteArr = TMSServ__loginUserByByteArr; } return _p; }

inline void soap_delete___TMSServ2__loginUserByByteArr(struct soap *soap, struct __TMSServ2__loginUserByByteArr *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___TMSServ2__loginUserByByteArr(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___TMSServ2__loginUser
#define SOAP_TYPE___TMSServ2__loginUser (59)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___TMSServ2__loginUser(struct soap*, struct __TMSServ2__loginUser *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___TMSServ2__loginUser(struct soap*, const struct __TMSServ2__loginUser *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___TMSServ2__loginUser(struct soap*, const char*, int, const struct __TMSServ2__loginUser *, const char*);
SOAP_FMAC3 struct __TMSServ2__loginUser * SOAP_FMAC4 soap_in___TMSServ2__loginUser(struct soap*, const char*, struct __TMSServ2__loginUser *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___TMSServ2__loginUser(struct soap*, const struct __TMSServ2__loginUser *, const char*, const char*);

#ifndef soap_write___TMSServ2__loginUser
#define soap_write___TMSServ2__loginUser(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___TMSServ2__loginUser(soap, data),0) || soap_put___TMSServ2__loginUser(soap, data, "-TMSServ2:loginUser", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __TMSServ2__loginUser * SOAP_FMAC4 soap_get___TMSServ2__loginUser(struct soap*, struct __TMSServ2__loginUser *, const char*, const char*);

#ifndef soap_read___TMSServ2__loginUser
#define soap_read___TMSServ2__loginUser(soap, data) ( soap_begin_recv(soap) || !soap_get___TMSServ2__loginUser(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __TMSServ2__loginUser * SOAP_FMAC2 soap_instantiate___TMSServ2__loginUser(struct soap*, int, const char*, const char*, size_t*);

inline struct __TMSServ2__loginUser * soap_new___TMSServ2__loginUser(struct soap *soap, int n = -1) { return soap_instantiate___TMSServ2__loginUser(soap, n, NULL, NULL, NULL); }

inline struct __TMSServ2__loginUser * soap_new_req___TMSServ2__loginUser(struct soap *soap) { struct __TMSServ2__loginUser *_p = soap_instantiate___TMSServ2__loginUser(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___TMSServ2__loginUser(soap, _p); } return _p; }

inline struct __TMSServ2__loginUser * soap_new_set___TMSServ2__loginUser(struct soap *soap, _TMSServ__loginUser *TMSServ__loginUser) { struct __TMSServ2__loginUser *_p = soap_instantiate___TMSServ2__loginUser(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___TMSServ2__loginUser(soap, _p); _p->TMSServ__loginUser = TMSServ__loginUser; } return _p; }

inline void soap_delete___TMSServ2__loginUser(struct soap *soap, struct __TMSServ2__loginUser *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___TMSServ2__loginUser(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_PointerToSOAP_ENV__Reason
#define SOAP_TYPE_PointerToSOAP_ENV__Reason (294)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Reason(struct soap*, const char *, int, struct SOAP_ENV__Reason *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Reason ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Reason(struct soap*, const char*, struct SOAP_ENV__Reason **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *const*, const char*, const char*);

#ifndef soap_write_PointerToSOAP_ENV__Reason
#define soap_write_PointerToSOAP_ENV__Reason(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerToSOAP_ENV__Reason(soap, data),0) || soap_put_PointerToSOAP_ENV__Reason(soap, data, "SOAP-ENV:Reason", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Reason ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason **, const char*, const char*);

#ifndef soap_read_PointerToSOAP_ENV__Reason
#define soap_read_PointerToSOAP_ENV__Reason(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToSOAP_ENV__Reason(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_PointerToSOAP_ENV__Detail
#define SOAP_TYPE_PointerToSOAP_ENV__Detail (293)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Detail(struct soap*, const char *, int, struct SOAP_ENV__Detail *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Detail ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Detail(struct soap*, const char*, struct SOAP_ENV__Detail **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *const*, const char*, const char*);

#ifndef soap_write_PointerToSOAP_ENV__Detail
#define soap_write_PointerToSOAP_ENV__Detail(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerToSOAP_ENV__Detail(soap, data),0) || soap_put_PointerToSOAP_ENV__Detail(soap, data, "SOAP-ENV:Detail", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Detail ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail **, const char*, const char*);

#ifndef soap_read_PointerToSOAP_ENV__Detail
#define soap_read_PointerToSOAP_ENV__Detail(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToSOAP_ENV__Detail(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_PointerToSOAP_ENV__Code
#define SOAP_TYPE_PointerToSOAP_ENV__Code (287)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Code(struct soap*, const char *, int, struct SOAP_ENV__Code *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Code ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Code(struct soap*, const char*, struct SOAP_ENV__Code **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *const*, const char*, const char*);

#ifndef soap_write_PointerToSOAP_ENV__Code
#define soap_write_PointerToSOAP_ENV__Code(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerToSOAP_ENV__Code(soap, data),0) || soap_put_PointerToSOAP_ENV__Code(soap, data, "SOAP-ENV:Code", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Code ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code **, const char*, const char*);

#ifndef soap_read_PointerToSOAP_ENV__Code
#define soap_read_PointerToSOAP_ENV__Code(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToSOAP_ENV__Code(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#endif

#ifndef SOAP_TYPE_PointerTo_VersionServ__SaveOrUpdateObjects
#define SOAP_TYPE_PointerTo_VersionServ__SaveOrUpdateObjects (257)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_VersionServ__SaveOrUpdateObjects(struct soap*, _VersionServ__SaveOrUpdateObjects *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_VersionServ__SaveOrUpdateObjects(struct soap*, const char *, int, _VersionServ__SaveOrUpdateObjects *const*, const char *);
SOAP_FMAC3 _VersionServ__SaveOrUpdateObjects ** SOAP_FMAC4 soap_in_PointerTo_VersionServ__SaveOrUpdateObjects(struct soap*, const char*, _VersionServ__SaveOrUpdateObjects **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_VersionServ__SaveOrUpdateObjects(struct soap*, _VersionServ__SaveOrUpdateObjects *const*, const char*, const char*);

#ifndef soap_write_PointerTo_VersionServ__SaveOrUpdateObjects
#define soap_write_PointerTo_VersionServ__SaveOrUpdateObjects(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_VersionServ__SaveOrUpdateObjects(soap, data),0) || soap_put_PointerTo_VersionServ__SaveOrUpdateObjects(soap, data, "VersionServ:SaveOrUpdateObjects", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _VersionServ__SaveOrUpdateObjects ** SOAP_FMAC4 soap_get_PointerTo_VersionServ__SaveOrUpdateObjects(struct soap*, _VersionServ__SaveOrUpdateObjects **, const char*, const char*);

#ifndef soap_read_PointerTo_VersionServ__SaveOrUpdateObjects
#define soap_read_PointerTo_VersionServ__SaveOrUpdateObjects(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_VersionServ__SaveOrUpdateObjects(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_VersionServ__DownloadObjects
#define SOAP_TYPE_PointerTo_VersionServ__DownloadObjects (253)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_VersionServ__DownloadObjects(struct soap*, _VersionServ__DownloadObjects *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_VersionServ__DownloadObjects(struct soap*, const char *, int, _VersionServ__DownloadObjects *const*, const char *);
SOAP_FMAC3 _VersionServ__DownloadObjects ** SOAP_FMAC4 soap_in_PointerTo_VersionServ__DownloadObjects(struct soap*, const char*, _VersionServ__DownloadObjects **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_VersionServ__DownloadObjects(struct soap*, _VersionServ__DownloadObjects *const*, const char*, const char*);

#ifndef soap_write_PointerTo_VersionServ__DownloadObjects
#define soap_write_PointerTo_VersionServ__DownloadObjects(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_VersionServ__DownloadObjects(soap, data),0) || soap_put_PointerTo_VersionServ__DownloadObjects(soap, data, "VersionServ:DownloadObjects", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _VersionServ__DownloadObjects ** SOAP_FMAC4 soap_get_PointerTo_VersionServ__DownloadObjects(struct soap*, _VersionServ__DownloadObjects **, const char*, const char*);

#ifndef soap_read_PointerTo_VersionServ__DownloadObjects
#define soap_read_PointerTo_VersionServ__DownloadObjects(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_VersionServ__DownloadObjects(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_VersionServ__QueryObjects
#define SOAP_TYPE_PointerTo_VersionServ__QueryObjects (249)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_VersionServ__QueryObjects(struct soap*, _VersionServ__QueryObjects *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_VersionServ__QueryObjects(struct soap*, const char *, int, _VersionServ__QueryObjects *const*, const char *);
SOAP_FMAC3 _VersionServ__QueryObjects ** SOAP_FMAC4 soap_in_PointerTo_VersionServ__QueryObjects(struct soap*, const char*, _VersionServ__QueryObjects **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_VersionServ__QueryObjects(struct soap*, _VersionServ__QueryObjects *const*, const char*, const char*);

#ifndef soap_write_PointerTo_VersionServ__QueryObjects
#define soap_write_PointerTo_VersionServ__QueryObjects(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_VersionServ__QueryObjects(soap, data),0) || soap_put_PointerTo_VersionServ__QueryObjects(soap, data, "VersionServ:QueryObjects", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _VersionServ__QueryObjects ** SOAP_FMAC4 soap_get_PointerTo_VersionServ__QueryObjects(struct soap*, _VersionServ__QueryObjects **, const char*, const char*);

#ifndef soap_read_PointerTo_VersionServ__QueryObjects
#define soap_read_PointerTo_VersionServ__QueryObjects(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_VersionServ__QueryObjects(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_VersionServ__GetFileHeader
#define SOAP_TYPE_PointerTo_VersionServ__GetFileHeader (245)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_VersionServ__GetFileHeader(struct soap*, _VersionServ__GetFileHeader *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_VersionServ__GetFileHeader(struct soap*, const char *, int, _VersionServ__GetFileHeader *const*, const char *);
SOAP_FMAC3 _VersionServ__GetFileHeader ** SOAP_FMAC4 soap_in_PointerTo_VersionServ__GetFileHeader(struct soap*, const char*, _VersionServ__GetFileHeader **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_VersionServ__GetFileHeader(struct soap*, _VersionServ__GetFileHeader *const*, const char*, const char*);

#ifndef soap_write_PointerTo_VersionServ__GetFileHeader
#define soap_write_PointerTo_VersionServ__GetFileHeader(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_VersionServ__GetFileHeader(soap, data),0) || soap_put_PointerTo_VersionServ__GetFileHeader(soap, data, "VersionServ:GetFileHeader", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _VersionServ__GetFileHeader ** SOAP_FMAC4 soap_get_PointerTo_VersionServ__GetFileHeader(struct soap*, _VersionServ__GetFileHeader **, const char*, const char*);

#ifndef soap_read_PointerTo_VersionServ__GetFileHeader
#define soap_read_PointerTo_VersionServ__GetFileHeader(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_VersionServ__GetFileHeader(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_VersionServ__QueryDownLoadItemArrByProductId
#define SOAP_TYPE_PointerTo_VersionServ__QueryDownLoadItemArrByProductId (241)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_VersionServ__QueryDownLoadItemArrByProductId(struct soap*, _VersionServ__QueryDownLoadItemArrByProductId *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_VersionServ__QueryDownLoadItemArrByProductId(struct soap*, const char *, int, _VersionServ__QueryDownLoadItemArrByProductId *const*, const char *);
SOAP_FMAC3 _VersionServ__QueryDownLoadItemArrByProductId ** SOAP_FMAC4 soap_in_PointerTo_VersionServ__QueryDownLoadItemArrByProductId(struct soap*, const char*, _VersionServ__QueryDownLoadItemArrByProductId **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_VersionServ__QueryDownLoadItemArrByProductId(struct soap*, _VersionServ__QueryDownLoadItemArrByProductId *const*, const char*, const char*);

#ifndef soap_write_PointerTo_VersionServ__QueryDownLoadItemArrByProductId
#define soap_write_PointerTo_VersionServ__QueryDownLoadItemArrByProductId(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_VersionServ__QueryDownLoadItemArrByProductId(soap, data),0) || soap_put_PointerTo_VersionServ__QueryDownLoadItemArrByProductId(soap, data, "VersionServ:QueryDownLoadItemArrByProductId", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _VersionServ__QueryDownLoadItemArrByProductId ** SOAP_FMAC4 soap_get_PointerTo_VersionServ__QueryDownLoadItemArrByProductId(struct soap*, _VersionServ__QueryDownLoadItemArrByProductId **, const char*, const char*);

#ifndef soap_read_PointerTo_VersionServ__QueryDownLoadItemArrByProductId
#define soap_read_PointerTo_VersionServ__QueryDownLoadItemArrByProductId(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_VersionServ__QueryDownLoadItemArrByProductId(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_VersionServ__GetDogAccessHistory
#define SOAP_TYPE_PointerTo_VersionServ__GetDogAccessHistory (237)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_VersionServ__GetDogAccessHistory(struct soap*, _VersionServ__GetDogAccessHistory *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_VersionServ__GetDogAccessHistory(struct soap*, const char *, int, _VersionServ__GetDogAccessHistory *const*, const char *);
SOAP_FMAC3 _VersionServ__GetDogAccessHistory ** SOAP_FMAC4 soap_in_PointerTo_VersionServ__GetDogAccessHistory(struct soap*, const char*, _VersionServ__GetDogAccessHistory **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_VersionServ__GetDogAccessHistory(struct soap*, _VersionServ__GetDogAccessHistory *const*, const char*, const char*);

#ifndef soap_write_PointerTo_VersionServ__GetDogAccessHistory
#define soap_write_PointerTo_VersionServ__GetDogAccessHistory(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_VersionServ__GetDogAccessHistory(soap, data),0) || soap_put_PointerTo_VersionServ__GetDogAccessHistory(soap, data, "VersionServ:GetDogAccessHistory", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _VersionServ__GetDogAccessHistory ** SOAP_FMAC4 soap_get_PointerTo_VersionServ__GetDogAccessHistory(struct soap*, _VersionServ__GetDogAccessHistory **, const char*, const char*);

#ifndef soap_read_PointerTo_VersionServ__GetDogAccessHistory
#define soap_read_PointerTo_VersionServ__GetDogAccessHistory(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_VersionServ__GetDogAccessHistory(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_VersionServ__GetVersionReleaseNotes
#define SOAP_TYPE_PointerTo_VersionServ__GetVersionReleaseNotes (233)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_VersionServ__GetVersionReleaseNotes(struct soap*, _VersionServ__GetVersionReleaseNotes *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_VersionServ__GetVersionReleaseNotes(struct soap*, const char *, int, _VersionServ__GetVersionReleaseNotes *const*, const char *);
SOAP_FMAC3 _VersionServ__GetVersionReleaseNotes ** SOAP_FMAC4 soap_in_PointerTo_VersionServ__GetVersionReleaseNotes(struct soap*, const char*, _VersionServ__GetVersionReleaseNotes **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_VersionServ__GetVersionReleaseNotes(struct soap*, _VersionServ__GetVersionReleaseNotes *const*, const char*, const char*);

#ifndef soap_write_PointerTo_VersionServ__GetVersionReleaseNotes
#define soap_write_PointerTo_VersionServ__GetVersionReleaseNotes(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_VersionServ__GetVersionReleaseNotes(soap, data),0) || soap_put_PointerTo_VersionServ__GetVersionReleaseNotes(soap, data, "VersionServ:GetVersionReleaseNotes", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _VersionServ__GetVersionReleaseNotes ** SOAP_FMAC4 soap_get_PointerTo_VersionServ__GetVersionReleaseNotes(struct soap*, _VersionServ__GetVersionReleaseNotes **, const char*, const char*);

#ifndef soap_read_PointerTo_VersionServ__GetVersionReleaseNotes
#define soap_read_PointerTo_VersionServ__GetVersionReleaseNotes(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_VersionServ__GetVersionReleaseNotes(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_VersionServ__CompareVersion
#define SOAP_TYPE_PointerTo_VersionServ__CompareVersion (229)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_VersionServ__CompareVersion(struct soap*, _VersionServ__CompareVersion *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_VersionServ__CompareVersion(struct soap*, const char *, int, _VersionServ__CompareVersion *const*, const char *);
SOAP_FMAC3 _VersionServ__CompareVersion ** SOAP_FMAC4 soap_in_PointerTo_VersionServ__CompareVersion(struct soap*, const char*, _VersionServ__CompareVersion **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_VersionServ__CompareVersion(struct soap*, _VersionServ__CompareVersion *const*, const char*, const char*);

#ifndef soap_write_PointerTo_VersionServ__CompareVersion
#define soap_write_PointerTo_VersionServ__CompareVersion(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_VersionServ__CompareVersion(soap, data),0) || soap_put_PointerTo_VersionServ__CompareVersion(soap, data, "VersionServ:CompareVersion", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _VersionServ__CompareVersion ** SOAP_FMAC4 soap_get_PointerTo_VersionServ__CompareVersion(struct soap*, _VersionServ__CompareVersion **, const char*, const char*);

#ifndef soap_read_PointerTo_VersionServ__CompareVersion
#define soap_read_PointerTo_VersionServ__CompareVersion(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_VersionServ__CompareVersion(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_VersionServ__SetRevisionReadFlag
#define SOAP_TYPE_PointerTo_VersionServ__SetRevisionReadFlag (225)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_VersionServ__SetRevisionReadFlag(struct soap*, _VersionServ__SetRevisionReadFlag *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_VersionServ__SetRevisionReadFlag(struct soap*, const char *, int, _VersionServ__SetRevisionReadFlag *const*, const char *);
SOAP_FMAC3 _VersionServ__SetRevisionReadFlag ** SOAP_FMAC4 soap_in_PointerTo_VersionServ__SetRevisionReadFlag(struct soap*, const char*, _VersionServ__SetRevisionReadFlag **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_VersionServ__SetRevisionReadFlag(struct soap*, _VersionServ__SetRevisionReadFlag *const*, const char*, const char*);

#ifndef soap_write_PointerTo_VersionServ__SetRevisionReadFlag
#define soap_write_PointerTo_VersionServ__SetRevisionReadFlag(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_VersionServ__SetRevisionReadFlag(soap, data),0) || soap_put_PointerTo_VersionServ__SetRevisionReadFlag(soap, data, "VersionServ:SetRevisionReadFlag", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _VersionServ__SetRevisionReadFlag ** SOAP_FMAC4 soap_get_PointerTo_VersionServ__SetRevisionReadFlag(struct soap*, _VersionServ__SetRevisionReadFlag **, const char*, const char*);

#ifndef soap_read_PointerTo_VersionServ__SetRevisionReadFlag
#define soap_read_PointerTo_VersionServ__SetRevisionReadFlag(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_VersionServ__SetRevisionReadFlag(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_VersionServ__GetUpdateVerByCurVer
#define SOAP_TYPE_PointerTo_VersionServ__GetUpdateVerByCurVer (221)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_VersionServ__GetUpdateVerByCurVer(struct soap*, _VersionServ__GetUpdateVerByCurVer *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_VersionServ__GetUpdateVerByCurVer(struct soap*, const char *, int, _VersionServ__GetUpdateVerByCurVer *const*, const char *);
SOAP_FMAC3 _VersionServ__GetUpdateVerByCurVer ** SOAP_FMAC4 soap_in_PointerTo_VersionServ__GetUpdateVerByCurVer(struct soap*, const char*, _VersionServ__GetUpdateVerByCurVer **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_VersionServ__GetUpdateVerByCurVer(struct soap*, _VersionServ__GetUpdateVerByCurVer *const*, const char*, const char*);

#ifndef soap_write_PointerTo_VersionServ__GetUpdateVerByCurVer
#define soap_write_PointerTo_VersionServ__GetUpdateVerByCurVer(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_VersionServ__GetUpdateVerByCurVer(soap, data),0) || soap_put_PointerTo_VersionServ__GetUpdateVerByCurVer(soap, data, "VersionServ:GetUpdateVerByCurVer", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _VersionServ__GetUpdateVerByCurVer ** SOAP_FMAC4 soap_get_PointerTo_VersionServ__GetUpdateVerByCurVer(struct soap*, _VersionServ__GetUpdateVerByCurVer **, const char*, const char*);

#ifndef soap_read_PointerTo_VersionServ__GetUpdateVerByCurVer
#define soap_read_PointerTo_VersionServ__GetUpdateVerByCurVer(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_VersionServ__GetUpdateVerByCurVer(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_VersionServ__LoginByByteArr
#define SOAP_TYPE_PointerTo_VersionServ__LoginByByteArr (217)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_VersionServ__LoginByByteArr(struct soap*, _VersionServ__LoginByByteArr *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_VersionServ__LoginByByteArr(struct soap*, const char *, int, _VersionServ__LoginByByteArr *const*, const char *);
SOAP_FMAC3 _VersionServ__LoginByByteArr ** SOAP_FMAC4 soap_in_PointerTo_VersionServ__LoginByByteArr(struct soap*, const char*, _VersionServ__LoginByByteArr **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_VersionServ__LoginByByteArr(struct soap*, _VersionServ__LoginByByteArr *const*, const char*, const char*);

#ifndef soap_write_PointerTo_VersionServ__LoginByByteArr
#define soap_write_PointerTo_VersionServ__LoginByByteArr(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_VersionServ__LoginByByteArr(soap, data),0) || soap_put_PointerTo_VersionServ__LoginByByteArr(soap, data, "VersionServ:LoginByByteArr", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _VersionServ__LoginByByteArr ** SOAP_FMAC4 soap_get_PointerTo_VersionServ__LoginByByteArr(struct soap*, _VersionServ__LoginByByteArr **, const char*, const char*);

#ifndef soap_read_PointerTo_VersionServ__LoginByByteArr
#define soap_read_PointerTo_VersionServ__LoginByByteArr(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_VersionServ__LoginByByteArr(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_VersionServ__Login
#define SOAP_TYPE_PointerTo_VersionServ__Login (213)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_VersionServ__Login(struct soap*, _VersionServ__Login *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_VersionServ__Login(struct soap*, const char *, int, _VersionServ__Login *const*, const char *);
SOAP_FMAC3 _VersionServ__Login ** SOAP_FMAC4 soap_in_PointerTo_VersionServ__Login(struct soap*, const char*, _VersionServ__Login **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_VersionServ__Login(struct soap*, _VersionServ__Login *const*, const char*, const char*);

#ifndef soap_write_PointerTo_VersionServ__Login
#define soap_write_PointerTo_VersionServ__Login(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_VersionServ__Login(soap, data),0) || soap_put_PointerTo_VersionServ__Login(soap, data, "VersionServ:Login", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _VersionServ__Login ** SOAP_FMAC4 soap_get_PointerTo_VersionServ__Login(struct soap*, _VersionServ__Login **, const char*, const char*);

#ifndef soap_read_PointerTo_VersionServ__Login
#define soap_read_PointerTo_VersionServ__Login(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_VersionServ__Login(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerToVersionServ__FileHeader
#define SOAP_TYPE_PointerToVersionServ__FileHeader (212)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToVersionServ__FileHeader(struct soap*, VersionServ__FileHeader *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToVersionServ__FileHeader(struct soap*, const char *, int, VersionServ__FileHeader *const*, const char *);
SOAP_FMAC3 VersionServ__FileHeader ** SOAP_FMAC4 soap_in_PointerToVersionServ__FileHeader(struct soap*, const char*, VersionServ__FileHeader **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToVersionServ__FileHeader(struct soap*, VersionServ__FileHeader *const*, const char*, const char*);

#ifndef soap_write_PointerToVersionServ__FileHeader
#define soap_write_PointerToVersionServ__FileHeader(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerToVersionServ__FileHeader(soap, data),0) || soap_put_PointerToVersionServ__FileHeader(soap, data, "VersionServ:FileHeader", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 VersionServ__FileHeader ** SOAP_FMAC4 soap_get_PointerToVersionServ__FileHeader(struct soap*, VersionServ__FileHeader **, const char*, const char*);

#ifndef soap_read_PointerToVersionServ__FileHeader
#define soap_read_PointerToVersionServ__FileHeader(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToVersionServ__FileHeader(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerToVersionServ__ArrayOfDownLoadItem
#define SOAP_TYPE_PointerToVersionServ__ArrayOfDownLoadItem (211)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToVersionServ__ArrayOfDownLoadItem(struct soap*, VersionServ__ArrayOfDownLoadItem *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToVersionServ__ArrayOfDownLoadItem(struct soap*, const char *, int, VersionServ__ArrayOfDownLoadItem *const*, const char *);
SOAP_FMAC3 VersionServ__ArrayOfDownLoadItem ** SOAP_FMAC4 soap_in_PointerToVersionServ__ArrayOfDownLoadItem(struct soap*, const char*, VersionServ__ArrayOfDownLoadItem **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToVersionServ__ArrayOfDownLoadItem(struct soap*, VersionServ__ArrayOfDownLoadItem *const*, const char*, const char*);

#ifndef soap_write_PointerToVersionServ__ArrayOfDownLoadItem
#define soap_write_PointerToVersionServ__ArrayOfDownLoadItem(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerToVersionServ__ArrayOfDownLoadItem(soap, data),0) || soap_put_PointerToVersionServ__ArrayOfDownLoadItem(soap, data, "VersionServ:ArrayOfDownLoadItem", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 VersionServ__ArrayOfDownLoadItem ** SOAP_FMAC4 soap_get_PointerToVersionServ__ArrayOfDownLoadItem(struct soap*, VersionServ__ArrayOfDownLoadItem **, const char*, const char*);

#ifndef soap_read_PointerToVersionServ__ArrayOfDownLoadItem
#define soap_read_PointerToVersionServ__ArrayOfDownLoadItem(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToVersionServ__ArrayOfDownLoadItem(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerToVersionServ__DogAccessHistory
#define SOAP_TYPE_PointerToVersionServ__DogAccessHistory (210)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToVersionServ__DogAccessHistory(struct soap*, VersionServ__DogAccessHistory *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToVersionServ__DogAccessHistory(struct soap*, const char *, int, VersionServ__DogAccessHistory *const*, const char *);
SOAP_FMAC3 VersionServ__DogAccessHistory ** SOAP_FMAC4 soap_in_PointerToVersionServ__DogAccessHistory(struct soap*, const char*, VersionServ__DogAccessHistory **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToVersionServ__DogAccessHistory(struct soap*, VersionServ__DogAccessHistory *const*, const char*, const char*);

#ifndef soap_write_PointerToVersionServ__DogAccessHistory
#define soap_write_PointerToVersionServ__DogAccessHistory(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerToVersionServ__DogAccessHistory(soap, data),0) || soap_put_PointerToVersionServ__DogAccessHistory(soap, data, "VersionServ:DogAccessHistory", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 VersionServ__DogAccessHistory ** SOAP_FMAC4 soap_get_PointerToVersionServ__DogAccessHistory(struct soap*, VersionServ__DogAccessHistory **, const char*, const char*);

#ifndef soap_read_PointerToVersionServ__DogAccessHistory
#define soap_read_PointerToVersionServ__DogAccessHistory(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToVersionServ__DogAccessHistory(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerToVersionServ__ArrayOfVersionRevision
#define SOAP_TYPE_PointerToVersionServ__ArrayOfVersionRevision (209)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToVersionServ__ArrayOfVersionRevision(struct soap*, VersionServ__ArrayOfVersionRevision *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToVersionServ__ArrayOfVersionRevision(struct soap*, const char *, int, VersionServ__ArrayOfVersionRevision *const*, const char *);
SOAP_FMAC3 VersionServ__ArrayOfVersionRevision ** SOAP_FMAC4 soap_in_PointerToVersionServ__ArrayOfVersionRevision(struct soap*, const char*, VersionServ__ArrayOfVersionRevision **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToVersionServ__ArrayOfVersionRevision(struct soap*, VersionServ__ArrayOfVersionRevision *const*, const char*, const char*);

#ifndef soap_write_PointerToVersionServ__ArrayOfVersionRevision
#define soap_write_PointerToVersionServ__ArrayOfVersionRevision(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerToVersionServ__ArrayOfVersionRevision(soap, data),0) || soap_put_PointerToVersionServ__ArrayOfVersionRevision(soap, data, "VersionServ:ArrayOfVersionRevision", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 VersionServ__ArrayOfVersionRevision ** SOAP_FMAC4 soap_get_PointerToVersionServ__ArrayOfVersionRevision(struct soap*, VersionServ__ArrayOfVersionRevision **, const char*, const char*);

#ifndef soap_read_PointerToVersionServ__ArrayOfVersionRevision
#define soap_read_PointerToVersionServ__ArrayOfVersionRevision(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToVersionServ__ArrayOfVersionRevision(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerToVersionServ__ArrayOfInt
#define SOAP_TYPE_PointerToVersionServ__ArrayOfInt (208)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToVersionServ__ArrayOfInt(struct soap*, VersionServ__ArrayOfInt *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToVersionServ__ArrayOfInt(struct soap*, const char *, int, VersionServ__ArrayOfInt *const*, const char *);
SOAP_FMAC3 VersionServ__ArrayOfInt ** SOAP_FMAC4 soap_in_PointerToVersionServ__ArrayOfInt(struct soap*, const char*, VersionServ__ArrayOfInt **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToVersionServ__ArrayOfInt(struct soap*, VersionServ__ArrayOfInt *const*, const char*, const char*);

#ifndef soap_write_PointerToVersionServ__ArrayOfInt
#define soap_write_PointerToVersionServ__ArrayOfInt(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerToVersionServ__ArrayOfInt(soap, data),0) || soap_put_PointerToVersionServ__ArrayOfInt(soap, data, "VersionServ:ArrayOfInt", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 VersionServ__ArrayOfInt ** SOAP_FMAC4 soap_get_PointerToVersionServ__ArrayOfInt(struct soap*, VersionServ__ArrayOfInt **, const char*, const char*);

#ifndef soap_read_PointerToVersionServ__ArrayOfInt
#define soap_read_PointerToVersionServ__ArrayOfInt(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToVersionServ__ArrayOfInt(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerToVersionServ__ArrayOfProductVersion
#define SOAP_TYPE_PointerToVersionServ__ArrayOfProductVersion (207)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToVersionServ__ArrayOfProductVersion(struct soap*, VersionServ__ArrayOfProductVersion *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToVersionServ__ArrayOfProductVersion(struct soap*, const char *, int, VersionServ__ArrayOfProductVersion *const*, const char *);
SOAP_FMAC3 VersionServ__ArrayOfProductVersion ** SOAP_FMAC4 soap_in_PointerToVersionServ__ArrayOfProductVersion(struct soap*, const char*, VersionServ__ArrayOfProductVersion **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToVersionServ__ArrayOfProductVersion(struct soap*, VersionServ__ArrayOfProductVersion *const*, const char*, const char*);

#ifndef soap_write_PointerToVersionServ__ArrayOfProductVersion
#define soap_write_PointerToVersionServ__ArrayOfProductVersion(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerToVersionServ__ArrayOfProductVersion(soap, data),0) || soap_put_PointerToVersionServ__ArrayOfProductVersion(soap, data, "VersionServ:ArrayOfProductVersion", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 VersionServ__ArrayOfProductVersion ** SOAP_FMAC4 soap_get_PointerToVersionServ__ArrayOfProductVersion(struct soap*, VersionServ__ArrayOfProductVersion **, const char*, const char*);

#ifndef soap_read_PointerToVersionServ__ArrayOfProductVersion
#define soap_read_PointerToVersionServ__ArrayOfProductVersion(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToVersionServ__ArrayOfProductVersion(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerToPointerToVersionServ__DownLoadItem
#define SOAP_TYPE_PointerToPointerToVersionServ__DownLoadItem (206)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToPointerToVersionServ__DownLoadItem(struct soap*, VersionServ__DownLoadItem **const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToPointerToVersionServ__DownLoadItem(struct soap*, const char *, int, VersionServ__DownLoadItem **const*, const char *);
SOAP_FMAC3 VersionServ__DownLoadItem *** SOAP_FMAC4 soap_in_PointerToPointerToVersionServ__DownLoadItem(struct soap*, const char*, VersionServ__DownLoadItem ***, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToPointerToVersionServ__DownLoadItem(struct soap*, VersionServ__DownLoadItem **const*, const char*, const char*);

#ifndef soap_write_PointerToPointerToVersionServ__DownLoadItem
#define soap_write_PointerToPointerToVersionServ__DownLoadItem(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerToPointerToVersionServ__DownLoadItem(soap, data),0) || soap_put_PointerToPointerToVersionServ__DownLoadItem(soap, data, "VersionServ:DownLoadItem", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 VersionServ__DownLoadItem *** SOAP_FMAC4 soap_get_PointerToPointerToVersionServ__DownLoadItem(struct soap*, VersionServ__DownLoadItem ***, const char*, const char*);

#ifndef soap_read_PointerToPointerToVersionServ__DownLoadItem
#define soap_read_PointerToPointerToVersionServ__DownLoadItem(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToPointerToVersionServ__DownLoadItem(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerToVersionServ__DownLoadItem
#define SOAP_TYPE_PointerToVersionServ__DownLoadItem (205)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToVersionServ__DownLoadItem(struct soap*, VersionServ__DownLoadItem *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToVersionServ__DownLoadItem(struct soap*, const char *, int, VersionServ__DownLoadItem *const*, const char *);
SOAP_FMAC3 VersionServ__DownLoadItem ** SOAP_FMAC4 soap_in_PointerToVersionServ__DownLoadItem(struct soap*, const char*, VersionServ__DownLoadItem **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToVersionServ__DownLoadItem(struct soap*, VersionServ__DownLoadItem *const*, const char*, const char*);

#ifndef soap_write_PointerToVersionServ__DownLoadItem
#define soap_write_PointerToVersionServ__DownLoadItem(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerToVersionServ__DownLoadItem(soap, data),0) || soap_put_PointerToVersionServ__DownLoadItem(soap, data, "VersionServ:DownLoadItem", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 VersionServ__DownLoadItem ** SOAP_FMAC4 soap_get_PointerToVersionServ__DownLoadItem(struct soap*, VersionServ__DownLoadItem **, const char*, const char*);

#ifndef soap_read_PointerToVersionServ__DownLoadItem
#define soap_read_PointerToVersionServ__DownLoadItem(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToVersionServ__DownLoadItem(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerToPointerToVersionServ__VersionRevision
#define SOAP_TYPE_PointerToPointerToVersionServ__VersionRevision (204)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToPointerToVersionServ__VersionRevision(struct soap*, VersionServ__VersionRevision **const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToPointerToVersionServ__VersionRevision(struct soap*, const char *, int, VersionServ__VersionRevision **const*, const char *);
SOAP_FMAC3 VersionServ__VersionRevision *** SOAP_FMAC4 soap_in_PointerToPointerToVersionServ__VersionRevision(struct soap*, const char*, VersionServ__VersionRevision ***, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToPointerToVersionServ__VersionRevision(struct soap*, VersionServ__VersionRevision **const*, const char*, const char*);

#ifndef soap_write_PointerToPointerToVersionServ__VersionRevision
#define soap_write_PointerToPointerToVersionServ__VersionRevision(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerToPointerToVersionServ__VersionRevision(soap, data),0) || soap_put_PointerToPointerToVersionServ__VersionRevision(soap, data, "VersionServ:VersionRevision", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 VersionServ__VersionRevision *** SOAP_FMAC4 soap_get_PointerToPointerToVersionServ__VersionRevision(struct soap*, VersionServ__VersionRevision ***, const char*, const char*);

#ifndef soap_read_PointerToPointerToVersionServ__VersionRevision
#define soap_read_PointerToPointerToVersionServ__VersionRevision(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToPointerToVersionServ__VersionRevision(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerToVersionServ__VersionRevision
#define SOAP_TYPE_PointerToVersionServ__VersionRevision (203)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToVersionServ__VersionRevision(struct soap*, VersionServ__VersionRevision *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToVersionServ__VersionRevision(struct soap*, const char *, int, VersionServ__VersionRevision *const*, const char *);
SOAP_FMAC3 VersionServ__VersionRevision ** SOAP_FMAC4 soap_in_PointerToVersionServ__VersionRevision(struct soap*, const char*, VersionServ__VersionRevision **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToVersionServ__VersionRevision(struct soap*, VersionServ__VersionRevision *const*, const char*, const char*);

#ifndef soap_write_PointerToVersionServ__VersionRevision
#define soap_write_PointerToVersionServ__VersionRevision(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerToVersionServ__VersionRevision(soap, data),0) || soap_put_PointerToVersionServ__VersionRevision(soap, data, "VersionServ:VersionRevision", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 VersionServ__VersionRevision ** SOAP_FMAC4 soap_get_PointerToVersionServ__VersionRevision(struct soap*, VersionServ__VersionRevision **, const char*, const char*);

#ifndef soap_read_PointerToVersionServ__VersionRevision
#define soap_read_PointerToVersionServ__VersionRevision(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToVersionServ__VersionRevision(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerToPointerToVersionServ__ProductVersion
#define SOAP_TYPE_PointerToPointerToVersionServ__ProductVersion (201)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToPointerToVersionServ__ProductVersion(struct soap*, VersionServ__ProductVersion **const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToPointerToVersionServ__ProductVersion(struct soap*, const char *, int, VersionServ__ProductVersion **const*, const char *);
SOAP_FMAC3 VersionServ__ProductVersion *** SOAP_FMAC4 soap_in_PointerToPointerToVersionServ__ProductVersion(struct soap*, const char*, VersionServ__ProductVersion ***, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToPointerToVersionServ__ProductVersion(struct soap*, VersionServ__ProductVersion **const*, const char*, const char*);

#ifndef soap_write_PointerToPointerToVersionServ__ProductVersion
#define soap_write_PointerToPointerToVersionServ__ProductVersion(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerToPointerToVersionServ__ProductVersion(soap, data),0) || soap_put_PointerToPointerToVersionServ__ProductVersion(soap, data, "VersionServ:ProductVersion", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 VersionServ__ProductVersion *** SOAP_FMAC4 soap_get_PointerToPointerToVersionServ__ProductVersion(struct soap*, VersionServ__ProductVersion ***, const char*, const char*);

#ifndef soap_read_PointerToPointerToVersionServ__ProductVersion
#define soap_read_PointerToPointerToVersionServ__ProductVersion(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToPointerToVersionServ__ProductVersion(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerToVersionServ__ProductVersion
#define SOAP_TYPE_PointerToVersionServ__ProductVersion (200)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToVersionServ__ProductVersion(struct soap*, VersionServ__ProductVersion *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToVersionServ__ProductVersion(struct soap*, const char *, int, VersionServ__ProductVersion *const*, const char *);
SOAP_FMAC3 VersionServ__ProductVersion ** SOAP_FMAC4 soap_in_PointerToVersionServ__ProductVersion(struct soap*, const char*, VersionServ__ProductVersion **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToVersionServ__ProductVersion(struct soap*, VersionServ__ProductVersion *const*, const char*, const char*);

#ifndef soap_write_PointerToVersionServ__ProductVersion
#define soap_write_PointerToVersionServ__ProductVersion(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerToVersionServ__ProductVersion(soap, data),0) || soap_put_PointerToVersionServ__ProductVersion(soap, data, "VersionServ:ProductVersion", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 VersionServ__ProductVersion ** SOAP_FMAC4 soap_get_PointerToVersionServ__ProductVersion(struct soap*, VersionServ__ProductVersion **, const char*, const char*);

#ifndef soap_read_PointerToVersionServ__ProductVersion
#define soap_read_PointerToVersionServ__ProductVersion(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToVersionServ__ProductVersion(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_TMSServ__CloseFileObjectDataProvider
#define SOAP_TYPE_PointerTo_TMSServ__CloseFileObjectDataProvider (124)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_TMSServ__CloseFileObjectDataProvider(struct soap*, _TMSServ__CloseFileObjectDataProvider *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_TMSServ__CloseFileObjectDataProvider(struct soap*, const char *, int, _TMSServ__CloseFileObjectDataProvider *const*, const char *);
SOAP_FMAC3 _TMSServ__CloseFileObjectDataProvider ** SOAP_FMAC4 soap_in_PointerTo_TMSServ__CloseFileObjectDataProvider(struct soap*, const char*, _TMSServ__CloseFileObjectDataProvider **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_TMSServ__CloseFileObjectDataProvider(struct soap*, _TMSServ__CloseFileObjectDataProvider *const*, const char*, const char*);

#ifndef soap_write_PointerTo_TMSServ__CloseFileObjectDataProvider
#define soap_write_PointerTo_TMSServ__CloseFileObjectDataProvider(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_TMSServ__CloseFileObjectDataProvider(soap, data),0) || soap_put_PointerTo_TMSServ__CloseFileObjectDataProvider(soap, data, "TMSServ:CloseFileObjectDataProvider", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _TMSServ__CloseFileObjectDataProvider ** SOAP_FMAC4 soap_get_PointerTo_TMSServ__CloseFileObjectDataProvider(struct soap*, _TMSServ__CloseFileObjectDataProvider **, const char*, const char*);

#ifndef soap_read_PointerTo_TMSServ__CloseFileObjectDataProvider
#define soap_read_PointerTo_TMSServ__CloseFileObjectDataProvider(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_TMSServ__CloseFileObjectDataProvider(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_TMSServ__DownloadFileObject
#define SOAP_TYPE_PointerTo_TMSServ__DownloadFileObject (120)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_TMSServ__DownloadFileObject(struct soap*, _TMSServ__DownloadFileObject *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_TMSServ__DownloadFileObject(struct soap*, const char *, int, _TMSServ__DownloadFileObject *const*, const char *);
SOAP_FMAC3 _TMSServ__DownloadFileObject ** SOAP_FMAC4 soap_in_PointerTo_TMSServ__DownloadFileObject(struct soap*, const char*, _TMSServ__DownloadFileObject **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_TMSServ__DownloadFileObject(struct soap*, _TMSServ__DownloadFileObject *const*, const char*, const char*);

#ifndef soap_write_PointerTo_TMSServ__DownloadFileObject
#define soap_write_PointerTo_TMSServ__DownloadFileObject(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_TMSServ__DownloadFileObject(soap, data),0) || soap_put_PointerTo_TMSServ__DownloadFileObject(soap, data, "TMSServ:DownloadFileObject", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _TMSServ__DownloadFileObject ** SOAP_FMAC4 soap_get_PointerTo_TMSServ__DownloadFileObject(struct soap*, _TMSServ__DownloadFileObject **, const char*, const char*);

#ifndef soap_read_PointerTo_TMSServ__DownloadFileObject
#define soap_read_PointerTo_TMSServ__DownloadFileObject(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_TMSServ__DownloadFileObject(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_TMSServ__OpenServerObjectDataProvider
#define SOAP_TYPE_PointerTo_TMSServ__OpenServerObjectDataProvider (116)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_TMSServ__OpenServerObjectDataProvider(struct soap*, _TMSServ__OpenServerObjectDataProvider *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_TMSServ__OpenServerObjectDataProvider(struct soap*, const char *, int, _TMSServ__OpenServerObjectDataProvider *const*, const char *);
SOAP_FMAC3 _TMSServ__OpenServerObjectDataProvider ** SOAP_FMAC4 soap_in_PointerTo_TMSServ__OpenServerObjectDataProvider(struct soap*, const char*, _TMSServ__OpenServerObjectDataProvider **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_TMSServ__OpenServerObjectDataProvider(struct soap*, _TMSServ__OpenServerObjectDataProvider *const*, const char*, const char*);

#ifndef soap_write_PointerTo_TMSServ__OpenServerObjectDataProvider
#define soap_write_PointerTo_TMSServ__OpenServerObjectDataProvider(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_TMSServ__OpenServerObjectDataProvider(soap, data),0) || soap_put_PointerTo_TMSServ__OpenServerObjectDataProvider(soap, data, "TMSServ:OpenServerObjectDataProvider", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _TMSServ__OpenServerObjectDataProvider ** SOAP_FMAC4 soap_get_PointerTo_TMSServ__OpenServerObjectDataProvider(struct soap*, _TMSServ__OpenServerObjectDataProvider **, const char*, const char*);

#ifndef soap_read_PointerTo_TMSServ__OpenServerObjectDataProvider
#define soap_read_PointerTo_TMSServ__OpenServerObjectDataProvider(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_TMSServ__OpenServerObjectDataProvider(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_TMSServ__OpenTapModelDataProvider
#define SOAP_TYPE_PointerTo_TMSServ__OpenTapModelDataProvider (112)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_TMSServ__OpenTapModelDataProvider(struct soap*, _TMSServ__OpenTapModelDataProvider *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_TMSServ__OpenTapModelDataProvider(struct soap*, const char *, int, _TMSServ__OpenTapModelDataProvider *const*, const char *);
SOAP_FMAC3 _TMSServ__OpenTapModelDataProvider ** SOAP_FMAC4 soap_in_PointerTo_TMSServ__OpenTapModelDataProvider(struct soap*, const char*, _TMSServ__OpenTapModelDataProvider **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_TMSServ__OpenTapModelDataProvider(struct soap*, _TMSServ__OpenTapModelDataProvider *const*, const char*, const char*);

#ifndef soap_write_PointerTo_TMSServ__OpenTapModelDataProvider
#define soap_write_PointerTo_TMSServ__OpenTapModelDataProvider(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_TMSServ__OpenTapModelDataProvider(soap, data),0) || soap_put_PointerTo_TMSServ__OpenTapModelDataProvider(soap, data, "TMSServ:OpenTapModelDataProvider", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _TMSServ__OpenTapModelDataProvider ** SOAP_FMAC4 soap_get_PointerTo_TMSServ__OpenTapModelDataProvider(struct soap*, _TMSServ__OpenTapModelDataProvider **, const char*, const char*);

#ifndef soap_read_PointerTo_TMSServ__OpenTapModelDataProvider
#define soap_read_PointerTo_TMSServ__OpenTapModelDataProvider(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_TMSServ__OpenTapModelDataProvider(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_TMSServ__OpenFileObjectDataProvider
#define SOAP_TYPE_PointerTo_TMSServ__OpenFileObjectDataProvider (108)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_TMSServ__OpenFileObjectDataProvider(struct soap*, _TMSServ__OpenFileObjectDataProvider *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_TMSServ__OpenFileObjectDataProvider(struct soap*, const char *, int, _TMSServ__OpenFileObjectDataProvider *const*, const char *);
SOAP_FMAC3 _TMSServ__OpenFileObjectDataProvider ** SOAP_FMAC4 soap_in_PointerTo_TMSServ__OpenFileObjectDataProvider(struct soap*, const char*, _TMSServ__OpenFileObjectDataProvider **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_TMSServ__OpenFileObjectDataProvider(struct soap*, _TMSServ__OpenFileObjectDataProvider *const*, const char*, const char*);

#ifndef soap_write_PointerTo_TMSServ__OpenFileObjectDataProvider
#define soap_write_PointerTo_TMSServ__OpenFileObjectDataProvider(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_TMSServ__OpenFileObjectDataProvider(soap, data),0) || soap_put_PointerTo_TMSServ__OpenFileObjectDataProvider(soap, data, "TMSServ:OpenFileObjectDataProvider", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _TMSServ__OpenFileObjectDataProvider ** SOAP_FMAC4 soap_get_PointerTo_TMSServ__OpenFileObjectDataProvider(struct soap*, _TMSServ__OpenFileObjectDataProvider **, const char*, const char*);

#ifndef soap_read_PointerTo_TMSServ__OpenFileObjectDataProvider
#define soap_read_PointerTo_TMSServ__OpenFileObjectDataProvider(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_TMSServ__OpenFileObjectDataProvider(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_TMSServ__FinalizeFileObjectData
#define SOAP_TYPE_PointerTo_TMSServ__FinalizeFileObjectData (104)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_TMSServ__FinalizeFileObjectData(struct soap*, _TMSServ__FinalizeFileObjectData *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_TMSServ__FinalizeFileObjectData(struct soap*, const char *, int, _TMSServ__FinalizeFileObjectData *const*, const char *);
SOAP_FMAC3 _TMSServ__FinalizeFileObjectData ** SOAP_FMAC4 soap_in_PointerTo_TMSServ__FinalizeFileObjectData(struct soap*, const char*, _TMSServ__FinalizeFileObjectData **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_TMSServ__FinalizeFileObjectData(struct soap*, _TMSServ__FinalizeFileObjectData *const*, const char*, const char*);

#ifndef soap_write_PointerTo_TMSServ__FinalizeFileObjectData
#define soap_write_PointerTo_TMSServ__FinalizeFileObjectData(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_TMSServ__FinalizeFileObjectData(soap, data),0) || soap_put_PointerTo_TMSServ__FinalizeFileObjectData(soap, data, "TMSServ:FinalizeFileObjectData", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _TMSServ__FinalizeFileObjectData ** SOAP_FMAC4 soap_get_PointerTo_TMSServ__FinalizeFileObjectData(struct soap*, _TMSServ__FinalizeFileObjectData **, const char*, const char*);

#ifndef soap_read_PointerTo_TMSServ__FinalizeFileObjectData
#define soap_read_PointerTo_TMSServ__FinalizeFileObjectData(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_TMSServ__FinalizeFileObjectData(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_TMSServ__UploadFileObject
#define SOAP_TYPE_PointerTo_TMSServ__UploadFileObject (100)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_TMSServ__UploadFileObject(struct soap*, _TMSServ__UploadFileObject *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_TMSServ__UploadFileObject(struct soap*, const char *, int, _TMSServ__UploadFileObject *const*, const char *);
SOAP_FMAC3 _TMSServ__UploadFileObject ** SOAP_FMAC4 soap_in_PointerTo_TMSServ__UploadFileObject(struct soap*, const char*, _TMSServ__UploadFileObject **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_TMSServ__UploadFileObject(struct soap*, _TMSServ__UploadFileObject *const*, const char*, const char*);

#ifndef soap_write_PointerTo_TMSServ__UploadFileObject
#define soap_write_PointerTo_TMSServ__UploadFileObject(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_TMSServ__UploadFileObject(soap, data),0) || soap_put_PointerTo_TMSServ__UploadFileObject(soap, data, "TMSServ:UploadFileObject", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _TMSServ__UploadFileObject ** SOAP_FMAC4 soap_get_PointerTo_TMSServ__UploadFileObject(struct soap*, _TMSServ__UploadFileObject **, const char*, const char*);

#ifndef soap_read_PointerTo_TMSServ__UploadFileObject
#define soap_read_PointerTo_TMSServ__UploadFileObject(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_TMSServ__UploadFileObject(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_TMSServ__DownloadFileById
#define SOAP_TYPE_PointerTo_TMSServ__DownloadFileById (96)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_TMSServ__DownloadFileById(struct soap*, _TMSServ__DownloadFileById *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_TMSServ__DownloadFileById(struct soap*, const char *, int, _TMSServ__DownloadFileById *const*, const char *);
SOAP_FMAC3 _TMSServ__DownloadFileById ** SOAP_FMAC4 soap_in_PointerTo_TMSServ__DownloadFileById(struct soap*, const char*, _TMSServ__DownloadFileById **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_TMSServ__DownloadFileById(struct soap*, _TMSServ__DownloadFileById *const*, const char*, const char*);

#ifndef soap_write_PointerTo_TMSServ__DownloadFileById
#define soap_write_PointerTo_TMSServ__DownloadFileById(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_TMSServ__DownloadFileById(soap, data),0) || soap_put_PointerTo_TMSServ__DownloadFileById(soap, data, "TMSServ:DownloadFileById", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _TMSServ__DownloadFileById ** SOAP_FMAC4 soap_get_PointerTo_TMSServ__DownloadFileById(struct soap*, _TMSServ__DownloadFileById **, const char*, const char*);

#ifndef soap_read_PointerTo_TMSServ__DownloadFileById
#define soap_read_PointerTo_TMSServ__DownloadFileById(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_TMSServ__DownloadFileById(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_TMSServ__DeleteObject
#define SOAP_TYPE_PointerTo_TMSServ__DeleteObject (92)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_TMSServ__DeleteObject(struct soap*, _TMSServ__DeleteObject *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_TMSServ__DeleteObject(struct soap*, const char *, int, _TMSServ__DeleteObject *const*, const char *);
SOAP_FMAC3 _TMSServ__DeleteObject ** SOAP_FMAC4 soap_in_PointerTo_TMSServ__DeleteObject(struct soap*, const char*, _TMSServ__DeleteObject **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_TMSServ__DeleteObject(struct soap*, _TMSServ__DeleteObject *const*, const char*, const char*);

#ifndef soap_write_PointerTo_TMSServ__DeleteObject
#define soap_write_PointerTo_TMSServ__DeleteObject(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_TMSServ__DeleteObject(soap, data),0) || soap_put_PointerTo_TMSServ__DeleteObject(soap, data, "TMSServ:DeleteObject", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _TMSServ__DeleteObject ** SOAP_FMAC4 soap_get_PointerTo_TMSServ__DeleteObject(struct soap*, _TMSServ__DeleteObject **, const char*, const char*);

#ifndef soap_read_PointerTo_TMSServ__DeleteObject
#define soap_read_PointerTo_TMSServ__DeleteObject(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_TMSServ__DeleteObject(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_TMSServ__SaveOrUpdateObjects
#define SOAP_TYPE_PointerTo_TMSServ__SaveOrUpdateObjects (88)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_TMSServ__SaveOrUpdateObjects(struct soap*, _TMSServ__SaveOrUpdateObjects *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_TMSServ__SaveOrUpdateObjects(struct soap*, const char *, int, _TMSServ__SaveOrUpdateObjects *const*, const char *);
SOAP_FMAC3 _TMSServ__SaveOrUpdateObjects ** SOAP_FMAC4 soap_in_PointerTo_TMSServ__SaveOrUpdateObjects(struct soap*, const char*, _TMSServ__SaveOrUpdateObjects **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_TMSServ__SaveOrUpdateObjects(struct soap*, _TMSServ__SaveOrUpdateObjects *const*, const char*, const char*);

#ifndef soap_write_PointerTo_TMSServ__SaveOrUpdateObjects
#define soap_write_PointerTo_TMSServ__SaveOrUpdateObjects(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_TMSServ__SaveOrUpdateObjects(soap, data),0) || soap_put_PointerTo_TMSServ__SaveOrUpdateObjects(soap, data, "TMSServ:SaveOrUpdateObjects", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _TMSServ__SaveOrUpdateObjects ** SOAP_FMAC4 soap_get_PointerTo_TMSServ__SaveOrUpdateObjects(struct soap*, _TMSServ__SaveOrUpdateObjects **, const char*, const char*);

#ifndef soap_read_PointerTo_TMSServ__SaveOrUpdateObjects
#define soap_read_PointerTo_TMSServ__SaveOrUpdateObjects(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_TMSServ__SaveOrUpdateObjects(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_TMSServ__MatchTowerParts
#define SOAP_TYPE_PointerTo_TMSServ__MatchTowerParts (84)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_TMSServ__MatchTowerParts(struct soap*, _TMSServ__MatchTowerParts *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_TMSServ__MatchTowerParts(struct soap*, const char *, int, _TMSServ__MatchTowerParts *const*, const char *);
SOAP_FMAC3 _TMSServ__MatchTowerParts ** SOAP_FMAC4 soap_in_PointerTo_TMSServ__MatchTowerParts(struct soap*, const char*, _TMSServ__MatchTowerParts **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_TMSServ__MatchTowerParts(struct soap*, _TMSServ__MatchTowerParts *const*, const char*, const char*);

#ifndef soap_write_PointerTo_TMSServ__MatchTowerParts
#define soap_write_PointerTo_TMSServ__MatchTowerParts(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_TMSServ__MatchTowerParts(soap, data),0) || soap_put_PointerTo_TMSServ__MatchTowerParts(soap, data, "TMSServ:MatchTowerParts", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _TMSServ__MatchTowerParts ** SOAP_FMAC4 soap_get_PointerTo_TMSServ__MatchTowerParts(struct soap*, _TMSServ__MatchTowerParts **, const char*, const char*);

#ifndef soap_read_PointerTo_TMSServ__MatchTowerParts
#define soap_read_PointerTo_TMSServ__MatchTowerParts(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_TMSServ__MatchTowerParts(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_TMSServ__GetTowerPartsLabelAndVersionSerial
#define SOAP_TYPE_PointerTo_TMSServ__GetTowerPartsLabelAndVersionSerial (80)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_TMSServ__GetTowerPartsLabelAndVersionSerial(struct soap*, _TMSServ__GetTowerPartsLabelAndVersionSerial *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_TMSServ__GetTowerPartsLabelAndVersionSerial(struct soap*, const char *, int, _TMSServ__GetTowerPartsLabelAndVersionSerial *const*, const char *);
SOAP_FMAC3 _TMSServ__GetTowerPartsLabelAndVersionSerial ** SOAP_FMAC4 soap_in_PointerTo_TMSServ__GetTowerPartsLabelAndVersionSerial(struct soap*, const char*, _TMSServ__GetTowerPartsLabelAndVersionSerial **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_TMSServ__GetTowerPartsLabelAndVersionSerial(struct soap*, _TMSServ__GetTowerPartsLabelAndVersionSerial *const*, const char*, const char*);

#ifndef soap_write_PointerTo_TMSServ__GetTowerPartsLabelAndVersionSerial
#define soap_write_PointerTo_TMSServ__GetTowerPartsLabelAndVersionSerial(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_TMSServ__GetTowerPartsLabelAndVersionSerial(soap, data),0) || soap_put_PointerTo_TMSServ__GetTowerPartsLabelAndVersionSerial(soap, data, "TMSServ:GetTowerPartsLabelAndVersionSerial", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _TMSServ__GetTowerPartsLabelAndVersionSerial ** SOAP_FMAC4 soap_get_PointerTo_TMSServ__GetTowerPartsLabelAndVersionSerial(struct soap*, _TMSServ__GetTowerPartsLabelAndVersionSerial **, const char*, const char*);

#ifndef soap_read_PointerTo_TMSServ__GetTowerPartsLabelAndVersionSerial
#define soap_read_PointerTo_TMSServ__GetTowerPartsLabelAndVersionSerial(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_TMSServ__GetTowerPartsLabelAndVersionSerial(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_TMSServ__GetObjectsVersion
#define SOAP_TYPE_PointerTo_TMSServ__GetObjectsVersion (76)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_TMSServ__GetObjectsVersion(struct soap*, _TMSServ__GetObjectsVersion *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_TMSServ__GetObjectsVersion(struct soap*, const char *, int, _TMSServ__GetObjectsVersion *const*, const char *);
SOAP_FMAC3 _TMSServ__GetObjectsVersion ** SOAP_FMAC4 soap_in_PointerTo_TMSServ__GetObjectsVersion(struct soap*, const char*, _TMSServ__GetObjectsVersion **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_TMSServ__GetObjectsVersion(struct soap*, _TMSServ__GetObjectsVersion *const*, const char*, const char*);

#ifndef soap_write_PointerTo_TMSServ__GetObjectsVersion
#define soap_write_PointerTo_TMSServ__GetObjectsVersion(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_TMSServ__GetObjectsVersion(soap, data),0) || soap_put_PointerTo_TMSServ__GetObjectsVersion(soap, data, "TMSServ:GetObjectsVersion", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _TMSServ__GetObjectsVersion ** SOAP_FMAC4 soap_get_PointerTo_TMSServ__GetObjectsVersion(struct soap*, _TMSServ__GetObjectsVersion **, const char*, const char*);

#ifndef soap_read_PointerTo_TMSServ__GetObjectsVersion
#define soap_read_PointerTo_TMSServ__GetObjectsVersion(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_TMSServ__GetObjectsVersion(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_TMSServ__DownloadObjects
#define SOAP_TYPE_PointerTo_TMSServ__DownloadObjects (72)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_TMSServ__DownloadObjects(struct soap*, _TMSServ__DownloadObjects *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_TMSServ__DownloadObjects(struct soap*, const char *, int, _TMSServ__DownloadObjects *const*, const char *);
SOAP_FMAC3 _TMSServ__DownloadObjects ** SOAP_FMAC4 soap_in_PointerTo_TMSServ__DownloadObjects(struct soap*, const char*, _TMSServ__DownloadObjects **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_TMSServ__DownloadObjects(struct soap*, _TMSServ__DownloadObjects *const*, const char*, const char*);

#ifndef soap_write_PointerTo_TMSServ__DownloadObjects
#define soap_write_PointerTo_TMSServ__DownloadObjects(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_TMSServ__DownloadObjects(soap, data),0) || soap_put_PointerTo_TMSServ__DownloadObjects(soap, data, "TMSServ:DownloadObjects", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _TMSServ__DownloadObjects ** SOAP_FMAC4 soap_get_PointerTo_TMSServ__DownloadObjects(struct soap*, _TMSServ__DownloadObjects **, const char*, const char*);

#ifndef soap_read_PointerTo_TMSServ__DownloadObjects
#define soap_read_PointerTo_TMSServ__DownloadObjects(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_TMSServ__DownloadObjects(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_TMSServ__QueryObjects
#define SOAP_TYPE_PointerTo_TMSServ__QueryObjects (68)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_TMSServ__QueryObjects(struct soap*, _TMSServ__QueryObjects *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_TMSServ__QueryObjects(struct soap*, const char *, int, _TMSServ__QueryObjects *const*, const char *);
SOAP_FMAC3 _TMSServ__QueryObjects ** SOAP_FMAC4 soap_in_PointerTo_TMSServ__QueryObjects(struct soap*, const char*, _TMSServ__QueryObjects **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_TMSServ__QueryObjects(struct soap*, _TMSServ__QueryObjects *const*, const char*, const char*);

#ifndef soap_write_PointerTo_TMSServ__QueryObjects
#define soap_write_PointerTo_TMSServ__QueryObjects(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_TMSServ__QueryObjects(soap, data),0) || soap_put_PointerTo_TMSServ__QueryObjects(soap, data, "TMSServ:QueryObjects", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _TMSServ__QueryObjects ** SOAP_FMAC4 soap_get_PointerTo_TMSServ__QueryObjects(struct soap*, _TMSServ__QueryObjects **, const char*, const char*);

#ifndef soap_read_PointerTo_TMSServ__QueryObjects
#define soap_read_PointerTo_TMSServ__QueryObjects(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_TMSServ__QueryObjects(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_TMSServ__logoutUser
#define SOAP_TYPE_PointerTo_TMSServ__logoutUser (64)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_TMSServ__logoutUser(struct soap*, _TMSServ__logoutUser *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_TMSServ__logoutUser(struct soap*, const char *, int, _TMSServ__logoutUser *const*, const char *);
SOAP_FMAC3 _TMSServ__logoutUser ** SOAP_FMAC4 soap_in_PointerTo_TMSServ__logoutUser(struct soap*, const char*, _TMSServ__logoutUser **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_TMSServ__logoutUser(struct soap*, _TMSServ__logoutUser *const*, const char*, const char*);

#ifndef soap_write_PointerTo_TMSServ__logoutUser
#define soap_write_PointerTo_TMSServ__logoutUser(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_TMSServ__logoutUser(soap, data),0) || soap_put_PointerTo_TMSServ__logoutUser(soap, data, "TMSServ:logoutUser", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _TMSServ__logoutUser ** SOAP_FMAC4 soap_get_PointerTo_TMSServ__logoutUser(struct soap*, _TMSServ__logoutUser **, const char*, const char*);

#ifndef soap_read_PointerTo_TMSServ__logoutUser
#define soap_read_PointerTo_TMSServ__logoutUser(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_TMSServ__logoutUser(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_TMSServ__loginUserByByteArr
#define SOAP_TYPE_PointerTo_TMSServ__loginUserByByteArr (60)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_TMSServ__loginUserByByteArr(struct soap*, _TMSServ__loginUserByByteArr *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_TMSServ__loginUserByByteArr(struct soap*, const char *, int, _TMSServ__loginUserByByteArr *const*, const char *);
SOAP_FMAC3 _TMSServ__loginUserByByteArr ** SOAP_FMAC4 soap_in_PointerTo_TMSServ__loginUserByByteArr(struct soap*, const char*, _TMSServ__loginUserByByteArr **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_TMSServ__loginUserByByteArr(struct soap*, _TMSServ__loginUserByByteArr *const*, const char*, const char*);

#ifndef soap_write_PointerTo_TMSServ__loginUserByByteArr
#define soap_write_PointerTo_TMSServ__loginUserByByteArr(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_TMSServ__loginUserByByteArr(soap, data),0) || soap_put_PointerTo_TMSServ__loginUserByByteArr(soap, data, "TMSServ:loginUserByByteArr", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _TMSServ__loginUserByByteArr ** SOAP_FMAC4 soap_get_PointerTo_TMSServ__loginUserByByteArr(struct soap*, _TMSServ__loginUserByByteArr **, const char*, const char*);

#ifndef soap_read_PointerTo_TMSServ__loginUserByByteArr
#define soap_read_PointerTo_TMSServ__loginUserByByteArr(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_TMSServ__loginUserByByteArr(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_TMSServ__loginUser
#define SOAP_TYPE_PointerTo_TMSServ__loginUser (56)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_TMSServ__loginUser(struct soap*, _TMSServ__loginUser *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_TMSServ__loginUser(struct soap*, const char *, int, _TMSServ__loginUser *const*, const char *);
SOAP_FMAC3 _TMSServ__loginUser ** SOAP_FMAC4 soap_in_PointerTo_TMSServ__loginUser(struct soap*, const char*, _TMSServ__loginUser **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_TMSServ__loginUser(struct soap*, _TMSServ__loginUser *const*, const char*, const char*);

#ifndef soap_write_PointerTo_TMSServ__loginUser
#define soap_write_PointerTo_TMSServ__loginUser(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_TMSServ__loginUser(soap, data),0) || soap_put_PointerTo_TMSServ__loginUser(soap, data, "TMSServ:loginUser", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _TMSServ__loginUser ** SOAP_FMAC4 soap_get_PointerTo_TMSServ__loginUser(struct soap*, _TMSServ__loginUser **, const char*, const char*);

#ifndef soap_read_PointerTo_TMSServ__loginUser
#define soap_read_PointerTo_TMSServ__loginUser(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_TMSServ__loginUser(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerToTMSServ__ArrayOfUnsignedInt
#define SOAP_TYPE_PointerToTMSServ__ArrayOfUnsignedInt (54)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToTMSServ__ArrayOfUnsignedInt(struct soap*, TMSServ__ArrayOfUnsignedInt *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToTMSServ__ArrayOfUnsignedInt(struct soap*, const char *, int, TMSServ__ArrayOfUnsignedInt *const*, const char *);
SOAP_FMAC3 TMSServ__ArrayOfUnsignedInt ** SOAP_FMAC4 soap_in_PointerToTMSServ__ArrayOfUnsignedInt(struct soap*, const char*, TMSServ__ArrayOfUnsignedInt **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToTMSServ__ArrayOfUnsignedInt(struct soap*, TMSServ__ArrayOfUnsignedInt *const*, const char*, const char*);

#ifndef soap_write_PointerToTMSServ__ArrayOfUnsignedInt
#define soap_write_PointerToTMSServ__ArrayOfUnsignedInt(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerToTMSServ__ArrayOfUnsignedInt(soap, data),0) || soap_put_PointerToTMSServ__ArrayOfUnsignedInt(soap, data, "TMSServ:ArrayOfUnsignedInt", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 TMSServ__ArrayOfUnsignedInt ** SOAP_FMAC4 soap_get_PointerToTMSServ__ArrayOfUnsignedInt(struct soap*, TMSServ__ArrayOfUnsignedInt **, const char*, const char*);

#ifndef soap_read_PointerToTMSServ__ArrayOfUnsignedInt
#define soap_read_PointerToTMSServ__ArrayOfUnsignedInt(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToTMSServ__ArrayOfUnsignedInt(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerToTMSServ__ArrayOfInt
#define SOAP_TYPE_PointerToTMSServ__ArrayOfInt (53)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToTMSServ__ArrayOfInt(struct soap*, TMSServ__ArrayOfInt *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToTMSServ__ArrayOfInt(struct soap*, const char *, int, TMSServ__ArrayOfInt *const*, const char *);
SOAP_FMAC3 TMSServ__ArrayOfInt ** SOAP_FMAC4 soap_in_PointerToTMSServ__ArrayOfInt(struct soap*, const char*, TMSServ__ArrayOfInt **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToTMSServ__ArrayOfInt(struct soap*, TMSServ__ArrayOfInt *const*, const char*, const char*);

#ifndef soap_write_PointerToTMSServ__ArrayOfInt
#define soap_write_PointerToTMSServ__ArrayOfInt(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerToTMSServ__ArrayOfInt(soap, data),0) || soap_put_PointerToTMSServ__ArrayOfInt(soap, data, "TMSServ:ArrayOfInt", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 TMSServ__ArrayOfInt ** SOAP_FMAC4 soap_get_PointerToTMSServ__ArrayOfInt(struct soap*, TMSServ__ArrayOfInt **, const char*, const char*);

#ifndef soap_read_PointerToTMSServ__ArrayOfInt
#define soap_read_PointerToTMSServ__ArrayOfInt(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToTMSServ__ArrayOfInt(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerToxsd__base64Binary
#define SOAP_TYPE_PointerToxsd__base64Binary (52)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToxsd__base64Binary(struct soap*, xsd__base64Binary *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToxsd__base64Binary(struct soap*, const char *, int, xsd__base64Binary *const*, const char *);
SOAP_FMAC3 xsd__base64Binary ** SOAP_FMAC4 soap_in_PointerToxsd__base64Binary(struct soap*, const char*, xsd__base64Binary **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToxsd__base64Binary(struct soap*, xsd__base64Binary *const*, const char*, const char*);

#ifndef soap_write_PointerToxsd__base64Binary
#define soap_write_PointerToxsd__base64Binary(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerToxsd__base64Binary(soap, data),0) || soap_put_PointerToxsd__base64Binary(soap, data, "xsd:base64Binary", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 xsd__base64Binary ** SOAP_FMAC4 soap_get_PointerToxsd__base64Binary(struct soap*, xsd__base64Binary **, const char*, const char*);

#ifndef soap_read_PointerToxsd__base64Binary
#define soap_read_PointerToxsd__base64Binary(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToxsd__base64Binary(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTounsignedInt
#define SOAP_TYPE_PointerTounsignedInt (51)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTounsignedInt(struct soap*, unsigned int *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTounsignedInt(struct soap*, const char *, int, unsigned int *const*, const char *);
SOAP_FMAC3 unsigned int ** SOAP_FMAC4 soap_in_PointerTounsignedInt(struct soap*, const char*, unsigned int **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTounsignedInt(struct soap*, unsigned int *const*, const char*, const char*);

#ifndef soap_write_PointerTounsignedInt
#define soap_write_PointerTounsignedInt(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTounsignedInt(soap, data),0) || soap_put_PointerTounsignedInt(soap, data, "unsignedInt", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 unsigned int ** SOAP_FMAC4 soap_get_PointerTounsignedInt(struct soap*, unsigned int **, const char*, const char*);

#ifndef soap_read_PointerTounsignedInt
#define soap_read_PointerTounsignedInt(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTounsignedInt(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerToint
#define SOAP_TYPE_PointerToint (50)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToint(struct soap*, int *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToint(struct soap*, const char *, int, int *const*, const char *);
SOAP_FMAC3 int ** SOAP_FMAC4 soap_in_PointerToint(struct soap*, const char*, int **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToint(struct soap*, int *const*, const char*, const char*);

#ifndef soap_write_PointerToint
#define soap_write_PointerToint(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerToint(soap, data),0) || soap_put_PointerToint(soap, data, "int", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 int ** SOAP_FMAC4 soap_get_PointerToint(struct soap*, int **, const char*, const char*);

#ifndef soap_read_PointerToint
#define soap_read_PointerToint(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToint(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTounsignedByte
#define SOAP_TYPE_PointerTounsignedByte (10)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTounsignedByte(struct soap*, unsigned char *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTounsignedByte(struct soap*, const char *, int, unsigned char *const*, const char *);
SOAP_FMAC3 unsigned char ** SOAP_FMAC4 soap_in_PointerTounsignedByte(struct soap*, const char*, unsigned char **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTounsignedByte(struct soap*, unsigned char *const*, const char*, const char*);

#ifndef soap_write_PointerTounsignedByte
#define soap_write_PointerTounsignedByte(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTounsignedByte(soap, data),0) || soap_put_PointerTounsignedByte(soap, data, "unsignedByte", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 unsigned char ** SOAP_FMAC4 soap_get_PointerTounsignedByte(struct soap*, unsigned char **, const char*, const char*);

#ifndef soap_read_PointerTounsignedByte
#define soap_read_PointerTounsignedByte(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTounsignedByte(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__QName
#define SOAP_TYPE__QName (5)
#endif

#define soap_default__QName(soap, a) soap_default_string(soap, a)

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__QName(struct soap*, char *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__QName(struct soap*, const char*, int, char*const*, const char*);
SOAP_FMAC3 char * * SOAP_FMAC4 soap_in__QName(struct soap*, const char*, char **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__QName(struct soap*, char *const*, const char*, const char*);

#ifndef soap_write__QName
#define soap_write__QName(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__QName(soap, data),0) || soap_put__QName(soap, data, "byte", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 char ** SOAP_FMAC4 soap_get__QName(struct soap*, char **, const char*, const char*);

#ifndef soap_read__QName
#define soap_read__QName(soap, data) ( soap_begin_recv(soap) || !soap_get__QName(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_string
#define SOAP_TYPE_string (4)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_string(struct soap*, char **);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_string(struct soap*, char *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_string(struct soap*, const char*, int, char*const*, const char*);
SOAP_FMAC3 char * * SOAP_FMAC4 soap_in_string(struct soap*, const char*, char **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_string(struct soap*, char *const*, const char*, const char*);

#ifndef soap_write_string
#define soap_write_string(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_string(soap, data),0) || soap_put_string(soap, data, "byte", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 char ** SOAP_FMAC4 soap_get_string(struct soap*, char **, const char*, const char*);

#ifndef soap_read_string
#define soap_read_string(soap, data) ( soap_begin_recv(soap) || !soap_get_string(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#endif

/* End of soapH.h */
