/* d:\Structure\!ClientServTemp\TmsServer.h
   Generated by wsdl2h 2.8.19 from http://localhost/TMSServ/TmsService.asmx?wsdl and typemap.dat
   2018-11-02 06:57:40 GMT

   DO NOT INCLUDE THIS FILE DIRECTLY INTO YOUR PROJECT BUILDS
   USE THE soapcpp2-GENERATED SOURCE CODE FILES FOR YOUR PROJECT BUILDS

   gSOAP XML Web services tools.
   Copyright (C) 2000-2014 Robert van Engelen, Genivia Inc. All Rights Reserved.
   Part of this software is released under one of the following licenses:
   GPL or Genivia's license for commercial use.
*/

/** @page page_notes Notes

@note HINTS:
 - Run soapcpp2 on d:\Structure\!ClientServTemp\TmsServer.h to generate the SOAP/XML processing logic.
   Use soapcpp2 -I to specify paths for #import
   To build with STL, 'stlvector.h' is imported from 'import' dir in package.
   Use soapcpp2 -j to generate improved proxy and server classes.
 - Use wsdl2h -c and -s to generate pure C code or C++ code without STL.
 - Use 'typemap.dat' to control namespace bindings and type mappings.
   It is strongly recommended to customize the names of the namespace prefixes
   generated by wsdl2h. To do so, modify the prefix bindings in the Namespaces
   section below and add the modified lines to 'typemap.dat' to rerun wsdl2h.
 - Use Doxygen (www.doxygen.org) on this file to generate documentation.
 - Use wsdl2h -R to generate REST operations.
 - Use wsdl2h -nname to use name as the base namespace prefix instead of 'ns'.
 - Use wsdl2h -Nname for service prefix and produce multiple service bindings
 - Use wsdl2h -d to enable DOM support for xsd:anyType.
 - Use wsdl2h -g to auto-generate readers and writers for root elements.
 - Use wsdl2h -b to auto-generate bi-directional operations (duplex ops).
 - Struct/class members serialized as XML attributes are annotated with a '@'.
 - Struct/class members that have a special role are annotated with a '$'.

@warning
   DO NOT INCLUDE THIS ANNOTATED FILE DIRECTLY IN YOUR PROJECT SOURCE CODE.
   USE THE FILES GENERATED BY soapcpp2 FOR YOUR PROJECT'S SOURCE CODE:
   THE soapStub.h FILE CONTAINS THIS CONTENT WITHOUT ANNOTATIONS.

@copyright LICENSE:
@verbatim
--------------------------------------------------------------------------------
gSOAP XML Web services tools
Copyright (C) 2000-2014, Robert van Engelen, Genivia Inc. All Rights Reserved.

This software is released under one of the following licenses:
GPL or Genivia's license for commercial use.
--------------------------------------------------------------------------------
GPL license.

This program is free software; you can redistribute it and/or modify it under
the terms of the GNU General Public License as published by the Free Software
Foundation; either version 2 of the License, or (at your option) any later
version.

This program is distributed in the hope that it will be useful, but WITHOUT ANY
WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
PARTICULAR PURPOSE. See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with
this program; if not, write to the Free Software Foundation, Inc., 59 Temple
Place, Suite 330, Boston, MA 02111-1307 USA

Author contact information:
engelen@genivia.com / engelen@acm.org

This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
--------------------------------------------------------------------------------
A commercial-use license is available from Genivia, Inc., contact@genivia.com
--------------------------------------------------------------------------------
@endverbatim

*/


//gsoapopt w

/******************************************************************************\
 *                                                                            *
 * Definitions                                                                *
 *   http://xerofox.com/TMSService/                                           *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Import                                                                     *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Namespaces                                                          *
 *                                                                            *
\******************************************************************************/


/* NOTE:

It is strongly recommended to customize the names of the namespace prefixes
generated by wsdl2h. To do so, modify the prefix bindings below and add the
modified lines to typemap.dat to rerun wsdl2h:

TMSServ = "http://xerofox.com/TMSService/"

*/

#define SOAP_NAMESPACE_OF_TMSServ	"http://xerofox.com/TMSService/"
//gsoap TMSServ schema namespace:	http://xerofox.com/TMSService/
//gsoap TMSServ schema elementForm:	qualified
//gsoap TMSServ schema attributeForm:	unqualified

/******************************************************************************\
 *                                                                            *
 * Built-in Schema Types and Top-Level Elements and Attributes                *
 *                                                                            *
\******************************************************************************/

/// Built-in XSD type "xs:base64Binary".
class xsd__base64Binary
{	unsigned char *__ptr;
	int __size;
	char *id, *type, *options; // NOTE: non-NULL for DIMEM/MIME/MTOM XOP attachments only
	struct soap *soap;
};


/******************************************************************************\
 *                                                                            *
 * Forward Declarations                                                       *
 *                                                                            *
\******************************************************************************/


//  Forward declaration of class TMSServ__ArrayOfInt.
class TMSServ__ArrayOfInt;

//  Forward declaration of class TMSServ__ArrayOfUnsignedInt.
class TMSServ__ArrayOfUnsignedInt;

//  Forward declaration of class _TMSServ__loginUser.
class _TMSServ__loginUser;

//  Forward declaration of class _TMSServ__loginUserResponse.
class _TMSServ__loginUserResponse;

//  Forward declaration of class _TMSServ__loginUserByByteArr.
class _TMSServ__loginUserByByteArr;

//  Forward declaration of class _TMSServ__loginUserByByteArrResponse.
class _TMSServ__loginUserByByteArrResponse;

//  Forward declaration of class _TMSServ__logoutUser.
class _TMSServ__logoutUser;

//  Forward declaration of class _TMSServ__logoutUserResponse.
class _TMSServ__logoutUserResponse;

//  Forward declaration of class _TMSServ__QueryObjects.
class _TMSServ__QueryObjects;

//  Forward declaration of class _TMSServ__QueryObjectsResponse.
class _TMSServ__QueryObjectsResponse;

//  Forward declaration of class _TMSServ__DownloadObjects.
class _TMSServ__DownloadObjects;

//  Forward declaration of class _TMSServ__DownloadObjectsResponse.
class _TMSServ__DownloadObjectsResponse;

//  Forward declaration of class _TMSServ__GetObjectsVersion.
class _TMSServ__GetObjectsVersion;

//  Forward declaration of class _TMSServ__GetObjectsVersionResponse.
class _TMSServ__GetObjectsVersionResponse;

//  Forward declaration of class _TMSServ__GetTowerPartsLabelAndVersionSerial.
class _TMSServ__GetTowerPartsLabelAndVersionSerial;

//  Forward declaration of class _TMSServ__GetTowerPartsLabelAndVersionSerialResponse.
class _TMSServ__GetTowerPartsLabelAndVersionSerialResponse;

//  Forward declaration of class _TMSServ__MatchTowerParts.
class _TMSServ__MatchTowerParts;

//  Forward declaration of class _TMSServ__MatchTowerPartsResponse.
class _TMSServ__MatchTowerPartsResponse;

//  Forward declaration of class _TMSServ__SaveOrUpdateObjects.
class _TMSServ__SaveOrUpdateObjects;

//  Forward declaration of class _TMSServ__SaveOrUpdateObjectsResponse.
class _TMSServ__SaveOrUpdateObjectsResponse;

//  Forward declaration of class _TMSServ__DeleteObject.
class _TMSServ__DeleteObject;

//  Forward declaration of class _TMSServ__DeleteObjectResponse.
class _TMSServ__DeleteObjectResponse;

//  Forward declaration of class _TMSServ__DownloadFileById.
class _TMSServ__DownloadFileById;

//  Forward declaration of class _TMSServ__DownloadFileByIdResponse.
class _TMSServ__DownloadFileByIdResponse;

//  Forward declaration of class _TMSServ__UploadFileObject.
class _TMSServ__UploadFileObject;

//  Forward declaration of class _TMSServ__UploadFileObjectResponse.
class _TMSServ__UploadFileObjectResponse;

//  Forward declaration of class _TMSServ__FinalizeFileObjectData.
class _TMSServ__FinalizeFileObjectData;

//  Forward declaration of class _TMSServ__FinalizeFileObjectDataResponse.
class _TMSServ__FinalizeFileObjectDataResponse;

//  Forward declaration of class _TMSServ__OpenFileObjectDataProvider.
class _TMSServ__OpenFileObjectDataProvider;

//  Forward declaration of class _TMSServ__OpenFileObjectDataProviderResponse.
class _TMSServ__OpenFileObjectDataProviderResponse;

//  Forward declaration of class _TMSServ__OpenTapModelDataProvider.
class _TMSServ__OpenTapModelDataProvider;

//  Forward declaration of class _TMSServ__OpenTapModelDataProviderResponse.
class _TMSServ__OpenTapModelDataProviderResponse;

//  Forward declaration of class _TMSServ__OpenServerObjectDataProvider.
class _TMSServ__OpenServerObjectDataProvider;

//  Forward declaration of class _TMSServ__OpenServerObjectDataProviderResponse.
class _TMSServ__OpenServerObjectDataProviderResponse;

//  Forward declaration of class _TMSServ__DownloadFileObject.
class _TMSServ__DownloadFileObject;

//  Forward declaration of class _TMSServ__DownloadFileObjectResponse.
class _TMSServ__DownloadFileObjectResponse;

//  Forward declaration of class _TMSServ__CloseFileObjectDataProvider.
class _TMSServ__CloseFileObjectDataProvider;

//  Forward declaration of class _TMSServ__CloseFileObjectDataProviderResponse.
class _TMSServ__CloseFileObjectDataProviderResponse;


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://xerofox.com/TMSService/                                           *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://xerofox.com/TMSService/                                           *
 *                                                                            *
\******************************************************************************/

/// @brief "http://xerofox.com/TMSService/":ArrayOfInt is a complexType.
///
/// class TMSServ__ArrayOfInt operations:
/// - soap_new_TMSServ__ArrayOfInt(soap*) allocate
/// - soap_new_TMSServ__ArrayOfInt(soap*, int num) allocate array
/// - soap_new_req_TMSServ__ArrayOfInt(soap*, ...) allocate, set required members
/// - soap_new_set_TMSServ__ArrayOfInt(soap*, ...) allocate, set all public members
/// - int soap_read_TMSServ__ArrayOfInt(soap*, TMSServ__ArrayOfInt*) deserialize from a stream
/// - int soap_write_TMSServ__ArrayOfInt(soap, TMSServ__ArrayOfInt*) serialize to a stream
class TMSServ__ArrayOfInt
{ public:
/// Size of array of int is 0..unbounded.
   $int                                  __sizeint_                     0;
/// Pointer to array int of size 0..unbounded.
    int                                 *int_                           0;
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://xerofox.com/TMSService/":ArrayOfUnsignedInt is a complexType.
///
/// class TMSServ__ArrayOfUnsignedInt operations:
/// - soap_new_TMSServ__ArrayOfUnsignedInt(soap*) allocate
/// - soap_new_TMSServ__ArrayOfUnsignedInt(soap*, int num) allocate array
/// - soap_new_req_TMSServ__ArrayOfUnsignedInt(soap*, ...) allocate, set required members
/// - soap_new_set_TMSServ__ArrayOfUnsignedInt(soap*, ...) allocate, set all public members
/// - int soap_read_TMSServ__ArrayOfUnsignedInt(soap*, TMSServ__ArrayOfUnsignedInt*) deserialize from a stream
/// - int soap_write_TMSServ__ArrayOfUnsignedInt(soap, TMSServ__ArrayOfUnsignedInt*) serialize to a stream
class TMSServ__ArrayOfUnsignedInt
{ public:
/// Size of array of unsigned int is 0..unbounded.
   $int                                  __sizeunsignedInt              0;
/// Pointer to array unsigned int of size 0..unbounded.
    unsigned int                        *unsignedInt                    0;
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://xerofox.com/TMSService/":loginUser
/// @brief "http://xerofox.com/TMSService/":loginUser is a complexType.
///
/// class _TMSServ__loginUser operations:
/// - soap_new__TMSServ__loginUser(soap*) allocate
/// - soap_new__TMSServ__loginUser(soap*, int num) allocate array
/// - soap_new_req__TMSServ__loginUser(soap*, ...) allocate, set required members
/// - soap_new_set__TMSServ__loginUser(soap*, ...) allocate, set all public members
/// - int soap_read__TMSServ__loginUser(soap*, _TMSServ__loginUser*) deserialize from a stream
/// - int soap_write__TMSServ__loginUser(soap, _TMSServ__loginUser*) serialize to a stream
class _TMSServ__loginUser
{ public:
/// Element "userName" of XSD type xs:string.
    char*                                userName                       0;	///< Optional element.
/// Element "password" of XSD type xs:string.
    char*                                password                       0;	///< Optional element.
/// Element "fingerprint" of XSD type xs:string.
    char*                                fingerprint                    0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://xerofox.com/TMSService/":loginUserResponse
/// @brief "http://xerofox.com/TMSService/":loginUserResponse is a complexType.
///
/// class _TMSServ__loginUserResponse operations:
/// - soap_new__TMSServ__loginUserResponse(soap*) allocate
/// - soap_new__TMSServ__loginUserResponse(soap*, int num) allocate array
/// - soap_new_req__TMSServ__loginUserResponse(soap*, ...) allocate, set required members
/// - soap_new_set__TMSServ__loginUserResponse(soap*, ...) allocate, set all public members
/// - int soap_read__TMSServ__loginUserResponse(soap*, _TMSServ__loginUserResponse*) deserialize from a stream
/// - int soap_write__TMSServ__loginUserResponse(soap, _TMSServ__loginUserResponse*) serialize to a stream
class _TMSServ__loginUserResponse
{ public:
/// Element "loginUserResult" of XSD type xs:int.
    int                                  loginUserResult                1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://xerofox.com/TMSService/":loginUserByByteArr
/// @brief "http://xerofox.com/TMSService/":loginUserByByteArr is a complexType.
///
/// class _TMSServ__loginUserByByteArr operations:
/// - soap_new__TMSServ__loginUserByByteArr(soap*) allocate
/// - soap_new__TMSServ__loginUserByByteArr(soap*, int num) allocate array
/// - soap_new_req__TMSServ__loginUserByByteArr(soap*, ...) allocate, set required members
/// - soap_new_set__TMSServ__loginUserByByteArr(soap*, ...) allocate, set all public members
/// - int soap_read__TMSServ__loginUserByByteArr(soap*, _TMSServ__loginUserByByteArr*) deserialize from a stream
/// - int soap_write__TMSServ__loginUserByByteArr(soap, _TMSServ__loginUserByByteArr*) serialize to a stream
class _TMSServ__loginUserByByteArr
{ public:
/// Element "userInfo" of XSD type xs:base64Binary.
    xsd__base64Binary*                   userInfo                       0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://xerofox.com/TMSService/":loginUserByByteArrResponse
/// @brief "http://xerofox.com/TMSService/":loginUserByByteArrResponse is a complexType.
///
/// class _TMSServ__loginUserByByteArrResponse operations:
/// - soap_new__TMSServ__loginUserByByteArrResponse(soap*) allocate
/// - soap_new__TMSServ__loginUserByByteArrResponse(soap*, int num) allocate array
/// - soap_new_req__TMSServ__loginUserByByteArrResponse(soap*, ...) allocate, set required members
/// - soap_new_set__TMSServ__loginUserByByteArrResponse(soap*, ...) allocate, set all public members
/// - int soap_read__TMSServ__loginUserByByteArrResponse(soap*, _TMSServ__loginUserByByteArrResponse*) deserialize from a stream
/// - int soap_write__TMSServ__loginUserByByteArrResponse(soap, _TMSServ__loginUserByByteArrResponse*) serialize to a stream
class _TMSServ__loginUserByByteArrResponse
{ public:
/// Element "loginUserByByteArrResult" of XSD type xs:int.
    int                                  loginUserByByteArrResult       1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://xerofox.com/TMSService/":logoutUser
/// @brief "http://xerofox.com/TMSService/":logoutUser is a complexType.
///
/// class _TMSServ__logoutUser operations:
/// - soap_new__TMSServ__logoutUser(soap*) allocate
/// - soap_new__TMSServ__logoutUser(soap*, int num) allocate array
/// - soap_new_req__TMSServ__logoutUser(soap*, ...) allocate, set required members
/// - soap_new_set__TMSServ__logoutUser(soap*, ...) allocate, set all public members
/// - int soap_read__TMSServ__logoutUser(soap*, _TMSServ__logoutUser*) deserialize from a stream
/// - int soap_write__TMSServ__logoutUser(soap, _TMSServ__logoutUser*) serialize to a stream
class _TMSServ__logoutUser
{ public:
/// Element "sessionId" of XSD type xs:int.
    int                                  sessionId                      1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://xerofox.com/TMSService/":logoutUserResponse
/// @brief "http://xerofox.com/TMSService/":logoutUserResponse is a complexType.
///
/// class _TMSServ__logoutUserResponse operations:
/// - soap_new__TMSServ__logoutUserResponse(soap*) allocate
/// - soap_new__TMSServ__logoutUserResponse(soap*, int num) allocate array
/// - soap_new_req__TMSServ__logoutUserResponse(soap*, ...) allocate, set required members
/// - soap_new_set__TMSServ__logoutUserResponse(soap*, ...) allocate, set all public members
/// - int soap_read__TMSServ__logoutUserResponse(soap*, _TMSServ__logoutUserResponse*) deserialize from a stream
/// - int soap_write__TMSServ__logoutUserResponse(soap, _TMSServ__logoutUserResponse*) serialize to a stream
class _TMSServ__logoutUserResponse
{ public:
/// Element "logoutUserResult" of XSD type xs:int.
    int                                  logoutUserResult               1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://xerofox.com/TMSService/":QueryObjects
/// @brief "http://xerofox.com/TMSService/":QueryObjects is a complexType.
///
/// class _TMSServ__QueryObjects operations:
/// - soap_new__TMSServ__QueryObjects(soap*) allocate
/// - soap_new__TMSServ__QueryObjects(soap*, int num) allocate array
/// - soap_new_req__TMSServ__QueryObjects(soap*, ...) allocate, set required members
/// - soap_new_set__TMSServ__QueryObjects(soap*, ...) allocate, set all public members
/// - int soap_read__TMSServ__QueryObjects(soap*, _TMSServ__QueryObjects*) deserialize from a stream
/// - int soap_write__TMSServ__QueryObjects(soap, _TMSServ__QueryObjects*) serialize to a stream
class _TMSServ__QueryObjects
{ public:
/// Element "sessionId" of XSD type xs:int.
    int                                  sessionId                      1;	///< Required element.
/// Element "clsName" of XSD type xs:string.
    char*                                clsName                        0;	///< Optional element.
/// Element "xmlScope" of XSD type xs:string.
    char*                                xmlScope                       0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://xerofox.com/TMSService/":QueryObjectsResponse
/// @brief "http://xerofox.com/TMSService/":QueryObjectsResponse is a complexType.
///
/// class _TMSServ__QueryObjectsResponse operations:
/// - soap_new__TMSServ__QueryObjectsResponse(soap*) allocate
/// - soap_new__TMSServ__QueryObjectsResponse(soap*, int num) allocate array
/// - soap_new_req__TMSServ__QueryObjectsResponse(soap*, ...) allocate, set required members
/// - soap_new_set__TMSServ__QueryObjectsResponse(soap*, ...) allocate, set all public members
/// - int soap_read__TMSServ__QueryObjectsResponse(soap*, _TMSServ__QueryObjectsResponse*) deserialize from a stream
/// - int soap_write__TMSServ__QueryObjectsResponse(soap, _TMSServ__QueryObjectsResponse*) serialize to a stream
class _TMSServ__QueryObjectsResponse
{ public:
/// Element "QueryObjectsResult" of XSD type xs:base64Binary.
    xsd__base64Binary*                   QueryObjectsResult             0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://xerofox.com/TMSService/":DownloadObjects
/// @brief "http://xerofox.com/TMSService/":DownloadObjects is a complexType.
///
/// class _TMSServ__DownloadObjects operations:
/// - soap_new__TMSServ__DownloadObjects(soap*) allocate
/// - soap_new__TMSServ__DownloadObjects(soap*, int num) allocate array
/// - soap_new_req__TMSServ__DownloadObjects(soap*, ...) allocate, set required members
/// - soap_new_set__TMSServ__DownloadObjects(soap*, ...) allocate, set all public members
/// - int soap_read__TMSServ__DownloadObjects(soap*, _TMSServ__DownloadObjects*) deserialize from a stream
/// - int soap_write__TMSServ__DownloadObjects(soap, _TMSServ__DownloadObjects*) serialize to a stream
class _TMSServ__DownloadObjects
{ public:
/// Element "sessionId" of XSD type xs:int.
    int                                  sessionId                      1;	///< Required element.
/// Element "clsName" of XSD type xs:string.
    char*                                clsName                        0;	///< Optional element.
/// Element "idarr" of XSD type "http://xerofox.com/TMSService/":ArrayOfInt.
    TMSServ__ArrayOfInt*                 idarr                          0;	///< Optional element.
/// Element "serialize" of XSD type xs:unsignedInt.
    unsigned int                         serialize                      1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://xerofox.com/TMSService/":DownloadObjectsResponse
/// @brief "http://xerofox.com/TMSService/":DownloadObjectsResponse is a complexType.
///
/// class _TMSServ__DownloadObjectsResponse operations:
/// - soap_new__TMSServ__DownloadObjectsResponse(soap*) allocate
/// - soap_new__TMSServ__DownloadObjectsResponse(soap*, int num) allocate array
/// - soap_new_req__TMSServ__DownloadObjectsResponse(soap*, ...) allocate, set required members
/// - soap_new_set__TMSServ__DownloadObjectsResponse(soap*, ...) allocate, set all public members
/// - int soap_read__TMSServ__DownloadObjectsResponse(soap*, _TMSServ__DownloadObjectsResponse*) deserialize from a stream
/// - int soap_write__TMSServ__DownloadObjectsResponse(soap, _TMSServ__DownloadObjectsResponse*) serialize to a stream
class _TMSServ__DownloadObjectsResponse
{ public:
/// Element "DownloadObjectsResult" of XSD type xs:base64Binary.
    xsd__base64Binary*                   DownloadObjectsResult          0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://xerofox.com/TMSService/":GetObjectsVersion
/// @brief "http://xerofox.com/TMSService/":GetObjectsVersion is a complexType.
///
/// class _TMSServ__GetObjectsVersion operations:
/// - soap_new__TMSServ__GetObjectsVersion(soap*) allocate
/// - soap_new__TMSServ__GetObjectsVersion(soap*, int num) allocate array
/// - soap_new_req__TMSServ__GetObjectsVersion(soap*, ...) allocate, set required members
/// - soap_new_set__TMSServ__GetObjectsVersion(soap*, ...) allocate, set all public members
/// - int soap_read__TMSServ__GetObjectsVersion(soap*, _TMSServ__GetObjectsVersion*) deserialize from a stream
/// - int soap_write__TMSServ__GetObjectsVersion(soap, _TMSServ__GetObjectsVersion*) serialize to a stream
class _TMSServ__GetObjectsVersion
{ public:
/// Element "sessionId" of XSD type xs:int.
    int                                  sessionId                      1;	///< Required element.
/// Element "clsName" of XSD type xs:string.
    char*                                clsName                        0;	///< Optional element.
/// Element "idarr" of XSD type "http://xerofox.com/TMSService/":ArrayOfInt.
    TMSServ__ArrayOfInt*                 idarr                          0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://xerofox.com/TMSService/":GetObjectsVersionResponse
/// @brief "http://xerofox.com/TMSService/":GetObjectsVersionResponse is a complexType.
///
/// class _TMSServ__GetObjectsVersionResponse operations:
/// - soap_new__TMSServ__GetObjectsVersionResponse(soap*) allocate
/// - soap_new__TMSServ__GetObjectsVersionResponse(soap*, int num) allocate array
/// - soap_new_req__TMSServ__GetObjectsVersionResponse(soap*, ...) allocate, set required members
/// - soap_new_set__TMSServ__GetObjectsVersionResponse(soap*, ...) allocate, set all public members
/// - int soap_read__TMSServ__GetObjectsVersionResponse(soap*, _TMSServ__GetObjectsVersionResponse*) deserialize from a stream
/// - int soap_write__TMSServ__GetObjectsVersionResponse(soap, _TMSServ__GetObjectsVersionResponse*) serialize to a stream
class _TMSServ__GetObjectsVersionResponse
{ public:
/// Element "GetObjectsVersionResult" of XSD type "http://xerofox.com/TMSService/":ArrayOfUnsignedInt.
    TMSServ__ArrayOfUnsignedInt*         GetObjectsVersionResult        0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://xerofox.com/TMSService/":GetTowerPartsLabelAndVersionSerial
/// @brief "http://xerofox.com/TMSService/":GetTowerPartsLabelAndVersionSerial is a complexType.
///
/// class _TMSServ__GetTowerPartsLabelAndVersionSerial operations:
/// - soap_new__TMSServ__GetTowerPartsLabelAndVersionSerial(soap*) allocate
/// - soap_new__TMSServ__GetTowerPartsLabelAndVersionSerial(soap*, int num) allocate array
/// - soap_new_req__TMSServ__GetTowerPartsLabelAndVersionSerial(soap*, ...) allocate, set required members
/// - soap_new_set__TMSServ__GetTowerPartsLabelAndVersionSerial(soap*, ...) allocate, set all public members
/// - int soap_read__TMSServ__GetTowerPartsLabelAndVersionSerial(soap*, _TMSServ__GetTowerPartsLabelAndVersionSerial*) deserialize from a stream
/// - int soap_write__TMSServ__GetTowerPartsLabelAndVersionSerial(soap, _TMSServ__GetTowerPartsLabelAndVersionSerial*) serialize to a stream
class _TMSServ__GetTowerPartsLabelAndVersionSerial
{ public:
/// Element "sessionId" of XSD type xs:int.
    int                                  sessionId                      1;	///< Required element.
/// Element "towerTypeId" of XSD type xs:int.
    int                                  towerTypeId                    1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://xerofox.com/TMSService/":GetTowerPartsLabelAndVersionSerialResponse
/// @brief "http://xerofox.com/TMSService/":GetTowerPartsLabelAndVersionSerialResponse is a complexType.
///
/// class _TMSServ__GetTowerPartsLabelAndVersionSerialResponse operations:
/// - soap_new__TMSServ__GetTowerPartsLabelAndVersionSerialResponse(soap*) allocate
/// - soap_new__TMSServ__GetTowerPartsLabelAndVersionSerialResponse(soap*, int num) allocate array
/// - soap_new_req__TMSServ__GetTowerPartsLabelAndVersionSerialResponse(soap*, ...) allocate, set required members
/// - soap_new_set__TMSServ__GetTowerPartsLabelAndVersionSerialResponse(soap*, ...) allocate, set all public members
/// - int soap_read__TMSServ__GetTowerPartsLabelAndVersionSerialResponse(soap*, _TMSServ__GetTowerPartsLabelAndVersionSerialResponse*) deserialize from a stream
/// - int soap_write__TMSServ__GetTowerPartsLabelAndVersionSerialResponse(soap, _TMSServ__GetTowerPartsLabelAndVersionSerialResponse*) serialize to a stream
class _TMSServ__GetTowerPartsLabelAndVersionSerialResponse
{ public:
/// Element "GetTowerPartsLabelAndVersionSerialResult" of XSD type xs:base64Binary.
    xsd__base64Binary*                   GetTowerPartsLabelAndVersionSerialResult 0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://xerofox.com/TMSService/":MatchTowerParts
/// @brief "http://xerofox.com/TMSService/":MatchTowerParts is a complexType.
///
/// class _TMSServ__MatchTowerParts operations:
/// - soap_new__TMSServ__MatchTowerParts(soap*) allocate
/// - soap_new__TMSServ__MatchTowerParts(soap*, int num) allocate array
/// - soap_new_req__TMSServ__MatchTowerParts(soap*, ...) allocate, set required members
/// - soap_new_set__TMSServ__MatchTowerParts(soap*, ...) allocate, set all public members
/// - int soap_read__TMSServ__MatchTowerParts(soap*, _TMSServ__MatchTowerParts*) deserialize from a stream
/// - int soap_write__TMSServ__MatchTowerParts(soap, _TMSServ__MatchTowerParts*) serialize to a stream
class _TMSServ__MatchTowerParts
{ public:
/// Element "sessionId" of XSD type xs:int.
    int                                  sessionId                      1;	///< Required element.
/// Element "xmlformat" of XSD type xs:string.
    char*                                xmlformat                      0;	///< Optional element.
/// Element "byteArr" of XSD type xs:base64Binary.
    xsd__base64Binary*                   byteArr                        0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://xerofox.com/TMSService/":MatchTowerPartsResponse
/// @brief "http://xerofox.com/TMSService/":MatchTowerPartsResponse is a complexType.
///
/// class _TMSServ__MatchTowerPartsResponse operations:
/// - soap_new__TMSServ__MatchTowerPartsResponse(soap*) allocate
/// - soap_new__TMSServ__MatchTowerPartsResponse(soap*, int num) allocate array
/// - soap_new_req__TMSServ__MatchTowerPartsResponse(soap*, ...) allocate, set required members
/// - soap_new_set__TMSServ__MatchTowerPartsResponse(soap*, ...) allocate, set all public members
/// - int soap_read__TMSServ__MatchTowerPartsResponse(soap*, _TMSServ__MatchTowerPartsResponse*) deserialize from a stream
/// - int soap_write__TMSServ__MatchTowerPartsResponse(soap, _TMSServ__MatchTowerPartsResponse*) serialize to a stream
class _TMSServ__MatchTowerPartsResponse
{ public:
/// Element "MatchTowerPartsResult" of XSD type xs:string.
    char*                                MatchTowerPartsResult          0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://xerofox.com/TMSService/":SaveOrUpdateObjects
/// @brief "http://xerofox.com/TMSService/":SaveOrUpdateObjects is a complexType.
///
/// class _TMSServ__SaveOrUpdateObjects operations:
/// - soap_new__TMSServ__SaveOrUpdateObjects(soap*) allocate
/// - soap_new__TMSServ__SaveOrUpdateObjects(soap*, int num) allocate array
/// - soap_new_req__TMSServ__SaveOrUpdateObjects(soap*, ...) allocate, set required members
/// - soap_new_set__TMSServ__SaveOrUpdateObjects(soap*, ...) allocate, set all public members
/// - int soap_read__TMSServ__SaveOrUpdateObjects(soap*, _TMSServ__SaveOrUpdateObjects*) deserialize from a stream
/// - int soap_write__TMSServ__SaveOrUpdateObjects(soap, _TMSServ__SaveOrUpdateObjects*) serialize to a stream
class _TMSServ__SaveOrUpdateObjects
{ public:
/// Element "sessionId" of XSD type xs:int.
    int                                  sessionId                      1;	///< Required element.
/// Element "clsName" of XSD type xs:string.
    char*                                clsName                        0;	///< Optional element.
/// Element "xmlformat" of XSD type xs:string.
    char*                                xmlformat                      0;	///< Optional element.
/// Element "byteArr" of XSD type xs:base64Binary.
    xsd__base64Binary*                   byteArr                        0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://xerofox.com/TMSService/":SaveOrUpdateObjectsResponse
/// @brief "http://xerofox.com/TMSService/":SaveOrUpdateObjectsResponse is a complexType.
///
/// class _TMSServ__SaveOrUpdateObjectsResponse operations:
/// - soap_new__TMSServ__SaveOrUpdateObjectsResponse(soap*) allocate
/// - soap_new__TMSServ__SaveOrUpdateObjectsResponse(soap*, int num) allocate array
/// - soap_new_req__TMSServ__SaveOrUpdateObjectsResponse(soap*, ...) allocate, set required members
/// - soap_new_set__TMSServ__SaveOrUpdateObjectsResponse(soap*, ...) allocate, set all public members
/// - int soap_read__TMSServ__SaveOrUpdateObjectsResponse(soap*, _TMSServ__SaveOrUpdateObjectsResponse*) deserialize from a stream
/// - int soap_write__TMSServ__SaveOrUpdateObjectsResponse(soap, _TMSServ__SaveOrUpdateObjectsResponse*) serialize to a stream
class _TMSServ__SaveOrUpdateObjectsResponse
{ public:
/// Element "SaveOrUpdateObjectsResult" of XSD type xs:string.
    char*                                SaveOrUpdateObjectsResult      0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://xerofox.com/TMSService/":DeleteObject
/// @brief "http://xerofox.com/TMSService/":DeleteObject is a complexType.
///
/// class _TMSServ__DeleteObject operations:
/// - soap_new__TMSServ__DeleteObject(soap*) allocate
/// - soap_new__TMSServ__DeleteObject(soap*, int num) allocate array
/// - soap_new_req__TMSServ__DeleteObject(soap*, ...) allocate, set required members
/// - soap_new_set__TMSServ__DeleteObject(soap*, ...) allocate, set all public members
/// - int soap_read__TMSServ__DeleteObject(soap*, _TMSServ__DeleteObject*) deserialize from a stream
/// - int soap_write__TMSServ__DeleteObject(soap, _TMSServ__DeleteObject*) serialize to a stream
class _TMSServ__DeleteObject
{ public:
/// Element "sessionId" of XSD type xs:int.
    int                                  sessionId                      1;	///< Required element.
/// Element "clsName" of XSD type xs:string.
    char*                                clsName                        0;	///< Optional element.
/// Element "objId" of XSD type xs:int.
    int                                  objId                          1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://xerofox.com/TMSService/":DeleteObjectResponse
/// @brief "http://xerofox.com/TMSService/":DeleteObjectResponse is a complexType.
///
/// class _TMSServ__DeleteObjectResponse operations:
/// - soap_new__TMSServ__DeleteObjectResponse(soap*) allocate
/// - soap_new__TMSServ__DeleteObjectResponse(soap*, int num) allocate array
/// - soap_new_req__TMSServ__DeleteObjectResponse(soap*, ...) allocate, set required members
/// - soap_new_set__TMSServ__DeleteObjectResponse(soap*, ...) allocate, set all public members
/// - int soap_read__TMSServ__DeleteObjectResponse(soap*, _TMSServ__DeleteObjectResponse*) deserialize from a stream
/// - int soap_write__TMSServ__DeleteObjectResponse(soap, _TMSServ__DeleteObjectResponse*) serialize to a stream
class _TMSServ__DeleteObjectResponse
{ public:
/// Element "DeleteObjectResult" of XSD type xs:boolean.
    bool                                 DeleteObjectResult             1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://xerofox.com/TMSService/":DownloadFileById
/// @brief "http://xerofox.com/TMSService/":DownloadFileById is a complexType.
///
/// class _TMSServ__DownloadFileById operations:
/// - soap_new__TMSServ__DownloadFileById(soap*) allocate
/// - soap_new__TMSServ__DownloadFileById(soap*, int num) allocate array
/// - soap_new_req__TMSServ__DownloadFileById(soap*, ...) allocate, set required members
/// - soap_new_set__TMSServ__DownloadFileById(soap*, ...) allocate, set all public members
/// - int soap_read__TMSServ__DownloadFileById(soap*, _TMSServ__DownloadFileById*) deserialize from a stream
/// - int soap_write__TMSServ__DownloadFileById(soap, _TMSServ__DownloadFileById*) serialize to a stream
class _TMSServ__DownloadFileById
{ public:
/// Element "sessionId" of XSD type xs:int.
    int                                  sessionId                      1;	///< Required element.
/// Element "clsName" of XSD type xs:string.
    char*                                clsName                        0;	///< Optional element.
/// Element "fileId" of XSD type xs:int.
    int                                  fileId                         1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://xerofox.com/TMSService/":DownloadFileByIdResponse
/// @brief "http://xerofox.com/TMSService/":DownloadFileByIdResponse is a complexType.
///
/// class _TMSServ__DownloadFileByIdResponse operations:
/// - soap_new__TMSServ__DownloadFileByIdResponse(soap*) allocate
/// - soap_new__TMSServ__DownloadFileByIdResponse(soap*, int num) allocate array
/// - soap_new_req__TMSServ__DownloadFileByIdResponse(soap*, ...) allocate, set required members
/// - soap_new_set__TMSServ__DownloadFileByIdResponse(soap*, ...) allocate, set all public members
/// - int soap_read__TMSServ__DownloadFileByIdResponse(soap*, _TMSServ__DownloadFileByIdResponse*) deserialize from a stream
/// - int soap_write__TMSServ__DownloadFileByIdResponse(soap, _TMSServ__DownloadFileByIdResponse*) serialize to a stream
class _TMSServ__DownloadFileByIdResponse
{ public:
/// Element "DownloadFileByIdResult" of XSD type xs:base64Binary.
    xsd__base64Binary*                   DownloadFileByIdResult         0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://xerofox.com/TMSService/":UploadFileObject
/// @brief "http://xerofox.com/TMSService/":UploadFileObject is a complexType.
///
/// class _TMSServ__UploadFileObject operations:
/// - soap_new__TMSServ__UploadFileObject(soap*) allocate
/// - soap_new__TMSServ__UploadFileObject(soap*, int num) allocate array
/// - soap_new_req__TMSServ__UploadFileObject(soap*, ...) allocate, set required members
/// - soap_new_set__TMSServ__UploadFileObject(soap*, ...) allocate, set all public members
/// - int soap_read__TMSServ__UploadFileObject(soap*, _TMSServ__UploadFileObject*) deserialize from a stream
/// - int soap_write__TMSServ__UploadFileObject(soap, _TMSServ__UploadFileObject*) serialize to a stream
class _TMSServ__UploadFileObject
{ public:
/// Element "sessionId" of XSD type xs:int.
    int                                  sessionId                      1;	///< Required element.
/// Element "idFileObj" of XSD type xs:int.
    int                                  idFileObj                      1;	///< Required element.
/// Element "startposition" of XSD type xs:int.
    int                                  startposition                  1;	///< Required element.
/// Element "byteArr" of XSD type xs:base64Binary.
    xsd__base64Binary*                   byteArr                        0;	///< Optional element.
/// Element "compressed" of XSD type xs:boolean.
    bool                                 compressed                     1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://xerofox.com/TMSService/":UploadFileObjectResponse
/// @brief "http://xerofox.com/TMSService/":UploadFileObjectResponse is a complexType.
///
/// class _TMSServ__UploadFileObjectResponse operations:
/// - soap_new__TMSServ__UploadFileObjectResponse(soap*) allocate
/// - soap_new__TMSServ__UploadFileObjectResponse(soap*, int num) allocate array
/// - soap_new_req__TMSServ__UploadFileObjectResponse(soap*, ...) allocate, set required members
/// - soap_new_set__TMSServ__UploadFileObjectResponse(soap*, ...) allocate, set all public members
/// - int soap_read__TMSServ__UploadFileObjectResponse(soap*, _TMSServ__UploadFileObjectResponse*) deserialize from a stream
/// - int soap_write__TMSServ__UploadFileObjectResponse(soap, _TMSServ__UploadFileObjectResponse*) serialize to a stream
class _TMSServ__UploadFileObjectResponse
{ public:
/// Element "UploadFileObjectResult" of XSD type xs:boolean.
    bool                                 UploadFileObjectResult         1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://xerofox.com/TMSService/":FinalizeFileObjectData
/// @brief "http://xerofox.com/TMSService/":FinalizeFileObjectData is a complexType.
///
/// class _TMSServ__FinalizeFileObjectData operations:
/// - soap_new__TMSServ__FinalizeFileObjectData(soap*) allocate
/// - soap_new__TMSServ__FinalizeFileObjectData(soap*, int num) allocate array
/// - soap_new_req__TMSServ__FinalizeFileObjectData(soap*, ...) allocate, set required members
/// - soap_new_set__TMSServ__FinalizeFileObjectData(soap*, ...) allocate, set all public members
/// - int soap_read__TMSServ__FinalizeFileObjectData(soap*, _TMSServ__FinalizeFileObjectData*) deserialize from a stream
/// - int soap_write__TMSServ__FinalizeFileObjectData(soap, _TMSServ__FinalizeFileObjectData*) serialize to a stream
class _TMSServ__FinalizeFileObjectData
{ public:
/// Element "sessionId" of XSD type xs:int.
    int                                  sessionId                      1;	///< Required element.
/// Element "idFileObj" of XSD type xs:int.
    int                                  idFileObj                      1;	///< Required element.
/// Element "file_length" of XSD type xs:int.
    int                                  file_USCORElength              1;	///< Required element.
/// Element "isOverriteFile" of XSD type xs:boolean.
    bool                                 isOverriteFile                 1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://xerofox.com/TMSService/":FinalizeFileObjectDataResponse
/// @brief "http://xerofox.com/TMSService/":FinalizeFileObjectDataResponse is a complexType.
///
/// class _TMSServ__FinalizeFileObjectDataResponse operations:
/// - soap_new__TMSServ__FinalizeFileObjectDataResponse(soap*) allocate
/// - soap_new__TMSServ__FinalizeFileObjectDataResponse(soap*, int num) allocate array
/// - soap_new_req__TMSServ__FinalizeFileObjectDataResponse(soap*, ...) allocate, set required members
/// - soap_new_set__TMSServ__FinalizeFileObjectDataResponse(soap*, ...) allocate, set all public members
/// - int soap_read__TMSServ__FinalizeFileObjectDataResponse(soap*, _TMSServ__FinalizeFileObjectDataResponse*) deserialize from a stream
/// - int soap_write__TMSServ__FinalizeFileObjectDataResponse(soap, _TMSServ__FinalizeFileObjectDataResponse*) serialize to a stream
class _TMSServ__FinalizeFileObjectDataResponse
{ public:
/// Element "FinalizeFileObjectDataResult" of XSD type xs:string.
    char*                                FinalizeFileObjectDataResult   0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://xerofox.com/TMSService/":OpenFileObjectDataProvider
/// @brief "http://xerofox.com/TMSService/":OpenFileObjectDataProvider is a complexType.
///
/// class _TMSServ__OpenFileObjectDataProvider operations:
/// - soap_new__TMSServ__OpenFileObjectDataProvider(soap*) allocate
/// - soap_new__TMSServ__OpenFileObjectDataProvider(soap*, int num) allocate array
/// - soap_new_req__TMSServ__OpenFileObjectDataProvider(soap*, ...) allocate, set required members
/// - soap_new_set__TMSServ__OpenFileObjectDataProvider(soap*, ...) allocate, set all public members
/// - int soap_read__TMSServ__OpenFileObjectDataProvider(soap*, _TMSServ__OpenFileObjectDataProvider*) deserialize from a stream
/// - int soap_write__TMSServ__OpenFileObjectDataProvider(soap, _TMSServ__OpenFileObjectDataProvider*) serialize to a stream
class _TMSServ__OpenFileObjectDataProvider
{ public:
/// Element "sessionId" of XSD type xs:int.
    int                                  sessionId                      1;	///< Required element.
/// Element "idFileObj" of XSD type xs:int.
    int                                  idFileObj                      1;	///< Required element.
/// Element "compressed" of XSD type xs:boolean.
    bool                                 compressed                     1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://xerofox.com/TMSService/":OpenFileObjectDataProviderResponse
/// @brief "http://xerofox.com/TMSService/":OpenFileObjectDataProviderResponse is a complexType.
///
/// class _TMSServ__OpenFileObjectDataProviderResponse operations:
/// - soap_new__TMSServ__OpenFileObjectDataProviderResponse(soap*) allocate
/// - soap_new__TMSServ__OpenFileObjectDataProviderResponse(soap*, int num) allocate array
/// - soap_new_req__TMSServ__OpenFileObjectDataProviderResponse(soap*, ...) allocate, set required members
/// - soap_new_set__TMSServ__OpenFileObjectDataProviderResponse(soap*, ...) allocate, set all public members
/// - int soap_read__TMSServ__OpenFileObjectDataProviderResponse(soap*, _TMSServ__OpenFileObjectDataProviderResponse*) deserialize from a stream
/// - int soap_write__TMSServ__OpenFileObjectDataProviderResponse(soap, _TMSServ__OpenFileObjectDataProviderResponse*) serialize to a stream
class _TMSServ__OpenFileObjectDataProviderResponse
{ public:
/// Element "OpenFileObjectDataProviderResult" of XSD type xs:unsignedInt.
    unsigned int                         OpenFileObjectDataProviderResult 1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://xerofox.com/TMSService/":OpenTapModelDataProvider
/// @brief "http://xerofox.com/TMSService/":OpenTapModelDataProvider is a complexType.
///
/// class _TMSServ__OpenTapModelDataProvider operations:
/// - soap_new__TMSServ__OpenTapModelDataProvider(soap*) allocate
/// - soap_new__TMSServ__OpenTapModelDataProvider(soap*, int num) allocate array
/// - soap_new_req__TMSServ__OpenTapModelDataProvider(soap*, ...) allocate, set required members
/// - soap_new_set__TMSServ__OpenTapModelDataProvider(soap*, ...) allocate, set all public members
/// - int soap_read__TMSServ__OpenTapModelDataProvider(soap*, _TMSServ__OpenTapModelDataProvider*) deserialize from a stream
/// - int soap_write__TMSServ__OpenTapModelDataProvider(soap, _TMSServ__OpenTapModelDataProvider*) serialize to a stream
class _TMSServ__OpenTapModelDataProvider
{ public:
/// Element "sessionId" of XSD type xs:int.
    int                                  sessionId                      1;	///< Required element.
/// Element "idTowerType" of XSD type xs:int.
    int                                  idTowerType                    1;	///< Required element.
/// Element "compressed" of XSD type xs:boolean.
    bool                                 compressed                     1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://xerofox.com/TMSService/":OpenTapModelDataProviderResponse
/// @brief "http://xerofox.com/TMSService/":OpenTapModelDataProviderResponse is a complexType.
///
/// class _TMSServ__OpenTapModelDataProviderResponse operations:
/// - soap_new__TMSServ__OpenTapModelDataProviderResponse(soap*) allocate
/// - soap_new__TMSServ__OpenTapModelDataProviderResponse(soap*, int num) allocate array
/// - soap_new_req__TMSServ__OpenTapModelDataProviderResponse(soap*, ...) allocate, set required members
/// - soap_new_set__TMSServ__OpenTapModelDataProviderResponse(soap*, ...) allocate, set all public members
/// - int soap_read__TMSServ__OpenTapModelDataProviderResponse(soap*, _TMSServ__OpenTapModelDataProviderResponse*) deserialize from a stream
/// - int soap_write__TMSServ__OpenTapModelDataProviderResponse(soap, _TMSServ__OpenTapModelDataProviderResponse*) serialize to a stream
class _TMSServ__OpenTapModelDataProviderResponse
{ public:
/// Element "OpenTapModelDataProviderResult" of XSD type xs:string.
    char*                                OpenTapModelDataProviderResult 0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://xerofox.com/TMSService/":OpenServerObjectDataProvider
/// @brief "http://xerofox.com/TMSService/":OpenServerObjectDataProvider is a complexType.
///
/// class _TMSServ__OpenServerObjectDataProvider operations:
/// - soap_new__TMSServ__OpenServerObjectDataProvider(soap*) allocate
/// - soap_new__TMSServ__OpenServerObjectDataProvider(soap*, int num) allocate array
/// - soap_new_req__TMSServ__OpenServerObjectDataProvider(soap*, ...) allocate, set required members
/// - soap_new_set__TMSServ__OpenServerObjectDataProvider(soap*, ...) allocate, set all public members
/// - int soap_read__TMSServ__OpenServerObjectDataProvider(soap*, _TMSServ__OpenServerObjectDataProvider*) deserialize from a stream
/// - int soap_write__TMSServ__OpenServerObjectDataProvider(soap, _TMSServ__OpenServerObjectDataProvider*) serialize to a stream
class _TMSServ__OpenServerObjectDataProvider
{ public:
/// Element "sessionId" of XSD type xs:int.
    int                                  sessionId                      1;	///< Required element.
/// Element "idObject" of XSD type xs:int.
    int                                  idObject                       1;	///< Required element.
/// Element "cls_name" of XSD type xs:string.
    char*                                cls_USCOREname                 0;	///< Optional element.
/// Element "compressed" of XSD type xs:boolean.
    bool                                 compressed                     1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://xerofox.com/TMSService/":OpenServerObjectDataProviderResponse
/// @brief "http://xerofox.com/TMSService/":OpenServerObjectDataProviderResponse is a complexType.
///
/// class _TMSServ__OpenServerObjectDataProviderResponse operations:
/// - soap_new__TMSServ__OpenServerObjectDataProviderResponse(soap*) allocate
/// - soap_new__TMSServ__OpenServerObjectDataProviderResponse(soap*, int num) allocate array
/// - soap_new_req__TMSServ__OpenServerObjectDataProviderResponse(soap*, ...) allocate, set required members
/// - soap_new_set__TMSServ__OpenServerObjectDataProviderResponse(soap*, ...) allocate, set all public members
/// - int soap_read__TMSServ__OpenServerObjectDataProviderResponse(soap*, _TMSServ__OpenServerObjectDataProviderResponse*) deserialize from a stream
/// - int soap_write__TMSServ__OpenServerObjectDataProviderResponse(soap, _TMSServ__OpenServerObjectDataProviderResponse*) serialize to a stream
class _TMSServ__OpenServerObjectDataProviderResponse
{ public:
/// Element "OpenServerObjectDataProviderResult" of XSD type xs:string.
    char*                                OpenServerObjectDataProviderResult 0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://xerofox.com/TMSService/":DownloadFileObject
/// @brief "http://xerofox.com/TMSService/":DownloadFileObject is a complexType.
///
/// class _TMSServ__DownloadFileObject operations:
/// - soap_new__TMSServ__DownloadFileObject(soap*) allocate
/// - soap_new__TMSServ__DownloadFileObject(soap*, int num) allocate array
/// - soap_new_req__TMSServ__DownloadFileObject(soap*, ...) allocate, set required members
/// - soap_new_set__TMSServ__DownloadFileObject(soap*, ...) allocate, set all public members
/// - int soap_read__TMSServ__DownloadFileObject(soap*, _TMSServ__DownloadFileObject*) deserialize from a stream
/// - int soap_write__TMSServ__DownloadFileObject(soap, _TMSServ__DownloadFileObject*) serialize to a stream
class _TMSServ__DownloadFileObject
{ public:
/// Element "sessionId" of XSD type xs:int.
    int                                  sessionId                      1;	///< Required element.
/// Element "idFileObj" of XSD type xs:int.
    int                                  idFileObj                      1;	///< Required element.
/// Element "startposition" of XSD type xs:int.
    int                                  startposition                  1;	///< Required element.
/// Element "download_size" of XSD type xs:int.
    int                                  download_USCOREsize            1;	///< Required element.
/// Element "compressed" of XSD type xs:boolean.
    bool                                 compressed                     1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://xerofox.com/TMSService/":DownloadFileObjectResponse
/// @brief "http://xerofox.com/TMSService/":DownloadFileObjectResponse is a complexType.
///
/// class _TMSServ__DownloadFileObjectResponse operations:
/// - soap_new__TMSServ__DownloadFileObjectResponse(soap*) allocate
/// - soap_new__TMSServ__DownloadFileObjectResponse(soap*, int num) allocate array
/// - soap_new_req__TMSServ__DownloadFileObjectResponse(soap*, ...) allocate, set required members
/// - soap_new_set__TMSServ__DownloadFileObjectResponse(soap*, ...) allocate, set all public members
/// - int soap_read__TMSServ__DownloadFileObjectResponse(soap*, _TMSServ__DownloadFileObjectResponse*) deserialize from a stream
/// - int soap_write__TMSServ__DownloadFileObjectResponse(soap, _TMSServ__DownloadFileObjectResponse*) serialize to a stream
class _TMSServ__DownloadFileObjectResponse
{ public:
/// Element "DownloadFileObjectResult" of XSD type xs:base64Binary.
    xsd__base64Binary*                   DownloadFileObjectResult       0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://xerofox.com/TMSService/":CloseFileObjectDataProvider
/// @brief "http://xerofox.com/TMSService/":CloseFileObjectDataProvider is a complexType.
///
/// class _TMSServ__CloseFileObjectDataProvider operations:
/// - soap_new__TMSServ__CloseFileObjectDataProvider(soap*) allocate
/// - soap_new__TMSServ__CloseFileObjectDataProvider(soap*, int num) allocate array
/// - soap_new_req__TMSServ__CloseFileObjectDataProvider(soap*, ...) allocate, set required members
/// - soap_new_set__TMSServ__CloseFileObjectDataProvider(soap*, ...) allocate, set all public members
/// - int soap_read__TMSServ__CloseFileObjectDataProvider(soap*, _TMSServ__CloseFileObjectDataProvider*) deserialize from a stream
/// - int soap_write__TMSServ__CloseFileObjectDataProvider(soap, _TMSServ__CloseFileObjectDataProvider*) serialize to a stream
class _TMSServ__CloseFileObjectDataProvider
{ public:
/// Element "sessionId" of XSD type xs:int.
    int                                  sessionId                      1;	///< Required element.
/// Element "idFileObj" of XSD type xs:int.
    int                                  idFileObj                      1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://xerofox.com/TMSService/":CloseFileObjectDataProviderResponse
/// @brief "http://xerofox.com/TMSService/":CloseFileObjectDataProviderResponse is a complexType.
///
/// class _TMSServ__CloseFileObjectDataProviderResponse operations:
/// - soap_new__TMSServ__CloseFileObjectDataProviderResponse(soap*) allocate
/// - soap_new__TMSServ__CloseFileObjectDataProviderResponse(soap*, int num) allocate array
/// - soap_new_req__TMSServ__CloseFileObjectDataProviderResponse(soap*, ...) allocate, set required members
/// - soap_new_set__TMSServ__CloseFileObjectDataProviderResponse(soap*, ...) allocate, set all public members
/// - int soap_read__TMSServ__CloseFileObjectDataProviderResponse(soap*, _TMSServ__CloseFileObjectDataProviderResponse*) deserialize from a stream
/// - int soap_write__TMSServ__CloseFileObjectDataProviderResponse(soap, _TMSServ__CloseFileObjectDataProviderResponse*) serialize to a stream
class _TMSServ__CloseFileObjectDataProviderResponse
{ public:
/// Element "CloseFileObjectDataProviderResult" of XSD type xs:boolean.
    bool                                 CloseFileObjectDataProviderResult 1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://xerofox.com/TMSService/                                           *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://xerofox.com/TMSService/                                           *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Services                                                                   *
 *                                                                            *
\******************************************************************************/

// This service supports SOAP 1.2 namespaces:
#import "soap12.h"

//gsoap TMSServ2 service name:	TMSServiceSoap 
//gsoap TMSServ2 service type:	TMSServiceSoap 
//gsoap TMSServ2 service port:	http://localhost/TMSServ/TmsService.asmx 
//gsoap TMSServ2 service namespace:	http://xerofox.com/TMSService/TMSServiceSoap 
//gsoap TMSServ2 service transport:	http://schemas.xmlsoap.org/soap/http 

//gsoap TMSServ3 service name:	TMSServiceSoap12 
//gsoap TMSServ3 service type:	TMSServiceSoap 
//gsoap TMSServ3 service port:	http://localhost/TMSServ/TmsService.asmx 
//gsoap TMSServ3 service namespace:	http://xerofox.com/TMSService/TMSServiceSoap12 
//gsoap TMSServ3 service transport:	http://schemas.xmlsoap.org/soap/http 

/** @mainpage Service Definitions

@section Service_bindings Service Bindings

  - @ref TMSServiceSoap

  - @ref TMSServiceSoap12

@section Service_more More Information

  - @ref page_notes "Notes"

  - @ref page_XMLDataBinding "XML Data Binding"

  - @ref SOAP_ENV__Header "SOAP Header Content" (when applicable)

  - @ref SOAP_ENV__Detail "SOAP Fault Detail Content" (when applicable)


*/

/**

@page TMSServiceSoap Binding "TMSServiceSoap"

@section TMSServiceSoap_operations Operations of Binding "TMSServiceSoap"

  - @ref __TMSServ2__loginUser

  - @ref __TMSServ2__loginUserByByteArr

  - @ref __TMSServ2__logoutUser

  - @ref __TMSServ2__QueryObjects

  - @ref __TMSServ2__DownloadObjects

  - @ref __TMSServ2__GetObjectsVersion

  - @ref __TMSServ2__GetTowerPartsLabelAndVersionSerial

  - @ref __TMSServ2__MatchTowerParts

  - @ref __TMSServ2__SaveOrUpdateObjects

  - @ref __TMSServ2__DeleteObject

  - @ref __TMSServ2__DownloadFileById

  - @ref __TMSServ2__UploadFileObject

  - @ref __TMSServ2__FinalizeFileObjectData

  - @ref __TMSServ2__OpenFileObjectDataProvider

  - @ref __TMSServ2__OpenTapModelDataProvider

  - @ref __TMSServ2__OpenServerObjectDataProvider

  - @ref __TMSServ2__DownloadFileObject

  - @ref __TMSServ2__CloseFileObjectDataProvider

@section TMSServiceSoap_ports Endpoints of Binding "TMSServiceSoap"

  - http://localhost/TMSServ/TmsService.asmx


*/

/**

@page TMSServiceSoap12 Binding "TMSServiceSoap12"

@section TMSServiceSoap12_operations Operations of Binding "TMSServiceSoap12"

  - @ref __TMSServ3__loginUser

  - @ref __TMSServ3__loginUserByByteArr

  - @ref __TMSServ3__logoutUser

  - @ref __TMSServ3__QueryObjects

  - @ref __TMSServ3__DownloadObjects

  - @ref __TMSServ3__GetObjectsVersion

  - @ref __TMSServ3__GetTowerPartsLabelAndVersionSerial

  - @ref __TMSServ3__MatchTowerParts

  - @ref __TMSServ3__SaveOrUpdateObjects

  - @ref __TMSServ3__DeleteObject

  - @ref __TMSServ3__DownloadFileById

  - @ref __TMSServ3__UploadFileObject

  - @ref __TMSServ3__FinalizeFileObjectData

  - @ref __TMSServ3__OpenFileObjectDataProvider

  - @ref __TMSServ3__OpenTapModelDataProvider

  - @ref __TMSServ3__OpenServerObjectDataProvider

  - @ref __TMSServ3__DownloadFileObject

  - @ref __TMSServ3__CloseFileObjectDataProvider

@section TMSServiceSoap12_ports Endpoints of Binding "TMSServiceSoap12"

  - http://localhost/TMSServ/TmsService.asmx


*/

/******************************************************************************\
 *                                                                            *
 * Service Binding                                                            *
 *   TMSServiceSoap                                                           *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __TMSServ2__loginUser                                                    *
 *                                                                            *
\******************************************************************************/


/** Operation "__TMSServ2__loginUser" of service binding "TMSServiceSoap".

  - SOAP document/literal style messaging

  - Action: "http://xerofox.com/TMSService/loginUser"

  - Addressing input action: "http://xerofox.com/TMSService/loginUser"

  - Addressing output action: "http://xerofox.com/TMSService/loginUserResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___TMSServ2__loginUser(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _TMSServ__loginUser*                TMSServ__loginUser,
    // output parameters:
    _TMSServ__loginUserResponse        &TMSServ__loginUserResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __TMSServ2__loginUser(
    struct soap *soap,
    // input parameters:
    _TMSServ__loginUser*                TMSServ__loginUser,
    // output parameters:
    _TMSServ__loginUserResponse        &TMSServ__loginUserResponse
  );
@endcode

C++ proxy class (defined in soapTMSServiceSoapProxy.h):
@code
  class TMSServiceSoapProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapTMSServiceSoapService.h):
@code
  class TMSServiceSoapService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap TMSServ2 service method-protocol:	loginUser SOAP
//gsoap TMSServ2 service method-style:	loginUser document
//gsoap TMSServ2 service method-encoding:	loginUser literal
//gsoap TMSServ2 service method-input-action:	loginUser http://xerofox.com/TMSService/loginUser
//gsoap TMSServ2 service method-output-action:	loginUser http://xerofox.com/TMSService/loginUserResponse
int __TMSServ2__loginUser(
    _TMSServ__loginUser*                TMSServ__loginUser,	///< Input parameter
    _TMSServ__loginUserResponse        &TMSServ__loginUserResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __TMSServ2__loginUserByByteArr                                           *
 *                                                                            *
\******************************************************************************/


/** Operation "__TMSServ2__loginUserByByteArr" of service binding "TMSServiceSoap".

  - SOAP document/literal style messaging

  - Action: "http://xerofox.com/TMSService/loginUserByByteArr"

  - Addressing input action: "http://xerofox.com/TMSService/loginUserByByteArr"

  - Addressing output action: "http://xerofox.com/TMSService/loginUserByByteArrResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___TMSServ2__loginUserByByteArr(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _TMSServ__loginUserByByteArr*       TMSServ__loginUserByByteArr,
    // output parameters:
    _TMSServ__loginUserByByteArrResponse&TMSServ__loginUserByByteArrResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __TMSServ2__loginUserByByteArr(
    struct soap *soap,
    // input parameters:
    _TMSServ__loginUserByByteArr*       TMSServ__loginUserByByteArr,
    // output parameters:
    _TMSServ__loginUserByByteArrResponse&TMSServ__loginUserByByteArrResponse
  );
@endcode

C++ proxy class (defined in soapTMSServiceSoapProxy.h):
@code
  class TMSServiceSoapProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapTMSServiceSoapService.h):
@code
  class TMSServiceSoapService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap TMSServ2 service method-protocol:	loginUserByByteArr SOAP
//gsoap TMSServ2 service method-style:	loginUserByByteArr document
//gsoap TMSServ2 service method-encoding:	loginUserByByteArr literal
//gsoap TMSServ2 service method-input-action:	loginUserByByteArr http://xerofox.com/TMSService/loginUserByByteArr
//gsoap TMSServ2 service method-output-action:	loginUserByByteArr http://xerofox.com/TMSService/loginUserByByteArrResponse
int __TMSServ2__loginUserByByteArr(
    _TMSServ__loginUserByByteArr*       TMSServ__loginUserByByteArr,	///< Input parameter
    _TMSServ__loginUserByByteArrResponse&TMSServ__loginUserByByteArrResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __TMSServ2__logoutUser                                                   *
 *                                                                            *
\******************************************************************************/


/** Operation "__TMSServ2__logoutUser" of service binding "TMSServiceSoap".

  - SOAP document/literal style messaging

  - Action: "http://xerofox.com/TMSService/logoutUser"

  - Addressing input action: "http://xerofox.com/TMSService/logoutUser"

  - Addressing output action: "http://xerofox.com/TMSService/logoutUserResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___TMSServ2__logoutUser(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _TMSServ__logoutUser*               TMSServ__logoutUser,
    // output parameters:
    _TMSServ__logoutUserResponse       &TMSServ__logoutUserResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __TMSServ2__logoutUser(
    struct soap *soap,
    // input parameters:
    _TMSServ__logoutUser*               TMSServ__logoutUser,
    // output parameters:
    _TMSServ__logoutUserResponse       &TMSServ__logoutUserResponse
  );
@endcode

C++ proxy class (defined in soapTMSServiceSoapProxy.h):
@code
  class TMSServiceSoapProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapTMSServiceSoapService.h):
@code
  class TMSServiceSoapService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap TMSServ2 service method-protocol:	logoutUser SOAP
//gsoap TMSServ2 service method-style:	logoutUser document
//gsoap TMSServ2 service method-encoding:	logoutUser literal
//gsoap TMSServ2 service method-input-action:	logoutUser http://xerofox.com/TMSService/logoutUser
//gsoap TMSServ2 service method-output-action:	logoutUser http://xerofox.com/TMSService/logoutUserResponse
int __TMSServ2__logoutUser(
    _TMSServ__logoutUser*               TMSServ__logoutUser,	///< Input parameter
    _TMSServ__logoutUserResponse       &TMSServ__logoutUserResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __TMSServ2__QueryObjects                                                 *
 *                                                                            *
\******************************************************************************/


/** Operation "__TMSServ2__QueryObjects" of service binding "TMSServiceSoap".

  - SOAP document/literal style messaging

  - Action: "http://xerofox.com/TMSService/QueryObjects"

  - Addressing input action: "http://xerofox.com/TMSService/QueryObjects"

  - Addressing output action: "http://xerofox.com/TMSService/QueryObjectsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___TMSServ2__QueryObjects(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _TMSServ__QueryObjects*             TMSServ__QueryObjects,
    // output parameters:
    _TMSServ__QueryObjectsResponse     &TMSServ__QueryObjectsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __TMSServ2__QueryObjects(
    struct soap *soap,
    // input parameters:
    _TMSServ__QueryObjects*             TMSServ__QueryObjects,
    // output parameters:
    _TMSServ__QueryObjectsResponse     &TMSServ__QueryObjectsResponse
  );
@endcode

C++ proxy class (defined in soapTMSServiceSoapProxy.h):
@code
  class TMSServiceSoapProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapTMSServiceSoapService.h):
@code
  class TMSServiceSoapService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap TMSServ2 service method-protocol:	QueryObjects SOAP
//gsoap TMSServ2 service method-style:	QueryObjects document
//gsoap TMSServ2 service method-encoding:	QueryObjects literal
//gsoap TMSServ2 service method-input-action:	QueryObjects http://xerofox.com/TMSService/QueryObjects
//gsoap TMSServ2 service method-output-action:	QueryObjects http://xerofox.com/TMSService/QueryObjectsResponse
int __TMSServ2__QueryObjects(
    _TMSServ__QueryObjects*             TMSServ__QueryObjects,	///< Input parameter
    _TMSServ__QueryObjectsResponse     &TMSServ__QueryObjectsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __TMSServ2__DownloadObjects                                              *
 *                                                                            *
\******************************************************************************/


/** Operation "__TMSServ2__DownloadObjects" of service binding "TMSServiceSoap".

  - SOAP document/literal style messaging

  - Action: "http://xerofox.com/TMSService/DownloadObjects"

  - Addressing input action: "http://xerofox.com/TMSService/DownloadObjects"

  - Addressing output action: "http://xerofox.com/TMSService/DownloadObjectsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___TMSServ2__DownloadObjects(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _TMSServ__DownloadObjects*          TMSServ__DownloadObjects,
    // output parameters:
    _TMSServ__DownloadObjectsResponse  &TMSServ__DownloadObjectsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __TMSServ2__DownloadObjects(
    struct soap *soap,
    // input parameters:
    _TMSServ__DownloadObjects*          TMSServ__DownloadObjects,
    // output parameters:
    _TMSServ__DownloadObjectsResponse  &TMSServ__DownloadObjectsResponse
  );
@endcode

C++ proxy class (defined in soapTMSServiceSoapProxy.h):
@code
  class TMSServiceSoapProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapTMSServiceSoapService.h):
@code
  class TMSServiceSoapService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap TMSServ2 service method-protocol:	DownloadObjects SOAP
//gsoap TMSServ2 service method-style:	DownloadObjects document
//gsoap TMSServ2 service method-encoding:	DownloadObjects literal
//gsoap TMSServ2 service method-input-action:	DownloadObjects http://xerofox.com/TMSService/DownloadObjects
//gsoap TMSServ2 service method-output-action:	DownloadObjects http://xerofox.com/TMSService/DownloadObjectsResponse
int __TMSServ2__DownloadObjects(
    _TMSServ__DownloadObjects*          TMSServ__DownloadObjects,	///< Input parameter
    _TMSServ__DownloadObjectsResponse  &TMSServ__DownloadObjectsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __TMSServ2__GetObjectsVersion                                            *
 *                                                                            *
\******************************************************************************/


/** Operation "__TMSServ2__GetObjectsVersion" of service binding "TMSServiceSoap".

  - SOAP document/literal style messaging

  - Action: "http://xerofox.com/TMSService/GetObjectsVersion"

  - Addressing input action: "http://xerofox.com/TMSService/GetObjectsVersion"

  - Addressing output action: "http://xerofox.com/TMSService/GetObjectsVersionResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___TMSServ2__GetObjectsVersion(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _TMSServ__GetObjectsVersion*        TMSServ__GetObjectsVersion,
    // output parameters:
    _TMSServ__GetObjectsVersionResponse&TMSServ__GetObjectsVersionResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __TMSServ2__GetObjectsVersion(
    struct soap *soap,
    // input parameters:
    _TMSServ__GetObjectsVersion*        TMSServ__GetObjectsVersion,
    // output parameters:
    _TMSServ__GetObjectsVersionResponse&TMSServ__GetObjectsVersionResponse
  );
@endcode

C++ proxy class (defined in soapTMSServiceSoapProxy.h):
@code
  class TMSServiceSoapProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapTMSServiceSoapService.h):
@code
  class TMSServiceSoapService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap TMSServ2 service method-protocol:	GetObjectsVersion SOAP
//gsoap TMSServ2 service method-style:	GetObjectsVersion document
//gsoap TMSServ2 service method-encoding:	GetObjectsVersion literal
//gsoap TMSServ2 service method-input-action:	GetObjectsVersion http://xerofox.com/TMSService/GetObjectsVersion
//gsoap TMSServ2 service method-output-action:	GetObjectsVersion http://xerofox.com/TMSService/GetObjectsVersionResponse
int __TMSServ2__GetObjectsVersion(
    _TMSServ__GetObjectsVersion*        TMSServ__GetObjectsVersion,	///< Input parameter
    _TMSServ__GetObjectsVersionResponse&TMSServ__GetObjectsVersionResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __TMSServ2__GetTowerPartsLabelAndVersionSerial                           *
 *                                                                            *
\******************************************************************************/


/** Operation "__TMSServ2__GetTowerPartsLabelAndVersionSerial" of service binding "TMSServiceSoap".

  - SOAP document/literal style messaging

  - Action: "http://xerofox.com/TMSService/GetTowerPartsLabelAndVersionSerial"

  - Addressing input action: "http://xerofox.com/TMSService/GetTowerPartsLabelAndVersionSerial"

  - Addressing output action: "http://xerofox.com/TMSService/GetTowerPartsLabelAndVersionSerialResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___TMSServ2__GetTowerPartsLabelAndVersionSerial(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _TMSServ__GetTowerPartsLabelAndVersionSerial* TMSServ__GetTowerPartsLabelAndVersionSerial,
    // output parameters:
    _TMSServ__GetTowerPartsLabelAndVersionSerialResponse&TMSServ__GetTowerPartsLabelAndVersionSerialResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __TMSServ2__GetTowerPartsLabelAndVersionSerial(
    struct soap *soap,
    // input parameters:
    _TMSServ__GetTowerPartsLabelAndVersionSerial* TMSServ__GetTowerPartsLabelAndVersionSerial,
    // output parameters:
    _TMSServ__GetTowerPartsLabelAndVersionSerialResponse&TMSServ__GetTowerPartsLabelAndVersionSerialResponse
  );
@endcode

C++ proxy class (defined in soapTMSServiceSoapProxy.h):
@code
  class TMSServiceSoapProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapTMSServiceSoapService.h):
@code
  class TMSServiceSoapService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap TMSServ2 service method-protocol:	GetTowerPartsLabelAndVersionSerial SOAP
//gsoap TMSServ2 service method-style:	GetTowerPartsLabelAndVersionSerial document
//gsoap TMSServ2 service method-encoding:	GetTowerPartsLabelAndVersionSerial literal
//gsoap TMSServ2 service method-input-action:	GetTowerPartsLabelAndVersionSerial http://xerofox.com/TMSService/GetTowerPartsLabelAndVersionSerial
//gsoap TMSServ2 service method-output-action:	GetTowerPartsLabelAndVersionSerial http://xerofox.com/TMSService/GetTowerPartsLabelAndVersionSerialResponse
int __TMSServ2__GetTowerPartsLabelAndVersionSerial(
    _TMSServ__GetTowerPartsLabelAndVersionSerial* TMSServ__GetTowerPartsLabelAndVersionSerial,	///< Input parameter
    _TMSServ__GetTowerPartsLabelAndVersionSerialResponse&TMSServ__GetTowerPartsLabelAndVersionSerialResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __TMSServ2__MatchTowerParts                                              *
 *                                                                            *
\******************************************************************************/


/** Operation "__TMSServ2__MatchTowerParts" of service binding "TMSServiceSoap".

  - SOAP document/literal style messaging

  - Action: "http://xerofox.com/TMSService/MatchTowerParts"

  - Addressing input action: "http://xerofox.com/TMSService/MatchTowerParts"

  - Addressing output action: "http://xerofox.com/TMSService/MatchTowerPartsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___TMSServ2__MatchTowerParts(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _TMSServ__MatchTowerParts*          TMSServ__MatchTowerParts,
    // output parameters:
    _TMSServ__MatchTowerPartsResponse  &TMSServ__MatchTowerPartsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __TMSServ2__MatchTowerParts(
    struct soap *soap,
    // input parameters:
    _TMSServ__MatchTowerParts*          TMSServ__MatchTowerParts,
    // output parameters:
    _TMSServ__MatchTowerPartsResponse  &TMSServ__MatchTowerPartsResponse
  );
@endcode

C++ proxy class (defined in soapTMSServiceSoapProxy.h):
@code
  class TMSServiceSoapProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapTMSServiceSoapService.h):
@code
  class TMSServiceSoapService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap TMSServ2 service method-protocol:	MatchTowerParts SOAP
//gsoap TMSServ2 service method-style:	MatchTowerParts document
//gsoap TMSServ2 service method-encoding:	MatchTowerParts literal
//gsoap TMSServ2 service method-input-action:	MatchTowerParts http://xerofox.com/TMSService/MatchTowerParts
//gsoap TMSServ2 service method-output-action:	MatchTowerParts http://xerofox.com/TMSService/MatchTowerPartsResponse
int __TMSServ2__MatchTowerParts(
    _TMSServ__MatchTowerParts*          TMSServ__MatchTowerParts,	///< Input parameter
    _TMSServ__MatchTowerPartsResponse  &TMSServ__MatchTowerPartsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __TMSServ2__SaveOrUpdateObjects                                          *
 *                                                                            *
\******************************************************************************/


/** Operation "__TMSServ2__SaveOrUpdateObjects" of service binding "TMSServiceSoap".

  - SOAP document/literal style messaging

  - Action: "http://xerofox.com/TMSService/SaveOrUpdateObjects"

  - Addressing input action: "http://xerofox.com/TMSService/SaveOrUpdateObjects"

  - Addressing output action: "http://xerofox.com/TMSService/SaveOrUpdateObjectsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___TMSServ2__SaveOrUpdateObjects(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _TMSServ__SaveOrUpdateObjects*      TMSServ__SaveOrUpdateObjects,
    // output parameters:
    _TMSServ__SaveOrUpdateObjectsResponse&TMSServ__SaveOrUpdateObjectsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __TMSServ2__SaveOrUpdateObjects(
    struct soap *soap,
    // input parameters:
    _TMSServ__SaveOrUpdateObjects*      TMSServ__SaveOrUpdateObjects,
    // output parameters:
    _TMSServ__SaveOrUpdateObjectsResponse&TMSServ__SaveOrUpdateObjectsResponse
  );
@endcode

C++ proxy class (defined in soapTMSServiceSoapProxy.h):
@code
  class TMSServiceSoapProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapTMSServiceSoapService.h):
@code
  class TMSServiceSoapService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap TMSServ2 service method-protocol:	SaveOrUpdateObjects SOAP
//gsoap TMSServ2 service method-style:	SaveOrUpdateObjects document
//gsoap TMSServ2 service method-encoding:	SaveOrUpdateObjects literal
//gsoap TMSServ2 service method-input-action:	SaveOrUpdateObjects http://xerofox.com/TMSService/SaveOrUpdateObjects
//gsoap TMSServ2 service method-output-action:	SaveOrUpdateObjects http://xerofox.com/TMSService/SaveOrUpdateObjectsResponse
int __TMSServ2__SaveOrUpdateObjects(
    _TMSServ__SaveOrUpdateObjects*      TMSServ__SaveOrUpdateObjects,	///< Input parameter
    _TMSServ__SaveOrUpdateObjectsResponse&TMSServ__SaveOrUpdateObjectsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __TMSServ2__DeleteObject                                                 *
 *                                                                            *
\******************************************************************************/


/** Operation "__TMSServ2__DeleteObject" of service binding "TMSServiceSoap".

  - SOAP document/literal style messaging

  - Action: "http://xerofox.com/TMSService/DeleteObject"

  - Addressing input action: "http://xerofox.com/TMSService/DeleteObject"

  - Addressing output action: "http://xerofox.com/TMSService/DeleteObjectResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___TMSServ2__DeleteObject(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _TMSServ__DeleteObject*             TMSServ__DeleteObject,
    // output parameters:
    _TMSServ__DeleteObjectResponse     &TMSServ__DeleteObjectResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __TMSServ2__DeleteObject(
    struct soap *soap,
    // input parameters:
    _TMSServ__DeleteObject*             TMSServ__DeleteObject,
    // output parameters:
    _TMSServ__DeleteObjectResponse     &TMSServ__DeleteObjectResponse
  );
@endcode

C++ proxy class (defined in soapTMSServiceSoapProxy.h):
@code
  class TMSServiceSoapProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapTMSServiceSoapService.h):
@code
  class TMSServiceSoapService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap TMSServ2 service method-protocol:	DeleteObject SOAP
//gsoap TMSServ2 service method-style:	DeleteObject document
//gsoap TMSServ2 service method-encoding:	DeleteObject literal
//gsoap TMSServ2 service method-input-action:	DeleteObject http://xerofox.com/TMSService/DeleteObject
//gsoap TMSServ2 service method-output-action:	DeleteObject http://xerofox.com/TMSService/DeleteObjectResponse
int __TMSServ2__DeleteObject(
    _TMSServ__DeleteObject*             TMSServ__DeleteObject,	///< Input parameter
    _TMSServ__DeleteObjectResponse     &TMSServ__DeleteObjectResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __TMSServ2__DownloadFileById                                             *
 *                                                                            *
\******************************************************************************/


/** Operation "__TMSServ2__DownloadFileById" of service binding "TMSServiceSoap".

  - SOAP document/literal style messaging

  - Action: "http://xerofox.com/TMSService/DownloadFileById"

  - Addressing input action: "http://xerofox.com/TMSService/DownloadFileById"

  - Addressing output action: "http://xerofox.com/TMSService/DownloadFileByIdResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___TMSServ2__DownloadFileById(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _TMSServ__DownloadFileById*         TMSServ__DownloadFileById,
    // output parameters:
    _TMSServ__DownloadFileByIdResponse &TMSServ__DownloadFileByIdResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __TMSServ2__DownloadFileById(
    struct soap *soap,
    // input parameters:
    _TMSServ__DownloadFileById*         TMSServ__DownloadFileById,
    // output parameters:
    _TMSServ__DownloadFileByIdResponse &TMSServ__DownloadFileByIdResponse
  );
@endcode

C++ proxy class (defined in soapTMSServiceSoapProxy.h):
@code
  class TMSServiceSoapProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapTMSServiceSoapService.h):
@code
  class TMSServiceSoapService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap TMSServ2 service method-protocol:	DownloadFileById SOAP
//gsoap TMSServ2 service method-style:	DownloadFileById document
//gsoap TMSServ2 service method-encoding:	DownloadFileById literal
//gsoap TMSServ2 service method-input-action:	DownloadFileById http://xerofox.com/TMSService/DownloadFileById
//gsoap TMSServ2 service method-output-action:	DownloadFileById http://xerofox.com/TMSService/DownloadFileByIdResponse
int __TMSServ2__DownloadFileById(
    _TMSServ__DownloadFileById*         TMSServ__DownloadFileById,	///< Input parameter
    _TMSServ__DownloadFileByIdResponse &TMSServ__DownloadFileByIdResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __TMSServ2__UploadFileObject                                             *
 *                                                                            *
\******************************************************************************/


/** Operation "__TMSServ2__UploadFileObject" of service binding "TMSServiceSoap".

  - SOAP document/literal style messaging

  - Action: "http://xerofox.com/TMSService/UploadFileObject"

  - Addressing input action: "http://xerofox.com/TMSService/UploadFileObject"

  - Addressing output action: "http://xerofox.com/TMSService/UploadFileObjectResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___TMSServ2__UploadFileObject(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _TMSServ__UploadFileObject*         TMSServ__UploadFileObject,
    // output parameters:
    _TMSServ__UploadFileObjectResponse &TMSServ__UploadFileObjectResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __TMSServ2__UploadFileObject(
    struct soap *soap,
    // input parameters:
    _TMSServ__UploadFileObject*         TMSServ__UploadFileObject,
    // output parameters:
    _TMSServ__UploadFileObjectResponse &TMSServ__UploadFileObjectResponse
  );
@endcode

C++ proxy class (defined in soapTMSServiceSoapProxy.h):
@code
  class TMSServiceSoapProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapTMSServiceSoapService.h):
@code
  class TMSServiceSoapService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap TMSServ2 service method-protocol:	UploadFileObject SOAP
//gsoap TMSServ2 service method-style:	UploadFileObject document
//gsoap TMSServ2 service method-encoding:	UploadFileObject literal
//gsoap TMSServ2 service method-input-action:	UploadFileObject http://xerofox.com/TMSService/UploadFileObject
//gsoap TMSServ2 service method-output-action:	UploadFileObject http://xerofox.com/TMSService/UploadFileObjectResponse
int __TMSServ2__UploadFileObject(
    _TMSServ__UploadFileObject*         TMSServ__UploadFileObject,	///< Input parameter
    _TMSServ__UploadFileObjectResponse &TMSServ__UploadFileObjectResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __TMSServ2__FinalizeFileObjectData                                       *
 *                                                                            *
\******************************************************************************/


/** Operation "__TMSServ2__FinalizeFileObjectData" of service binding "TMSServiceSoap".

  - SOAP document/literal style messaging

  - Action: "http://xerofox.com/TMSService/FinalizeFileObjectData"

  - Addressing input action: "http://xerofox.com/TMSService/FinalizeFileObjectData"

  - Addressing output action: "http://xerofox.com/TMSService/FinalizeFileObjectDataResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___TMSServ2__FinalizeFileObjectData(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _TMSServ__FinalizeFileObjectData*   TMSServ__FinalizeFileObjectData,
    // output parameters:
    _TMSServ__FinalizeFileObjectDataResponse&TMSServ__FinalizeFileObjectDataResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __TMSServ2__FinalizeFileObjectData(
    struct soap *soap,
    // input parameters:
    _TMSServ__FinalizeFileObjectData*   TMSServ__FinalizeFileObjectData,
    // output parameters:
    _TMSServ__FinalizeFileObjectDataResponse&TMSServ__FinalizeFileObjectDataResponse
  );
@endcode

C++ proxy class (defined in soapTMSServiceSoapProxy.h):
@code
  class TMSServiceSoapProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapTMSServiceSoapService.h):
@code
  class TMSServiceSoapService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap TMSServ2 service method-protocol:	FinalizeFileObjectData SOAP
//gsoap TMSServ2 service method-style:	FinalizeFileObjectData document
//gsoap TMSServ2 service method-encoding:	FinalizeFileObjectData literal
//gsoap TMSServ2 service method-input-action:	FinalizeFileObjectData http://xerofox.com/TMSService/FinalizeFileObjectData
//gsoap TMSServ2 service method-output-action:	FinalizeFileObjectData http://xerofox.com/TMSService/FinalizeFileObjectDataResponse
int __TMSServ2__FinalizeFileObjectData(
    _TMSServ__FinalizeFileObjectData*   TMSServ__FinalizeFileObjectData,	///< Input parameter
    _TMSServ__FinalizeFileObjectDataResponse&TMSServ__FinalizeFileObjectDataResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __TMSServ2__OpenFileObjectDataProvider                                   *
 *                                                                            *
\******************************************************************************/


/** Operation "__TMSServ2__OpenFileObjectDataProvider" of service binding "TMSServiceSoap".

  - SOAP document/literal style messaging

  - Action: "http://xerofox.com/TMSService/OpenFileObjectDataProvider"

  - Addressing input action: "http://xerofox.com/TMSService/OpenFileObjectDataProvider"

  - Addressing output action: "http://xerofox.com/TMSService/OpenFileObjectDataProviderResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___TMSServ2__OpenFileObjectDataProvider(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _TMSServ__OpenFileObjectDataProvider* TMSServ__OpenFileObjectDataProvider,
    // output parameters:
    _TMSServ__OpenFileObjectDataProviderResponse&TMSServ__OpenFileObjectDataProviderResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __TMSServ2__OpenFileObjectDataProvider(
    struct soap *soap,
    // input parameters:
    _TMSServ__OpenFileObjectDataProvider* TMSServ__OpenFileObjectDataProvider,
    // output parameters:
    _TMSServ__OpenFileObjectDataProviderResponse&TMSServ__OpenFileObjectDataProviderResponse
  );
@endcode

C++ proxy class (defined in soapTMSServiceSoapProxy.h):
@code
  class TMSServiceSoapProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapTMSServiceSoapService.h):
@code
  class TMSServiceSoapService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap TMSServ2 service method-protocol:	OpenFileObjectDataProvider SOAP
//gsoap TMSServ2 service method-style:	OpenFileObjectDataProvider document
//gsoap TMSServ2 service method-encoding:	OpenFileObjectDataProvider literal
//gsoap TMSServ2 service method-input-action:	OpenFileObjectDataProvider http://xerofox.com/TMSService/OpenFileObjectDataProvider
//gsoap TMSServ2 service method-output-action:	OpenFileObjectDataProvider http://xerofox.com/TMSService/OpenFileObjectDataProviderResponse
int __TMSServ2__OpenFileObjectDataProvider(
    _TMSServ__OpenFileObjectDataProvider* TMSServ__OpenFileObjectDataProvider,	///< Input parameter
    _TMSServ__OpenFileObjectDataProviderResponse&TMSServ__OpenFileObjectDataProviderResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __TMSServ2__OpenTapModelDataProvider                                     *
 *                                                                            *
\******************************************************************************/


/** Operation "__TMSServ2__OpenTapModelDataProvider" of service binding "TMSServiceSoap".

  - SOAP document/literal style messaging

  - Action: "http://xerofox.com/TMSService/OpenTapModelDataProvider"

  - Addressing input action: "http://xerofox.com/TMSService/OpenTapModelDataProvider"

  - Addressing output action: "http://xerofox.com/TMSService/OpenTapModelDataProviderResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___TMSServ2__OpenTapModelDataProvider(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _TMSServ__OpenTapModelDataProvider* TMSServ__OpenTapModelDataProvider,
    // output parameters:
    _TMSServ__OpenTapModelDataProviderResponse&TMSServ__OpenTapModelDataProviderResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __TMSServ2__OpenTapModelDataProvider(
    struct soap *soap,
    // input parameters:
    _TMSServ__OpenTapModelDataProvider* TMSServ__OpenTapModelDataProvider,
    // output parameters:
    _TMSServ__OpenTapModelDataProviderResponse&TMSServ__OpenTapModelDataProviderResponse
  );
@endcode

C++ proxy class (defined in soapTMSServiceSoapProxy.h):
@code
  class TMSServiceSoapProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapTMSServiceSoapService.h):
@code
  class TMSServiceSoapService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap TMSServ2 service method-protocol:	OpenTapModelDataProvider SOAP
//gsoap TMSServ2 service method-style:	OpenTapModelDataProvider document
//gsoap TMSServ2 service method-encoding:	OpenTapModelDataProvider literal
//gsoap TMSServ2 service method-input-action:	OpenTapModelDataProvider http://xerofox.com/TMSService/OpenTapModelDataProvider
//gsoap TMSServ2 service method-output-action:	OpenTapModelDataProvider http://xerofox.com/TMSService/OpenTapModelDataProviderResponse
int __TMSServ2__OpenTapModelDataProvider(
    _TMSServ__OpenTapModelDataProvider* TMSServ__OpenTapModelDataProvider,	///< Input parameter
    _TMSServ__OpenTapModelDataProviderResponse&TMSServ__OpenTapModelDataProviderResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __TMSServ2__OpenServerObjectDataProvider                                 *
 *                                                                            *
\******************************************************************************/


/** Operation "__TMSServ2__OpenServerObjectDataProvider" of service binding "TMSServiceSoap".

  - SOAP document/literal style messaging

  - Action: "http://xerofox.com/TMSService/OpenServerObjectDataProvider"

  - Addressing input action: "http://xerofox.com/TMSService/OpenServerObjectDataProvider"

  - Addressing output action: "http://xerofox.com/TMSService/OpenServerObjectDataProviderResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___TMSServ2__OpenServerObjectDataProvider(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _TMSServ__OpenServerObjectDataProvider* TMSServ__OpenServerObjectDataProvider,
    // output parameters:
    _TMSServ__OpenServerObjectDataProviderResponse&TMSServ__OpenServerObjectDataProviderResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __TMSServ2__OpenServerObjectDataProvider(
    struct soap *soap,
    // input parameters:
    _TMSServ__OpenServerObjectDataProvider* TMSServ__OpenServerObjectDataProvider,
    // output parameters:
    _TMSServ__OpenServerObjectDataProviderResponse&TMSServ__OpenServerObjectDataProviderResponse
  );
@endcode

C++ proxy class (defined in soapTMSServiceSoapProxy.h):
@code
  class TMSServiceSoapProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapTMSServiceSoapService.h):
@code
  class TMSServiceSoapService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap TMSServ2 service method-protocol:	OpenServerObjectDataProvider SOAP
//gsoap TMSServ2 service method-style:	OpenServerObjectDataProvider document
//gsoap TMSServ2 service method-encoding:	OpenServerObjectDataProvider literal
//gsoap TMSServ2 service method-input-action:	OpenServerObjectDataProvider http://xerofox.com/TMSService/OpenServerObjectDataProvider
//gsoap TMSServ2 service method-output-action:	OpenServerObjectDataProvider http://xerofox.com/TMSService/OpenServerObjectDataProviderResponse
int __TMSServ2__OpenServerObjectDataProvider(
    _TMSServ__OpenServerObjectDataProvider* TMSServ__OpenServerObjectDataProvider,	///< Input parameter
    _TMSServ__OpenServerObjectDataProviderResponse&TMSServ__OpenServerObjectDataProviderResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __TMSServ2__DownloadFileObject                                           *
 *                                                                            *
\******************************************************************************/


/** Operation "__TMSServ2__DownloadFileObject" of service binding "TMSServiceSoap".

  - SOAP document/literal style messaging

  - Action: "http://xerofox.com/TMSService/DownloadFileObject"

  - Addressing input action: "http://xerofox.com/TMSService/DownloadFileObject"

  - Addressing output action: "http://xerofox.com/TMSService/DownloadFileObjectResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___TMSServ2__DownloadFileObject(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _TMSServ__DownloadFileObject*       TMSServ__DownloadFileObject,
    // output parameters:
    _TMSServ__DownloadFileObjectResponse&TMSServ__DownloadFileObjectResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __TMSServ2__DownloadFileObject(
    struct soap *soap,
    // input parameters:
    _TMSServ__DownloadFileObject*       TMSServ__DownloadFileObject,
    // output parameters:
    _TMSServ__DownloadFileObjectResponse&TMSServ__DownloadFileObjectResponse
  );
@endcode

C++ proxy class (defined in soapTMSServiceSoapProxy.h):
@code
  class TMSServiceSoapProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapTMSServiceSoapService.h):
@code
  class TMSServiceSoapService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap TMSServ2 service method-protocol:	DownloadFileObject SOAP
//gsoap TMSServ2 service method-style:	DownloadFileObject document
//gsoap TMSServ2 service method-encoding:	DownloadFileObject literal
//gsoap TMSServ2 service method-input-action:	DownloadFileObject http://xerofox.com/TMSService/DownloadFileObject
//gsoap TMSServ2 service method-output-action:	DownloadFileObject http://xerofox.com/TMSService/DownloadFileObjectResponse
int __TMSServ2__DownloadFileObject(
    _TMSServ__DownloadFileObject*       TMSServ__DownloadFileObject,	///< Input parameter
    _TMSServ__DownloadFileObjectResponse&TMSServ__DownloadFileObjectResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __TMSServ2__CloseFileObjectDataProvider                                  *
 *                                                                            *
\******************************************************************************/


/** Operation "__TMSServ2__CloseFileObjectDataProvider" of service binding "TMSServiceSoap".

  - SOAP document/literal style messaging

  - Action: "http://xerofox.com/TMSService/CloseFileObjectDataProvider"

  - Addressing input action: "http://xerofox.com/TMSService/CloseFileObjectDataProvider"

  - Addressing output action: "http://xerofox.com/TMSService/CloseFileObjectDataProviderResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___TMSServ2__CloseFileObjectDataProvider(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _TMSServ__CloseFileObjectDataProvider* TMSServ__CloseFileObjectDataProvider,
    // output parameters:
    _TMSServ__CloseFileObjectDataProviderResponse&TMSServ__CloseFileObjectDataProviderResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __TMSServ2__CloseFileObjectDataProvider(
    struct soap *soap,
    // input parameters:
    _TMSServ__CloseFileObjectDataProvider* TMSServ__CloseFileObjectDataProvider,
    // output parameters:
    _TMSServ__CloseFileObjectDataProviderResponse&TMSServ__CloseFileObjectDataProviderResponse
  );
@endcode

C++ proxy class (defined in soapTMSServiceSoapProxy.h):
@code
  class TMSServiceSoapProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapTMSServiceSoapService.h):
@code
  class TMSServiceSoapService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap TMSServ2 service method-protocol:	CloseFileObjectDataProvider SOAP
//gsoap TMSServ2 service method-style:	CloseFileObjectDataProvider document
//gsoap TMSServ2 service method-encoding:	CloseFileObjectDataProvider literal
//gsoap TMSServ2 service method-input-action:	CloseFileObjectDataProvider http://xerofox.com/TMSService/CloseFileObjectDataProvider
//gsoap TMSServ2 service method-output-action:	CloseFileObjectDataProvider http://xerofox.com/TMSService/CloseFileObjectDataProviderResponse
int __TMSServ2__CloseFileObjectDataProvider(
    _TMSServ__CloseFileObjectDataProvider* TMSServ__CloseFileObjectDataProvider,	///< Input parameter
    _TMSServ__CloseFileObjectDataProviderResponse&TMSServ__CloseFileObjectDataProviderResponse	///< Output parameter
);

/**

@page TMSServiceSoap Binding "TMSServiceSoap"

@section TMSServiceSoap_policy_enablers Policy Enablers of Binding "TMSServiceSoap"

Based on policies, this service imports

  - WS-Policy reminders and enablers:
    - WS-Addressing 1.0 (2005/08, accepts 2004/08):
	@code
	#import "wsa5.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsaapi.h"
	soap_register_plugin(soap, soap_wsa); // register the wsa plugin in your code
	// See the user guide gsoap/doc/wsa/html/index.html
	@endcode
    - WS-Addressing (2004/08):
	@code
	#import "wsa.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsaapi.h"
	soap_register_plugin(soap, soap_wsa); // register the wsa plugin in your code
	// See the user guide gsoap/doc/wsa/html/index.html
	@endcode
    - WS-ReliableMessaging 1.0:
	@code
	#import "wsrm5.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsrmapi.h"
	soap_register_plugin(soap, soap_wsa); // register the wsa plugin in your code
	soap_register_plugin(soap, soap_wsrm); // register the wsrm plugin in your code
	// See the user guide gsoap/doc/wsrm/html/index.html
	@endcode
    - WS-ReliableMessaging 1.1:
	@code
	#import "wsrm.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsrmapi.h"
	soap_register_plugin(soap, soap_wsa); // register the wsa plugin in your code
	soap_register_plugin(soap, soap_wsrm); // register the wsrm plugin in your code
	// See the user guide gsoap/doc/wsrm/html/index.html
	@endcode
    - WS-Security (SOAP Message Security) 1.0 (accepts 1.1):
	@code
	#import "wsse.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsseapi.h"
	soap_register_plugin(soap, soap_wsse); // register the wsse plugin in your code
	// See the user guide gsoap/doc/wsse/html/index.html
	@endcode
    - WS-Security (SOAP Message Security) 1.1 (accepts 1.0):
	@code
	#import "wsse11.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsseapi.h"
	soap_register_plugin(soap, soap_wsse); // register the wsse plugin in your code
	// See the user guide gsoap/doc/wsse/html/index.html
	@endcode
    - HTTP Digest Authentication:
	@code
	#include "plugin/httpda.h"
	soap_register_plugin(soap, soap_http_da); // register the HTTP DA plugin in your code
	// See the user guide gsoap/doc/httpda/html/index.html
	@endcode
*/


/******************************************************************************\
 *                                                                            *
 * Service Binding                                                            *
 *   TMSServiceSoap12                                                         *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __TMSServ3__loginUser                                                    *
 *                                                                            *
\******************************************************************************/


/** Operation "__TMSServ3__loginUser" of service binding "TMSServiceSoap12".

  - SOAP document/literal style messaging

  - Action: "http://xerofox.com/TMSService/loginUser"

  - Addressing input action: "http://xerofox.com/TMSService/loginUser"

  - Addressing output action: "http://xerofox.com/TMSService/loginUserResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___TMSServ3__loginUser(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _TMSServ__loginUser*                TMSServ__loginUser,
    // output parameters:
    _TMSServ__loginUserResponse        &TMSServ__loginUserResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __TMSServ3__loginUser(
    struct soap *soap,
    // input parameters:
    _TMSServ__loginUser*                TMSServ__loginUser,
    // output parameters:
    _TMSServ__loginUserResponse        &TMSServ__loginUserResponse
  );
@endcode

C++ proxy class (defined in soapTMSServiceSoap12Proxy.h):
@code
  class TMSServiceSoap12Proxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapTMSServiceSoap12Service.h):
@code
  class TMSServiceSoap12Service;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap TMSServ3 service method-protocol:	loginUser SOAP
//gsoap TMSServ3 service method-style:	loginUser document
//gsoap TMSServ3 service method-encoding:	loginUser literal
//gsoap TMSServ3 service method-input-action:	loginUser http://xerofox.com/TMSService/loginUser
//gsoap TMSServ3 service method-output-action:	loginUser http://xerofox.com/TMSService/loginUserResponse
int __TMSServ3__loginUser(
    _TMSServ__loginUser*                TMSServ__loginUser,	///< Input parameter
    _TMSServ__loginUserResponse        &TMSServ__loginUserResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __TMSServ3__loginUserByByteArr                                           *
 *                                                                            *
\******************************************************************************/


/** Operation "__TMSServ3__loginUserByByteArr" of service binding "TMSServiceSoap12".

  - SOAP document/literal style messaging

  - Action: "http://xerofox.com/TMSService/loginUserByByteArr"

  - Addressing input action: "http://xerofox.com/TMSService/loginUserByByteArr"

  - Addressing output action: "http://xerofox.com/TMSService/loginUserByByteArrResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___TMSServ3__loginUserByByteArr(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _TMSServ__loginUserByByteArr*       TMSServ__loginUserByByteArr,
    // output parameters:
    _TMSServ__loginUserByByteArrResponse&TMSServ__loginUserByByteArrResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __TMSServ3__loginUserByByteArr(
    struct soap *soap,
    // input parameters:
    _TMSServ__loginUserByByteArr*       TMSServ__loginUserByByteArr,
    // output parameters:
    _TMSServ__loginUserByByteArrResponse&TMSServ__loginUserByByteArrResponse
  );
@endcode

C++ proxy class (defined in soapTMSServiceSoap12Proxy.h):
@code
  class TMSServiceSoap12Proxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapTMSServiceSoap12Service.h):
@code
  class TMSServiceSoap12Service;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap TMSServ3 service method-protocol:	loginUserByByteArr SOAP
//gsoap TMSServ3 service method-style:	loginUserByByteArr document
//gsoap TMSServ3 service method-encoding:	loginUserByByteArr literal
//gsoap TMSServ3 service method-input-action:	loginUserByByteArr http://xerofox.com/TMSService/loginUserByByteArr
//gsoap TMSServ3 service method-output-action:	loginUserByByteArr http://xerofox.com/TMSService/loginUserByByteArrResponse
int __TMSServ3__loginUserByByteArr(
    _TMSServ__loginUserByByteArr*       TMSServ__loginUserByByteArr,	///< Input parameter
    _TMSServ__loginUserByByteArrResponse&TMSServ__loginUserByByteArrResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __TMSServ3__logoutUser                                                   *
 *                                                                            *
\******************************************************************************/


/** Operation "__TMSServ3__logoutUser" of service binding "TMSServiceSoap12".

  - SOAP document/literal style messaging

  - Action: "http://xerofox.com/TMSService/logoutUser"

  - Addressing input action: "http://xerofox.com/TMSService/logoutUser"

  - Addressing output action: "http://xerofox.com/TMSService/logoutUserResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___TMSServ3__logoutUser(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _TMSServ__logoutUser*               TMSServ__logoutUser,
    // output parameters:
    _TMSServ__logoutUserResponse       &TMSServ__logoutUserResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __TMSServ3__logoutUser(
    struct soap *soap,
    // input parameters:
    _TMSServ__logoutUser*               TMSServ__logoutUser,
    // output parameters:
    _TMSServ__logoutUserResponse       &TMSServ__logoutUserResponse
  );
@endcode

C++ proxy class (defined in soapTMSServiceSoap12Proxy.h):
@code
  class TMSServiceSoap12Proxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapTMSServiceSoap12Service.h):
@code
  class TMSServiceSoap12Service;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap TMSServ3 service method-protocol:	logoutUser SOAP
//gsoap TMSServ3 service method-style:	logoutUser document
//gsoap TMSServ3 service method-encoding:	logoutUser literal
//gsoap TMSServ3 service method-input-action:	logoutUser http://xerofox.com/TMSService/logoutUser
//gsoap TMSServ3 service method-output-action:	logoutUser http://xerofox.com/TMSService/logoutUserResponse
int __TMSServ3__logoutUser(
    _TMSServ__logoutUser*               TMSServ__logoutUser,	///< Input parameter
    _TMSServ__logoutUserResponse       &TMSServ__logoutUserResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __TMSServ3__QueryObjects                                                 *
 *                                                                            *
\******************************************************************************/


/** Operation "__TMSServ3__QueryObjects" of service binding "TMSServiceSoap12".

  - SOAP document/literal style messaging

  - Action: "http://xerofox.com/TMSService/QueryObjects"

  - Addressing input action: "http://xerofox.com/TMSService/QueryObjects"

  - Addressing output action: "http://xerofox.com/TMSService/QueryObjectsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___TMSServ3__QueryObjects(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _TMSServ__QueryObjects*             TMSServ__QueryObjects,
    // output parameters:
    _TMSServ__QueryObjectsResponse     &TMSServ__QueryObjectsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __TMSServ3__QueryObjects(
    struct soap *soap,
    // input parameters:
    _TMSServ__QueryObjects*             TMSServ__QueryObjects,
    // output parameters:
    _TMSServ__QueryObjectsResponse     &TMSServ__QueryObjectsResponse
  );
@endcode

C++ proxy class (defined in soapTMSServiceSoap12Proxy.h):
@code
  class TMSServiceSoap12Proxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapTMSServiceSoap12Service.h):
@code
  class TMSServiceSoap12Service;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap TMSServ3 service method-protocol:	QueryObjects SOAP
//gsoap TMSServ3 service method-style:	QueryObjects document
//gsoap TMSServ3 service method-encoding:	QueryObjects literal
//gsoap TMSServ3 service method-input-action:	QueryObjects http://xerofox.com/TMSService/QueryObjects
//gsoap TMSServ3 service method-output-action:	QueryObjects http://xerofox.com/TMSService/QueryObjectsResponse
int __TMSServ3__QueryObjects(
    _TMSServ__QueryObjects*             TMSServ__QueryObjects,	///< Input parameter
    _TMSServ__QueryObjectsResponse     &TMSServ__QueryObjectsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __TMSServ3__DownloadObjects                                              *
 *                                                                            *
\******************************************************************************/


/** Operation "__TMSServ3__DownloadObjects" of service binding "TMSServiceSoap12".

  - SOAP document/literal style messaging

  - Action: "http://xerofox.com/TMSService/DownloadObjects"

  - Addressing input action: "http://xerofox.com/TMSService/DownloadObjects"

  - Addressing output action: "http://xerofox.com/TMSService/DownloadObjectsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___TMSServ3__DownloadObjects(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _TMSServ__DownloadObjects*          TMSServ__DownloadObjects,
    // output parameters:
    _TMSServ__DownloadObjectsResponse  &TMSServ__DownloadObjectsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __TMSServ3__DownloadObjects(
    struct soap *soap,
    // input parameters:
    _TMSServ__DownloadObjects*          TMSServ__DownloadObjects,
    // output parameters:
    _TMSServ__DownloadObjectsResponse  &TMSServ__DownloadObjectsResponse
  );
@endcode

C++ proxy class (defined in soapTMSServiceSoap12Proxy.h):
@code
  class TMSServiceSoap12Proxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapTMSServiceSoap12Service.h):
@code
  class TMSServiceSoap12Service;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap TMSServ3 service method-protocol:	DownloadObjects SOAP
//gsoap TMSServ3 service method-style:	DownloadObjects document
//gsoap TMSServ3 service method-encoding:	DownloadObjects literal
//gsoap TMSServ3 service method-input-action:	DownloadObjects http://xerofox.com/TMSService/DownloadObjects
//gsoap TMSServ3 service method-output-action:	DownloadObjects http://xerofox.com/TMSService/DownloadObjectsResponse
int __TMSServ3__DownloadObjects(
    _TMSServ__DownloadObjects*          TMSServ__DownloadObjects,	///< Input parameter
    _TMSServ__DownloadObjectsResponse  &TMSServ__DownloadObjectsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __TMSServ3__GetObjectsVersion                                            *
 *                                                                            *
\******************************************************************************/


/** Operation "__TMSServ3__GetObjectsVersion" of service binding "TMSServiceSoap12".

  - SOAP document/literal style messaging

  - Action: "http://xerofox.com/TMSService/GetObjectsVersion"

  - Addressing input action: "http://xerofox.com/TMSService/GetObjectsVersion"

  - Addressing output action: "http://xerofox.com/TMSService/GetObjectsVersionResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___TMSServ3__GetObjectsVersion(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _TMSServ__GetObjectsVersion*        TMSServ__GetObjectsVersion,
    // output parameters:
    _TMSServ__GetObjectsVersionResponse&TMSServ__GetObjectsVersionResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __TMSServ3__GetObjectsVersion(
    struct soap *soap,
    // input parameters:
    _TMSServ__GetObjectsVersion*        TMSServ__GetObjectsVersion,
    // output parameters:
    _TMSServ__GetObjectsVersionResponse&TMSServ__GetObjectsVersionResponse
  );
@endcode

C++ proxy class (defined in soapTMSServiceSoap12Proxy.h):
@code
  class TMSServiceSoap12Proxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapTMSServiceSoap12Service.h):
@code
  class TMSServiceSoap12Service;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap TMSServ3 service method-protocol:	GetObjectsVersion SOAP
//gsoap TMSServ3 service method-style:	GetObjectsVersion document
//gsoap TMSServ3 service method-encoding:	GetObjectsVersion literal
//gsoap TMSServ3 service method-input-action:	GetObjectsVersion http://xerofox.com/TMSService/GetObjectsVersion
//gsoap TMSServ3 service method-output-action:	GetObjectsVersion http://xerofox.com/TMSService/GetObjectsVersionResponse
int __TMSServ3__GetObjectsVersion(
    _TMSServ__GetObjectsVersion*        TMSServ__GetObjectsVersion,	///< Input parameter
    _TMSServ__GetObjectsVersionResponse&TMSServ__GetObjectsVersionResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __TMSServ3__GetTowerPartsLabelAndVersionSerial                           *
 *                                                                            *
\******************************************************************************/


/** Operation "__TMSServ3__GetTowerPartsLabelAndVersionSerial" of service binding "TMSServiceSoap12".

  - SOAP document/literal style messaging

  - Action: "http://xerofox.com/TMSService/GetTowerPartsLabelAndVersionSerial"

  - Addressing input action: "http://xerofox.com/TMSService/GetTowerPartsLabelAndVersionSerial"

  - Addressing output action: "http://xerofox.com/TMSService/GetTowerPartsLabelAndVersionSerialResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___TMSServ3__GetTowerPartsLabelAndVersionSerial(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _TMSServ__GetTowerPartsLabelAndVersionSerial* TMSServ__GetTowerPartsLabelAndVersionSerial,
    // output parameters:
    _TMSServ__GetTowerPartsLabelAndVersionSerialResponse&TMSServ__GetTowerPartsLabelAndVersionSerialResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __TMSServ3__GetTowerPartsLabelAndVersionSerial(
    struct soap *soap,
    // input parameters:
    _TMSServ__GetTowerPartsLabelAndVersionSerial* TMSServ__GetTowerPartsLabelAndVersionSerial,
    // output parameters:
    _TMSServ__GetTowerPartsLabelAndVersionSerialResponse&TMSServ__GetTowerPartsLabelAndVersionSerialResponse
  );
@endcode

C++ proxy class (defined in soapTMSServiceSoap12Proxy.h):
@code
  class TMSServiceSoap12Proxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapTMSServiceSoap12Service.h):
@code
  class TMSServiceSoap12Service;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap TMSServ3 service method-protocol:	GetTowerPartsLabelAndVersionSerial SOAP
//gsoap TMSServ3 service method-style:	GetTowerPartsLabelAndVersionSerial document
//gsoap TMSServ3 service method-encoding:	GetTowerPartsLabelAndVersionSerial literal
//gsoap TMSServ3 service method-input-action:	GetTowerPartsLabelAndVersionSerial http://xerofox.com/TMSService/GetTowerPartsLabelAndVersionSerial
//gsoap TMSServ3 service method-output-action:	GetTowerPartsLabelAndVersionSerial http://xerofox.com/TMSService/GetTowerPartsLabelAndVersionSerialResponse
int __TMSServ3__GetTowerPartsLabelAndVersionSerial(
    _TMSServ__GetTowerPartsLabelAndVersionSerial* TMSServ__GetTowerPartsLabelAndVersionSerial,	///< Input parameter
    _TMSServ__GetTowerPartsLabelAndVersionSerialResponse&TMSServ__GetTowerPartsLabelAndVersionSerialResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __TMSServ3__MatchTowerParts                                              *
 *                                                                            *
\******************************************************************************/


/** Operation "__TMSServ3__MatchTowerParts" of service binding "TMSServiceSoap12".

  - SOAP document/literal style messaging

  - Action: "http://xerofox.com/TMSService/MatchTowerParts"

  - Addressing input action: "http://xerofox.com/TMSService/MatchTowerParts"

  - Addressing output action: "http://xerofox.com/TMSService/MatchTowerPartsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___TMSServ3__MatchTowerParts(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _TMSServ__MatchTowerParts*          TMSServ__MatchTowerParts,
    // output parameters:
    _TMSServ__MatchTowerPartsResponse  &TMSServ__MatchTowerPartsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __TMSServ3__MatchTowerParts(
    struct soap *soap,
    // input parameters:
    _TMSServ__MatchTowerParts*          TMSServ__MatchTowerParts,
    // output parameters:
    _TMSServ__MatchTowerPartsResponse  &TMSServ__MatchTowerPartsResponse
  );
@endcode

C++ proxy class (defined in soapTMSServiceSoap12Proxy.h):
@code
  class TMSServiceSoap12Proxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapTMSServiceSoap12Service.h):
@code
  class TMSServiceSoap12Service;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap TMSServ3 service method-protocol:	MatchTowerParts SOAP
//gsoap TMSServ3 service method-style:	MatchTowerParts document
//gsoap TMSServ3 service method-encoding:	MatchTowerParts literal
//gsoap TMSServ3 service method-input-action:	MatchTowerParts http://xerofox.com/TMSService/MatchTowerParts
//gsoap TMSServ3 service method-output-action:	MatchTowerParts http://xerofox.com/TMSService/MatchTowerPartsResponse
int __TMSServ3__MatchTowerParts(
    _TMSServ__MatchTowerParts*          TMSServ__MatchTowerParts,	///< Input parameter
    _TMSServ__MatchTowerPartsResponse  &TMSServ__MatchTowerPartsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __TMSServ3__SaveOrUpdateObjects                                          *
 *                                                                            *
\******************************************************************************/


/** Operation "__TMSServ3__SaveOrUpdateObjects" of service binding "TMSServiceSoap12".

  - SOAP document/literal style messaging

  - Action: "http://xerofox.com/TMSService/SaveOrUpdateObjects"

  - Addressing input action: "http://xerofox.com/TMSService/SaveOrUpdateObjects"

  - Addressing output action: "http://xerofox.com/TMSService/SaveOrUpdateObjectsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___TMSServ3__SaveOrUpdateObjects(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _TMSServ__SaveOrUpdateObjects*      TMSServ__SaveOrUpdateObjects,
    // output parameters:
    _TMSServ__SaveOrUpdateObjectsResponse&TMSServ__SaveOrUpdateObjectsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __TMSServ3__SaveOrUpdateObjects(
    struct soap *soap,
    // input parameters:
    _TMSServ__SaveOrUpdateObjects*      TMSServ__SaveOrUpdateObjects,
    // output parameters:
    _TMSServ__SaveOrUpdateObjectsResponse&TMSServ__SaveOrUpdateObjectsResponse
  );
@endcode

C++ proxy class (defined in soapTMSServiceSoap12Proxy.h):
@code
  class TMSServiceSoap12Proxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapTMSServiceSoap12Service.h):
@code
  class TMSServiceSoap12Service;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap TMSServ3 service method-protocol:	SaveOrUpdateObjects SOAP
//gsoap TMSServ3 service method-style:	SaveOrUpdateObjects document
//gsoap TMSServ3 service method-encoding:	SaveOrUpdateObjects literal
//gsoap TMSServ3 service method-input-action:	SaveOrUpdateObjects http://xerofox.com/TMSService/SaveOrUpdateObjects
//gsoap TMSServ3 service method-output-action:	SaveOrUpdateObjects http://xerofox.com/TMSService/SaveOrUpdateObjectsResponse
int __TMSServ3__SaveOrUpdateObjects(
    _TMSServ__SaveOrUpdateObjects*      TMSServ__SaveOrUpdateObjects,	///< Input parameter
    _TMSServ__SaveOrUpdateObjectsResponse&TMSServ__SaveOrUpdateObjectsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __TMSServ3__DeleteObject                                                 *
 *                                                                            *
\******************************************************************************/


/** Operation "__TMSServ3__DeleteObject" of service binding "TMSServiceSoap12".

  - SOAP document/literal style messaging

  - Action: "http://xerofox.com/TMSService/DeleteObject"

  - Addressing input action: "http://xerofox.com/TMSService/DeleteObject"

  - Addressing output action: "http://xerofox.com/TMSService/DeleteObjectResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___TMSServ3__DeleteObject(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _TMSServ__DeleteObject*             TMSServ__DeleteObject,
    // output parameters:
    _TMSServ__DeleteObjectResponse     &TMSServ__DeleteObjectResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __TMSServ3__DeleteObject(
    struct soap *soap,
    // input parameters:
    _TMSServ__DeleteObject*             TMSServ__DeleteObject,
    // output parameters:
    _TMSServ__DeleteObjectResponse     &TMSServ__DeleteObjectResponse
  );
@endcode

C++ proxy class (defined in soapTMSServiceSoap12Proxy.h):
@code
  class TMSServiceSoap12Proxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapTMSServiceSoap12Service.h):
@code
  class TMSServiceSoap12Service;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap TMSServ3 service method-protocol:	DeleteObject SOAP
//gsoap TMSServ3 service method-style:	DeleteObject document
//gsoap TMSServ3 service method-encoding:	DeleteObject literal
//gsoap TMSServ3 service method-input-action:	DeleteObject http://xerofox.com/TMSService/DeleteObject
//gsoap TMSServ3 service method-output-action:	DeleteObject http://xerofox.com/TMSService/DeleteObjectResponse
int __TMSServ3__DeleteObject(
    _TMSServ__DeleteObject*             TMSServ__DeleteObject,	///< Input parameter
    _TMSServ__DeleteObjectResponse     &TMSServ__DeleteObjectResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __TMSServ3__DownloadFileById                                             *
 *                                                                            *
\******************************************************************************/


/** Operation "__TMSServ3__DownloadFileById" of service binding "TMSServiceSoap12".

  - SOAP document/literal style messaging

  - Action: "http://xerofox.com/TMSService/DownloadFileById"

  - Addressing input action: "http://xerofox.com/TMSService/DownloadFileById"

  - Addressing output action: "http://xerofox.com/TMSService/DownloadFileByIdResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___TMSServ3__DownloadFileById(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _TMSServ__DownloadFileById*         TMSServ__DownloadFileById,
    // output parameters:
    _TMSServ__DownloadFileByIdResponse &TMSServ__DownloadFileByIdResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __TMSServ3__DownloadFileById(
    struct soap *soap,
    // input parameters:
    _TMSServ__DownloadFileById*         TMSServ__DownloadFileById,
    // output parameters:
    _TMSServ__DownloadFileByIdResponse &TMSServ__DownloadFileByIdResponse
  );
@endcode

C++ proxy class (defined in soapTMSServiceSoap12Proxy.h):
@code
  class TMSServiceSoap12Proxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapTMSServiceSoap12Service.h):
@code
  class TMSServiceSoap12Service;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap TMSServ3 service method-protocol:	DownloadFileById SOAP
//gsoap TMSServ3 service method-style:	DownloadFileById document
//gsoap TMSServ3 service method-encoding:	DownloadFileById literal
//gsoap TMSServ3 service method-input-action:	DownloadFileById http://xerofox.com/TMSService/DownloadFileById
//gsoap TMSServ3 service method-output-action:	DownloadFileById http://xerofox.com/TMSService/DownloadFileByIdResponse
int __TMSServ3__DownloadFileById(
    _TMSServ__DownloadFileById*         TMSServ__DownloadFileById,	///< Input parameter
    _TMSServ__DownloadFileByIdResponse &TMSServ__DownloadFileByIdResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __TMSServ3__UploadFileObject                                             *
 *                                                                            *
\******************************************************************************/


/** Operation "__TMSServ3__UploadFileObject" of service binding "TMSServiceSoap12".

  - SOAP document/literal style messaging

  - Action: "http://xerofox.com/TMSService/UploadFileObject"

  - Addressing input action: "http://xerofox.com/TMSService/UploadFileObject"

  - Addressing output action: "http://xerofox.com/TMSService/UploadFileObjectResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___TMSServ3__UploadFileObject(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _TMSServ__UploadFileObject*         TMSServ__UploadFileObject,
    // output parameters:
    _TMSServ__UploadFileObjectResponse &TMSServ__UploadFileObjectResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __TMSServ3__UploadFileObject(
    struct soap *soap,
    // input parameters:
    _TMSServ__UploadFileObject*         TMSServ__UploadFileObject,
    // output parameters:
    _TMSServ__UploadFileObjectResponse &TMSServ__UploadFileObjectResponse
  );
@endcode

C++ proxy class (defined in soapTMSServiceSoap12Proxy.h):
@code
  class TMSServiceSoap12Proxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapTMSServiceSoap12Service.h):
@code
  class TMSServiceSoap12Service;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap TMSServ3 service method-protocol:	UploadFileObject SOAP
//gsoap TMSServ3 service method-style:	UploadFileObject document
//gsoap TMSServ3 service method-encoding:	UploadFileObject literal
//gsoap TMSServ3 service method-input-action:	UploadFileObject http://xerofox.com/TMSService/UploadFileObject
//gsoap TMSServ3 service method-output-action:	UploadFileObject http://xerofox.com/TMSService/UploadFileObjectResponse
int __TMSServ3__UploadFileObject(
    _TMSServ__UploadFileObject*         TMSServ__UploadFileObject,	///< Input parameter
    _TMSServ__UploadFileObjectResponse &TMSServ__UploadFileObjectResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __TMSServ3__FinalizeFileObjectData                                       *
 *                                                                            *
\******************************************************************************/


/** Operation "__TMSServ3__FinalizeFileObjectData" of service binding "TMSServiceSoap12".

  - SOAP document/literal style messaging

  - Action: "http://xerofox.com/TMSService/FinalizeFileObjectData"

  - Addressing input action: "http://xerofox.com/TMSService/FinalizeFileObjectData"

  - Addressing output action: "http://xerofox.com/TMSService/FinalizeFileObjectDataResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___TMSServ3__FinalizeFileObjectData(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _TMSServ__FinalizeFileObjectData*   TMSServ__FinalizeFileObjectData,
    // output parameters:
    _TMSServ__FinalizeFileObjectDataResponse&TMSServ__FinalizeFileObjectDataResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __TMSServ3__FinalizeFileObjectData(
    struct soap *soap,
    // input parameters:
    _TMSServ__FinalizeFileObjectData*   TMSServ__FinalizeFileObjectData,
    // output parameters:
    _TMSServ__FinalizeFileObjectDataResponse&TMSServ__FinalizeFileObjectDataResponse
  );
@endcode

C++ proxy class (defined in soapTMSServiceSoap12Proxy.h):
@code
  class TMSServiceSoap12Proxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapTMSServiceSoap12Service.h):
@code
  class TMSServiceSoap12Service;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap TMSServ3 service method-protocol:	FinalizeFileObjectData SOAP
//gsoap TMSServ3 service method-style:	FinalizeFileObjectData document
//gsoap TMSServ3 service method-encoding:	FinalizeFileObjectData literal
//gsoap TMSServ3 service method-input-action:	FinalizeFileObjectData http://xerofox.com/TMSService/FinalizeFileObjectData
//gsoap TMSServ3 service method-output-action:	FinalizeFileObjectData http://xerofox.com/TMSService/FinalizeFileObjectDataResponse
int __TMSServ3__FinalizeFileObjectData(
    _TMSServ__FinalizeFileObjectData*   TMSServ__FinalizeFileObjectData,	///< Input parameter
    _TMSServ__FinalizeFileObjectDataResponse&TMSServ__FinalizeFileObjectDataResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __TMSServ3__OpenFileObjectDataProvider                                   *
 *                                                                            *
\******************************************************************************/


/** Operation "__TMSServ3__OpenFileObjectDataProvider" of service binding "TMSServiceSoap12".

  - SOAP document/literal style messaging

  - Action: "http://xerofox.com/TMSService/OpenFileObjectDataProvider"

  - Addressing input action: "http://xerofox.com/TMSService/OpenFileObjectDataProvider"

  - Addressing output action: "http://xerofox.com/TMSService/OpenFileObjectDataProviderResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___TMSServ3__OpenFileObjectDataProvider(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _TMSServ__OpenFileObjectDataProvider* TMSServ__OpenFileObjectDataProvider,
    // output parameters:
    _TMSServ__OpenFileObjectDataProviderResponse&TMSServ__OpenFileObjectDataProviderResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __TMSServ3__OpenFileObjectDataProvider(
    struct soap *soap,
    // input parameters:
    _TMSServ__OpenFileObjectDataProvider* TMSServ__OpenFileObjectDataProvider,
    // output parameters:
    _TMSServ__OpenFileObjectDataProviderResponse&TMSServ__OpenFileObjectDataProviderResponse
  );
@endcode

C++ proxy class (defined in soapTMSServiceSoap12Proxy.h):
@code
  class TMSServiceSoap12Proxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapTMSServiceSoap12Service.h):
@code
  class TMSServiceSoap12Service;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap TMSServ3 service method-protocol:	OpenFileObjectDataProvider SOAP
//gsoap TMSServ3 service method-style:	OpenFileObjectDataProvider document
//gsoap TMSServ3 service method-encoding:	OpenFileObjectDataProvider literal
//gsoap TMSServ3 service method-input-action:	OpenFileObjectDataProvider http://xerofox.com/TMSService/OpenFileObjectDataProvider
//gsoap TMSServ3 service method-output-action:	OpenFileObjectDataProvider http://xerofox.com/TMSService/OpenFileObjectDataProviderResponse
int __TMSServ3__OpenFileObjectDataProvider(
    _TMSServ__OpenFileObjectDataProvider* TMSServ__OpenFileObjectDataProvider,	///< Input parameter
    _TMSServ__OpenFileObjectDataProviderResponse&TMSServ__OpenFileObjectDataProviderResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __TMSServ3__OpenTapModelDataProvider                                     *
 *                                                                            *
\******************************************************************************/


/** Operation "__TMSServ3__OpenTapModelDataProvider" of service binding "TMSServiceSoap12".

  - SOAP document/literal style messaging

  - Action: "http://xerofox.com/TMSService/OpenTapModelDataProvider"

  - Addressing input action: "http://xerofox.com/TMSService/OpenTapModelDataProvider"

  - Addressing output action: "http://xerofox.com/TMSService/OpenTapModelDataProviderResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___TMSServ3__OpenTapModelDataProvider(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _TMSServ__OpenTapModelDataProvider* TMSServ__OpenTapModelDataProvider,
    // output parameters:
    _TMSServ__OpenTapModelDataProviderResponse&TMSServ__OpenTapModelDataProviderResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __TMSServ3__OpenTapModelDataProvider(
    struct soap *soap,
    // input parameters:
    _TMSServ__OpenTapModelDataProvider* TMSServ__OpenTapModelDataProvider,
    // output parameters:
    _TMSServ__OpenTapModelDataProviderResponse&TMSServ__OpenTapModelDataProviderResponse
  );
@endcode

C++ proxy class (defined in soapTMSServiceSoap12Proxy.h):
@code
  class TMSServiceSoap12Proxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapTMSServiceSoap12Service.h):
@code
  class TMSServiceSoap12Service;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap TMSServ3 service method-protocol:	OpenTapModelDataProvider SOAP
//gsoap TMSServ3 service method-style:	OpenTapModelDataProvider document
//gsoap TMSServ3 service method-encoding:	OpenTapModelDataProvider literal
//gsoap TMSServ3 service method-input-action:	OpenTapModelDataProvider http://xerofox.com/TMSService/OpenTapModelDataProvider
//gsoap TMSServ3 service method-output-action:	OpenTapModelDataProvider http://xerofox.com/TMSService/OpenTapModelDataProviderResponse
int __TMSServ3__OpenTapModelDataProvider(
    _TMSServ__OpenTapModelDataProvider* TMSServ__OpenTapModelDataProvider,	///< Input parameter
    _TMSServ__OpenTapModelDataProviderResponse&TMSServ__OpenTapModelDataProviderResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __TMSServ3__OpenServerObjectDataProvider                                 *
 *                                                                            *
\******************************************************************************/


/** Operation "__TMSServ3__OpenServerObjectDataProvider" of service binding "TMSServiceSoap12".

  - SOAP document/literal style messaging

  - Action: "http://xerofox.com/TMSService/OpenServerObjectDataProvider"

  - Addressing input action: "http://xerofox.com/TMSService/OpenServerObjectDataProvider"

  - Addressing output action: "http://xerofox.com/TMSService/OpenServerObjectDataProviderResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___TMSServ3__OpenServerObjectDataProvider(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _TMSServ__OpenServerObjectDataProvider* TMSServ__OpenServerObjectDataProvider,
    // output parameters:
    _TMSServ__OpenServerObjectDataProviderResponse&TMSServ__OpenServerObjectDataProviderResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __TMSServ3__OpenServerObjectDataProvider(
    struct soap *soap,
    // input parameters:
    _TMSServ__OpenServerObjectDataProvider* TMSServ__OpenServerObjectDataProvider,
    // output parameters:
    _TMSServ__OpenServerObjectDataProviderResponse&TMSServ__OpenServerObjectDataProviderResponse
  );
@endcode

C++ proxy class (defined in soapTMSServiceSoap12Proxy.h):
@code
  class TMSServiceSoap12Proxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapTMSServiceSoap12Service.h):
@code
  class TMSServiceSoap12Service;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap TMSServ3 service method-protocol:	OpenServerObjectDataProvider SOAP
//gsoap TMSServ3 service method-style:	OpenServerObjectDataProvider document
//gsoap TMSServ3 service method-encoding:	OpenServerObjectDataProvider literal
//gsoap TMSServ3 service method-input-action:	OpenServerObjectDataProvider http://xerofox.com/TMSService/OpenServerObjectDataProvider
//gsoap TMSServ3 service method-output-action:	OpenServerObjectDataProvider http://xerofox.com/TMSService/OpenServerObjectDataProviderResponse
int __TMSServ3__OpenServerObjectDataProvider(
    _TMSServ__OpenServerObjectDataProvider* TMSServ__OpenServerObjectDataProvider,	///< Input parameter
    _TMSServ__OpenServerObjectDataProviderResponse&TMSServ__OpenServerObjectDataProviderResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __TMSServ3__DownloadFileObject                                           *
 *                                                                            *
\******************************************************************************/


/** Operation "__TMSServ3__DownloadFileObject" of service binding "TMSServiceSoap12".

  - SOAP document/literal style messaging

  - Action: "http://xerofox.com/TMSService/DownloadFileObject"

  - Addressing input action: "http://xerofox.com/TMSService/DownloadFileObject"

  - Addressing output action: "http://xerofox.com/TMSService/DownloadFileObjectResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___TMSServ3__DownloadFileObject(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _TMSServ__DownloadFileObject*       TMSServ__DownloadFileObject,
    // output parameters:
    _TMSServ__DownloadFileObjectResponse&TMSServ__DownloadFileObjectResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __TMSServ3__DownloadFileObject(
    struct soap *soap,
    // input parameters:
    _TMSServ__DownloadFileObject*       TMSServ__DownloadFileObject,
    // output parameters:
    _TMSServ__DownloadFileObjectResponse&TMSServ__DownloadFileObjectResponse
  );
@endcode

C++ proxy class (defined in soapTMSServiceSoap12Proxy.h):
@code
  class TMSServiceSoap12Proxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapTMSServiceSoap12Service.h):
@code
  class TMSServiceSoap12Service;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap TMSServ3 service method-protocol:	DownloadFileObject SOAP
//gsoap TMSServ3 service method-style:	DownloadFileObject document
//gsoap TMSServ3 service method-encoding:	DownloadFileObject literal
//gsoap TMSServ3 service method-input-action:	DownloadFileObject http://xerofox.com/TMSService/DownloadFileObject
//gsoap TMSServ3 service method-output-action:	DownloadFileObject http://xerofox.com/TMSService/DownloadFileObjectResponse
int __TMSServ3__DownloadFileObject(
    _TMSServ__DownloadFileObject*       TMSServ__DownloadFileObject,	///< Input parameter
    _TMSServ__DownloadFileObjectResponse&TMSServ__DownloadFileObjectResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __TMSServ3__CloseFileObjectDataProvider                                  *
 *                                                                            *
\******************************************************************************/


/** Operation "__TMSServ3__CloseFileObjectDataProvider" of service binding "TMSServiceSoap12".

  - SOAP document/literal style messaging

  - Action: "http://xerofox.com/TMSService/CloseFileObjectDataProvider"

  - Addressing input action: "http://xerofox.com/TMSService/CloseFileObjectDataProvider"

  - Addressing output action: "http://xerofox.com/TMSService/CloseFileObjectDataProviderResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___TMSServ3__CloseFileObjectDataProvider(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _TMSServ__CloseFileObjectDataProvider* TMSServ__CloseFileObjectDataProvider,
    // output parameters:
    _TMSServ__CloseFileObjectDataProviderResponse&TMSServ__CloseFileObjectDataProviderResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __TMSServ3__CloseFileObjectDataProvider(
    struct soap *soap,
    // input parameters:
    _TMSServ__CloseFileObjectDataProvider* TMSServ__CloseFileObjectDataProvider,
    // output parameters:
    _TMSServ__CloseFileObjectDataProviderResponse&TMSServ__CloseFileObjectDataProviderResponse
  );
@endcode

C++ proxy class (defined in soapTMSServiceSoap12Proxy.h):
@code
  class TMSServiceSoap12Proxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapTMSServiceSoap12Service.h):
@code
  class TMSServiceSoap12Service;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap TMSServ3 service method-protocol:	CloseFileObjectDataProvider SOAP
//gsoap TMSServ3 service method-style:	CloseFileObjectDataProvider document
//gsoap TMSServ3 service method-encoding:	CloseFileObjectDataProvider literal
//gsoap TMSServ3 service method-input-action:	CloseFileObjectDataProvider http://xerofox.com/TMSService/CloseFileObjectDataProvider
//gsoap TMSServ3 service method-output-action:	CloseFileObjectDataProvider http://xerofox.com/TMSService/CloseFileObjectDataProviderResponse
int __TMSServ3__CloseFileObjectDataProvider(
    _TMSServ__CloseFileObjectDataProvider* TMSServ__CloseFileObjectDataProvider,	///< Input parameter
    _TMSServ__CloseFileObjectDataProviderResponse&TMSServ__CloseFileObjectDataProviderResponse	///< Output parameter
);

/**

@page TMSServiceSoap12 Binding "TMSServiceSoap12"

@section TMSServiceSoap12_policy_enablers Policy Enablers of Binding "TMSServiceSoap12"

Based on policies, this service imports

  - WS-Policy reminders and enablers:
    - WS-Addressing 1.0 (2005/08, accepts 2004/08):
	@code
	#import "wsa5.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsaapi.h"
	soap_register_plugin(soap, soap_wsa); // register the wsa plugin in your code
	// See the user guide gsoap/doc/wsa/html/index.html
	@endcode
    - WS-Addressing (2004/08):
	@code
	#import "wsa.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsaapi.h"
	soap_register_plugin(soap, soap_wsa); // register the wsa plugin in your code
	// See the user guide gsoap/doc/wsa/html/index.html
	@endcode
    - WS-ReliableMessaging 1.0:
	@code
	#import "wsrm5.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsrmapi.h"
	soap_register_plugin(soap, soap_wsa); // register the wsa plugin in your code
	soap_register_plugin(soap, soap_wsrm); // register the wsrm plugin in your code
	// See the user guide gsoap/doc/wsrm/html/index.html
	@endcode
    - WS-ReliableMessaging 1.1:
	@code
	#import "wsrm.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsrmapi.h"
	soap_register_plugin(soap, soap_wsa); // register the wsa plugin in your code
	soap_register_plugin(soap, soap_wsrm); // register the wsrm plugin in your code
	// See the user guide gsoap/doc/wsrm/html/index.html
	@endcode
    - WS-Security (SOAP Message Security) 1.0 (accepts 1.1):
	@code
	#import "wsse.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsseapi.h"
	soap_register_plugin(soap, soap_wsse); // register the wsse plugin in your code
	// See the user guide gsoap/doc/wsse/html/index.html
	@endcode
    - WS-Security (SOAP Message Security) 1.1 (accepts 1.0):
	@code
	#import "wsse11.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsseapi.h"
	soap_register_plugin(soap, soap_wsse); // register the wsse plugin in your code
	// See the user guide gsoap/doc/wsse/html/index.html
	@endcode
    - HTTP Digest Authentication:
	@code
	#include "plugin/httpda.h"
	soap_register_plugin(soap, soap_http_da); // register the HTTP DA plugin in your code
	// See the user guide gsoap/doc/httpda/html/index.html
	@endcode
*/


/******************************************************************************\
 *                                                                            *
 * XML Data Binding                                                           *
 *                                                                            *
\******************************************************************************/


/**

@page page_XMLDataBinding XML Data Binding

SOAP/XML services use data bindings contractually bound by WSDL and auto-
generated by wsdl2h and soapcpp2 (see Service Bindings). Plain data bindings
are adopted from XML schemas as part of the WSDL types section or when running
wsdl2h on a set of schemas to produce non-SOAP-based XML data bindings.

The following readers and writers are C/C++ data type (de)serializers auto-
generated by wsdl2h and soapcpp2. Run soapcpp2 on this file to generate the
(de)serialization code, which is stored in soapC.c[pp]. Include "soapH.h" in
your code to import these data type and function declarations. Only use the
soapcpp2-generated files in your project build. Do not include the wsdl2h-
generated .h file in your code.

Data can be read in XML and deserialized from:
  - a file descriptor, using soap->recvfd = fd
  - a socket, using soap->socket = ...
  - a C++ stream, using soap->is = ...
  - a buffer, using the soap->frecv() callback

Data can be serialized in XML and written to:
  - a file descriptor, using soap->sendfd = fd
  - a socket, using soap->socket = ...
  - a C++ stream, using soap->os = ...
  - a buffer, using the soap->fsend() callback

The following options are available for (de)serialization control:
  - soap->encodingStyle = NULL; to remove SOAP 1.1/1.2 encodingStyle
  - soap_mode(soap, SOAP_XML_TREE); XML without id-ref (no cycles!)
  - soap_mode(soap, SOAP_XML_GRAPH); XML with id-ref (including cycles)
  - soap_set_namespaces(soap, struct Namespace *nsmap); to set xmlns bindings


@section TMSServ Top-level root elements of schema "http://xerofox.com/TMSService/"

  - <loginUser> @ref _TMSServ__loginUser
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__TMSServ__loginUser(struct soap*, _TMSServ__loginUser*);
    // Writer (returns SOAP_OK on success):
    soap_write__TMSServ__loginUser(struct soap*, _TMSServ__loginUser*);
    @endcode

  - <loginUserResponse> @ref _TMSServ__loginUserResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__TMSServ__loginUserResponse(struct soap*, _TMSServ__loginUserResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__TMSServ__loginUserResponse(struct soap*, _TMSServ__loginUserResponse*);
    @endcode

  - <loginUserByByteArr> @ref _TMSServ__loginUserByByteArr
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__TMSServ__loginUserByByteArr(struct soap*, _TMSServ__loginUserByByteArr*);
    // Writer (returns SOAP_OK on success):
    soap_write__TMSServ__loginUserByByteArr(struct soap*, _TMSServ__loginUserByByteArr*);
    @endcode

  - <loginUserByByteArrResponse> @ref _TMSServ__loginUserByByteArrResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__TMSServ__loginUserByByteArrResponse(struct soap*, _TMSServ__loginUserByByteArrResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__TMSServ__loginUserByByteArrResponse(struct soap*, _TMSServ__loginUserByByteArrResponse*);
    @endcode

  - <logoutUser> @ref _TMSServ__logoutUser
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__TMSServ__logoutUser(struct soap*, _TMSServ__logoutUser*);
    // Writer (returns SOAP_OK on success):
    soap_write__TMSServ__logoutUser(struct soap*, _TMSServ__logoutUser*);
    @endcode

  - <logoutUserResponse> @ref _TMSServ__logoutUserResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__TMSServ__logoutUserResponse(struct soap*, _TMSServ__logoutUserResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__TMSServ__logoutUserResponse(struct soap*, _TMSServ__logoutUserResponse*);
    @endcode

  - <QueryObjects> @ref _TMSServ__QueryObjects
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__TMSServ__QueryObjects(struct soap*, _TMSServ__QueryObjects*);
    // Writer (returns SOAP_OK on success):
    soap_write__TMSServ__QueryObjects(struct soap*, _TMSServ__QueryObjects*);
    @endcode

  - <QueryObjectsResponse> @ref _TMSServ__QueryObjectsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__TMSServ__QueryObjectsResponse(struct soap*, _TMSServ__QueryObjectsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__TMSServ__QueryObjectsResponse(struct soap*, _TMSServ__QueryObjectsResponse*);
    @endcode

  - <DownloadObjects> @ref _TMSServ__DownloadObjects
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__TMSServ__DownloadObjects(struct soap*, _TMSServ__DownloadObjects*);
    // Writer (returns SOAP_OK on success):
    soap_write__TMSServ__DownloadObjects(struct soap*, _TMSServ__DownloadObjects*);
    @endcode

  - <DownloadObjectsResponse> @ref _TMSServ__DownloadObjectsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__TMSServ__DownloadObjectsResponse(struct soap*, _TMSServ__DownloadObjectsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__TMSServ__DownloadObjectsResponse(struct soap*, _TMSServ__DownloadObjectsResponse*);
    @endcode

  - <GetObjectsVersion> @ref _TMSServ__GetObjectsVersion
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__TMSServ__GetObjectsVersion(struct soap*, _TMSServ__GetObjectsVersion*);
    // Writer (returns SOAP_OK on success):
    soap_write__TMSServ__GetObjectsVersion(struct soap*, _TMSServ__GetObjectsVersion*);
    @endcode

  - <GetObjectsVersionResponse> @ref _TMSServ__GetObjectsVersionResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__TMSServ__GetObjectsVersionResponse(struct soap*, _TMSServ__GetObjectsVersionResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__TMSServ__GetObjectsVersionResponse(struct soap*, _TMSServ__GetObjectsVersionResponse*);
    @endcode

  - <GetTowerPartsLabelAndVersionSerial> @ref _TMSServ__GetTowerPartsLabelAndVersionSerial
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__TMSServ__GetTowerPartsLabelAndVersionSerial(struct soap*, _TMSServ__GetTowerPartsLabelAndVersionSerial*);
    // Writer (returns SOAP_OK on success):
    soap_write__TMSServ__GetTowerPartsLabelAndVersionSerial(struct soap*, _TMSServ__GetTowerPartsLabelAndVersionSerial*);
    @endcode

  - <GetTowerPartsLabelAndVersionSerialResponse> @ref _TMSServ__GetTowerPartsLabelAndVersionSerialResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__TMSServ__GetTowerPartsLabelAndVersionSerialResponse(struct soap*, _TMSServ__GetTowerPartsLabelAndVersionSerialResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__TMSServ__GetTowerPartsLabelAndVersionSerialResponse(struct soap*, _TMSServ__GetTowerPartsLabelAndVersionSerialResponse*);
    @endcode

  - <MatchTowerParts> @ref _TMSServ__MatchTowerParts
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__TMSServ__MatchTowerParts(struct soap*, _TMSServ__MatchTowerParts*);
    // Writer (returns SOAP_OK on success):
    soap_write__TMSServ__MatchTowerParts(struct soap*, _TMSServ__MatchTowerParts*);
    @endcode

  - <MatchTowerPartsResponse> @ref _TMSServ__MatchTowerPartsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__TMSServ__MatchTowerPartsResponse(struct soap*, _TMSServ__MatchTowerPartsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__TMSServ__MatchTowerPartsResponse(struct soap*, _TMSServ__MatchTowerPartsResponse*);
    @endcode

  - <SaveOrUpdateObjects> @ref _TMSServ__SaveOrUpdateObjects
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__TMSServ__SaveOrUpdateObjects(struct soap*, _TMSServ__SaveOrUpdateObjects*);
    // Writer (returns SOAP_OK on success):
    soap_write__TMSServ__SaveOrUpdateObjects(struct soap*, _TMSServ__SaveOrUpdateObjects*);
    @endcode

  - <SaveOrUpdateObjectsResponse> @ref _TMSServ__SaveOrUpdateObjectsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__TMSServ__SaveOrUpdateObjectsResponse(struct soap*, _TMSServ__SaveOrUpdateObjectsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__TMSServ__SaveOrUpdateObjectsResponse(struct soap*, _TMSServ__SaveOrUpdateObjectsResponse*);
    @endcode

  - <DeleteObject> @ref _TMSServ__DeleteObject
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__TMSServ__DeleteObject(struct soap*, _TMSServ__DeleteObject*);
    // Writer (returns SOAP_OK on success):
    soap_write__TMSServ__DeleteObject(struct soap*, _TMSServ__DeleteObject*);
    @endcode

  - <DeleteObjectResponse> @ref _TMSServ__DeleteObjectResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__TMSServ__DeleteObjectResponse(struct soap*, _TMSServ__DeleteObjectResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__TMSServ__DeleteObjectResponse(struct soap*, _TMSServ__DeleteObjectResponse*);
    @endcode

  - <DownloadFileById> @ref _TMSServ__DownloadFileById
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__TMSServ__DownloadFileById(struct soap*, _TMSServ__DownloadFileById*);
    // Writer (returns SOAP_OK on success):
    soap_write__TMSServ__DownloadFileById(struct soap*, _TMSServ__DownloadFileById*);
    @endcode

  - <DownloadFileByIdResponse> @ref _TMSServ__DownloadFileByIdResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__TMSServ__DownloadFileByIdResponse(struct soap*, _TMSServ__DownloadFileByIdResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__TMSServ__DownloadFileByIdResponse(struct soap*, _TMSServ__DownloadFileByIdResponse*);
    @endcode

  - <UploadFileObject> @ref _TMSServ__UploadFileObject
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__TMSServ__UploadFileObject(struct soap*, _TMSServ__UploadFileObject*);
    // Writer (returns SOAP_OK on success):
    soap_write__TMSServ__UploadFileObject(struct soap*, _TMSServ__UploadFileObject*);
    @endcode

  - <UploadFileObjectResponse> @ref _TMSServ__UploadFileObjectResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__TMSServ__UploadFileObjectResponse(struct soap*, _TMSServ__UploadFileObjectResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__TMSServ__UploadFileObjectResponse(struct soap*, _TMSServ__UploadFileObjectResponse*);
    @endcode

  - <FinalizeFileObjectData> @ref _TMSServ__FinalizeFileObjectData
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__TMSServ__FinalizeFileObjectData(struct soap*, _TMSServ__FinalizeFileObjectData*);
    // Writer (returns SOAP_OK on success):
    soap_write__TMSServ__FinalizeFileObjectData(struct soap*, _TMSServ__FinalizeFileObjectData*);
    @endcode

  - <FinalizeFileObjectDataResponse> @ref _TMSServ__FinalizeFileObjectDataResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__TMSServ__FinalizeFileObjectDataResponse(struct soap*, _TMSServ__FinalizeFileObjectDataResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__TMSServ__FinalizeFileObjectDataResponse(struct soap*, _TMSServ__FinalizeFileObjectDataResponse*);
    @endcode

  - <OpenFileObjectDataProvider> @ref _TMSServ__OpenFileObjectDataProvider
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__TMSServ__OpenFileObjectDataProvider(struct soap*, _TMSServ__OpenFileObjectDataProvider*);
    // Writer (returns SOAP_OK on success):
    soap_write__TMSServ__OpenFileObjectDataProvider(struct soap*, _TMSServ__OpenFileObjectDataProvider*);
    @endcode

  - <OpenFileObjectDataProviderResponse> @ref _TMSServ__OpenFileObjectDataProviderResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__TMSServ__OpenFileObjectDataProviderResponse(struct soap*, _TMSServ__OpenFileObjectDataProviderResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__TMSServ__OpenFileObjectDataProviderResponse(struct soap*, _TMSServ__OpenFileObjectDataProviderResponse*);
    @endcode

  - <OpenTapModelDataProvider> @ref _TMSServ__OpenTapModelDataProvider
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__TMSServ__OpenTapModelDataProvider(struct soap*, _TMSServ__OpenTapModelDataProvider*);
    // Writer (returns SOAP_OK on success):
    soap_write__TMSServ__OpenTapModelDataProvider(struct soap*, _TMSServ__OpenTapModelDataProvider*);
    @endcode

  - <OpenTapModelDataProviderResponse> @ref _TMSServ__OpenTapModelDataProviderResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__TMSServ__OpenTapModelDataProviderResponse(struct soap*, _TMSServ__OpenTapModelDataProviderResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__TMSServ__OpenTapModelDataProviderResponse(struct soap*, _TMSServ__OpenTapModelDataProviderResponse*);
    @endcode

  - <OpenServerObjectDataProvider> @ref _TMSServ__OpenServerObjectDataProvider
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__TMSServ__OpenServerObjectDataProvider(struct soap*, _TMSServ__OpenServerObjectDataProvider*);
    // Writer (returns SOAP_OK on success):
    soap_write__TMSServ__OpenServerObjectDataProvider(struct soap*, _TMSServ__OpenServerObjectDataProvider*);
    @endcode

  - <OpenServerObjectDataProviderResponse> @ref _TMSServ__OpenServerObjectDataProviderResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__TMSServ__OpenServerObjectDataProviderResponse(struct soap*, _TMSServ__OpenServerObjectDataProviderResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__TMSServ__OpenServerObjectDataProviderResponse(struct soap*, _TMSServ__OpenServerObjectDataProviderResponse*);
    @endcode

  - <DownloadFileObject> @ref _TMSServ__DownloadFileObject
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__TMSServ__DownloadFileObject(struct soap*, _TMSServ__DownloadFileObject*);
    // Writer (returns SOAP_OK on success):
    soap_write__TMSServ__DownloadFileObject(struct soap*, _TMSServ__DownloadFileObject*);
    @endcode

  - <DownloadFileObjectResponse> @ref _TMSServ__DownloadFileObjectResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__TMSServ__DownloadFileObjectResponse(struct soap*, _TMSServ__DownloadFileObjectResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__TMSServ__DownloadFileObjectResponse(struct soap*, _TMSServ__DownloadFileObjectResponse*);
    @endcode

  - <CloseFileObjectDataProvider> @ref _TMSServ__CloseFileObjectDataProvider
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__TMSServ__CloseFileObjectDataProvider(struct soap*, _TMSServ__CloseFileObjectDataProvider*);
    // Writer (returns SOAP_OK on success):
    soap_write__TMSServ__CloseFileObjectDataProvider(struct soap*, _TMSServ__CloseFileObjectDataProvider*);
    @endcode

  - <CloseFileObjectDataProviderResponse> @ref _TMSServ__CloseFileObjectDataProviderResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__TMSServ__CloseFileObjectDataProviderResponse(struct soap*, _TMSServ__CloseFileObjectDataProviderResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__TMSServ__CloseFileObjectDataProviderResponse(struct soap*, _TMSServ__CloseFileObjectDataProviderResponse*);
    @endcode

*/

/* End of d:\Structure\!ClientServTemp\TmsServer.h */
