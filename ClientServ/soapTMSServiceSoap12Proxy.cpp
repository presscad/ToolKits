/* soapTMSServiceSoap12Proxy.cpp
   Generated by gSOAP 2.8.19 from d:\Structure\!ClientServTemp\ClientServer.h

Copyright(C) 2000-2014, Robert van Engelen, Genivia Inc. All Rights Reserved.
The generated code is released under one of the following licenses:
GPL or Genivia's license for commercial use.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
*/

#include "soapTMSServiceSoap12Proxy.h"

TMSServiceSoap12Proxy::TMSServiceSoap12Proxy()
{	TMSServiceSoap12Proxy_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
}

TMSServiceSoap12Proxy::TMSServiceSoap12Proxy(const struct soap &_soap) : soap(_soap)
{ }

TMSServiceSoap12Proxy::TMSServiceSoap12Proxy(const char *url)
{	TMSServiceSoap12Proxy_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
	soap_endpoint = url;
}

TMSServiceSoap12Proxy::TMSServiceSoap12Proxy(soap_mode iomode)
{	TMSServiceSoap12Proxy_init(iomode, iomode);
}

TMSServiceSoap12Proxy::TMSServiceSoap12Proxy(const char *url, soap_mode iomode)
{	TMSServiceSoap12Proxy_init(iomode, iomode);
	soap_endpoint = url;
}

TMSServiceSoap12Proxy::TMSServiceSoap12Proxy(soap_mode imode, soap_mode omode)
{	TMSServiceSoap12Proxy_init(imode, omode);
}

TMSServiceSoap12Proxy::~TMSServiceSoap12Proxy()
{ }

void TMSServiceSoap12Proxy::TMSServiceSoap12Proxy_init(soap_mode imode, soap_mode omode)
{	soap_imode(this, imode);
	soap_omode(this, omode);
	soap_endpoint = NULL;
	static const struct Namespace namespaces[] =
{
	{"SOAP-ENV", "http://www.w3.org/2003/05/soap-envelope", "http://schemas.xmlsoap.org/soap/envelope/", NULL},
	{"SOAP-ENC", "http://www.w3.org/2003/05/soap-encoding", "http://schemas.xmlsoap.org/soap/encoding/", NULL},
	{"xsi", "http://www.w3.org/2001/XMLSchema-instance", "http://www.w3.org/*/XMLSchema-instance", NULL},
	{"xsd", "http://www.w3.org/2001/XMLSchema", "http://www.w3.org/*/XMLSchema", NULL},
	{"TMSServ2", "http://xerofox.com/TMSService/TMSServiceSoap", NULL, NULL},
	{"TMSServ", "http://xerofox.com/TMSService/", NULL, NULL},
	{"TMSServ3", "http://xerofox.com/TMSService/TMSServiceSoap12", NULL, NULL},
	{"VersionServ2", "http://xerofox.com/VersionService/VersionServiceSoap", NULL, NULL},
	{"VersionServ", "http://xerofox.com/VersionService/", NULL, NULL},
	{"VersionServ3", "http://xerofox.com/VersionService/VersionServiceSoap12", NULL, NULL},
	{NULL, NULL, NULL, NULL}
};
	soap_set_namespaces(this, namespaces);
}

void TMSServiceSoap12Proxy::destroy()
{	soap_destroy(this);
	soap_end(this);
}

void TMSServiceSoap12Proxy::reset()
{	destroy();
	soap_done(this);
	soap_initialize(this);
	TMSServiceSoap12Proxy_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
}

void TMSServiceSoap12Proxy::soap_noheader()
{	this->header = NULL;
}

const SOAP_ENV__Header *TMSServiceSoap12Proxy::soap_header()
{	return this->header;
}

const SOAP_ENV__Fault *TMSServiceSoap12Proxy::soap_fault()
{	return this->fault;
}

const char *TMSServiceSoap12Proxy::soap_fault_string()
{	return *soap_faultstring(this);
}

const char *TMSServiceSoap12Proxy::soap_fault_detail()
{	return *soap_faultdetail(this);
}

int TMSServiceSoap12Proxy::soap_close_socket()
{	return soap_closesock(this);
}

int TMSServiceSoap12Proxy::soap_force_close_socket()
{	return soap_force_closesock(this);
}

void TMSServiceSoap12Proxy::soap_print_fault(FILE *fd)
{	::soap_print_fault(this, fd);
}

#ifndef WITH_LEAN
#ifndef WITH_COMPAT
void TMSServiceSoap12Proxy::soap_stream_fault(std::ostream& os)
{	::soap_stream_fault(this, os);
}
#endif

char *TMSServiceSoap12Proxy::soap_sprint_fault(char *buf, size_t len)
{	return ::soap_sprint_fault(this, buf, len);
}
#endif

int TMSServiceSoap12Proxy::loginUser(const char *endpoint, const char *soap_action, _TMSServ__loginUser *TMSServ__loginUser, _TMSServ__loginUserResponse &TMSServ__loginUserResponse)
{	struct soap *soap = this;
	struct __TMSServ3__loginUser soap_tmp___TMSServ3__loginUser;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://localhost/TMSServ/TmsService.asmx";
	if (soap_action == NULL)
		soap_action = "http://xerofox.com/TMSService/loginUser";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___TMSServ3__loginUser.TMSServ__loginUser = TMSServ__loginUser;
	soap_serializeheader(soap);
	soap_serialize___TMSServ3__loginUser(soap, &soap_tmp___TMSServ3__loginUser);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___TMSServ3__loginUser(soap, &soap_tmp___TMSServ3__loginUser, "-TMSServ3:loginUser", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___TMSServ3__loginUser(soap, &soap_tmp___TMSServ3__loginUser, "-TMSServ3:loginUser", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&TMSServ__loginUserResponse)
		return soap_closesock(soap);
	TMSServ__loginUserResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	TMSServ__loginUserResponse.soap_get(soap, "TMSServ:loginUserResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int TMSServiceSoap12Proxy::loginUserByByteArr(const char *endpoint, const char *soap_action, _TMSServ__loginUserByByteArr *TMSServ__loginUserByByteArr, _TMSServ__loginUserByByteArrResponse &TMSServ__loginUserByByteArrResponse)
{	struct soap *soap = this;
	struct __TMSServ3__loginUserByByteArr soap_tmp___TMSServ3__loginUserByByteArr;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://localhost/TMSServ/TmsService.asmx";
	if (soap_action == NULL)
		soap_action = "http://xerofox.com/TMSService/loginUserByByteArr";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___TMSServ3__loginUserByByteArr.TMSServ__loginUserByByteArr = TMSServ__loginUserByByteArr;
	soap_serializeheader(soap);
	soap_serialize___TMSServ3__loginUserByByteArr(soap, &soap_tmp___TMSServ3__loginUserByByteArr);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___TMSServ3__loginUserByByteArr(soap, &soap_tmp___TMSServ3__loginUserByByteArr, "-TMSServ3:loginUserByByteArr", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___TMSServ3__loginUserByByteArr(soap, &soap_tmp___TMSServ3__loginUserByByteArr, "-TMSServ3:loginUserByByteArr", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&TMSServ__loginUserByByteArrResponse)
		return soap_closesock(soap);
	TMSServ__loginUserByByteArrResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	TMSServ__loginUserByByteArrResponse.soap_get(soap, "TMSServ:loginUserByByteArrResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int TMSServiceSoap12Proxy::logoutUser(const char *endpoint, const char *soap_action, _TMSServ__logoutUser *TMSServ__logoutUser, _TMSServ__logoutUserResponse &TMSServ__logoutUserResponse)
{	struct soap *soap = this;
	struct __TMSServ3__logoutUser soap_tmp___TMSServ3__logoutUser;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://localhost/TMSServ/TmsService.asmx";
	if (soap_action == NULL)
		soap_action = "http://xerofox.com/TMSService/logoutUser";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___TMSServ3__logoutUser.TMSServ__logoutUser = TMSServ__logoutUser;
	soap_serializeheader(soap);
	soap_serialize___TMSServ3__logoutUser(soap, &soap_tmp___TMSServ3__logoutUser);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___TMSServ3__logoutUser(soap, &soap_tmp___TMSServ3__logoutUser, "-TMSServ3:logoutUser", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___TMSServ3__logoutUser(soap, &soap_tmp___TMSServ3__logoutUser, "-TMSServ3:logoutUser", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&TMSServ__logoutUserResponse)
		return soap_closesock(soap);
	TMSServ__logoutUserResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	TMSServ__logoutUserResponse.soap_get(soap, "TMSServ:logoutUserResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int TMSServiceSoap12Proxy::QueryObjects(const char *endpoint, const char *soap_action, _TMSServ__QueryObjects *TMSServ__QueryObjects, _TMSServ__QueryObjectsResponse &TMSServ__QueryObjectsResponse)
{	struct soap *soap = this;
	struct __TMSServ3__QueryObjects soap_tmp___TMSServ3__QueryObjects;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://localhost/TMSServ/TmsService.asmx";
	if (soap_action == NULL)
		soap_action = "http://xerofox.com/TMSService/QueryObjects";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___TMSServ3__QueryObjects.TMSServ__QueryObjects = TMSServ__QueryObjects;
	soap_serializeheader(soap);
	soap_serialize___TMSServ3__QueryObjects(soap, &soap_tmp___TMSServ3__QueryObjects);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___TMSServ3__QueryObjects(soap, &soap_tmp___TMSServ3__QueryObjects, "-TMSServ3:QueryObjects", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___TMSServ3__QueryObjects(soap, &soap_tmp___TMSServ3__QueryObjects, "-TMSServ3:QueryObjects", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&TMSServ__QueryObjectsResponse)
		return soap_closesock(soap);
	TMSServ__QueryObjectsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	TMSServ__QueryObjectsResponse.soap_get(soap, "TMSServ:QueryObjectsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int TMSServiceSoap12Proxy::DownloadObjects(const char *endpoint, const char *soap_action, _TMSServ__DownloadObjects *TMSServ__DownloadObjects, _TMSServ__DownloadObjectsResponse &TMSServ__DownloadObjectsResponse)
{	struct soap *soap = this;
	struct __TMSServ3__DownloadObjects soap_tmp___TMSServ3__DownloadObjects;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://localhost/TMSServ/TmsService.asmx";
	if (soap_action == NULL)
		soap_action = "http://xerofox.com/TMSService/DownloadObjects";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___TMSServ3__DownloadObjects.TMSServ__DownloadObjects = TMSServ__DownloadObjects;
	soap_serializeheader(soap);
	soap_serialize___TMSServ3__DownloadObjects(soap, &soap_tmp___TMSServ3__DownloadObjects);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___TMSServ3__DownloadObjects(soap, &soap_tmp___TMSServ3__DownloadObjects, "-TMSServ3:DownloadObjects", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___TMSServ3__DownloadObjects(soap, &soap_tmp___TMSServ3__DownloadObjects, "-TMSServ3:DownloadObjects", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&TMSServ__DownloadObjectsResponse)
		return soap_closesock(soap);
	TMSServ__DownloadObjectsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	TMSServ__DownloadObjectsResponse.soap_get(soap, "TMSServ:DownloadObjectsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int TMSServiceSoap12Proxy::GetObjectsVersion(const char *endpoint, const char *soap_action, _TMSServ__GetObjectsVersion *TMSServ__GetObjectsVersion, _TMSServ__GetObjectsVersionResponse &TMSServ__GetObjectsVersionResponse)
{	struct soap *soap = this;
	struct __TMSServ3__GetObjectsVersion soap_tmp___TMSServ3__GetObjectsVersion;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://localhost/TMSServ/TmsService.asmx";
	if (soap_action == NULL)
		soap_action = "http://xerofox.com/TMSService/GetObjectsVersion";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___TMSServ3__GetObjectsVersion.TMSServ__GetObjectsVersion = TMSServ__GetObjectsVersion;
	soap_serializeheader(soap);
	soap_serialize___TMSServ3__GetObjectsVersion(soap, &soap_tmp___TMSServ3__GetObjectsVersion);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___TMSServ3__GetObjectsVersion(soap, &soap_tmp___TMSServ3__GetObjectsVersion, "-TMSServ3:GetObjectsVersion", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___TMSServ3__GetObjectsVersion(soap, &soap_tmp___TMSServ3__GetObjectsVersion, "-TMSServ3:GetObjectsVersion", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&TMSServ__GetObjectsVersionResponse)
		return soap_closesock(soap);
	TMSServ__GetObjectsVersionResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	TMSServ__GetObjectsVersionResponse.soap_get(soap, "TMSServ:GetObjectsVersionResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int TMSServiceSoap12Proxy::GetTowerPartsLabelAndVersionSerial(const char *endpoint, const char *soap_action, _TMSServ__GetTowerPartsLabelAndVersionSerial *TMSServ__GetTowerPartsLabelAndVersionSerial, _TMSServ__GetTowerPartsLabelAndVersionSerialResponse &TMSServ__GetTowerPartsLabelAndVersionSerialResponse)
{	struct soap *soap = this;
	struct __TMSServ3__GetTowerPartsLabelAndVersionSerial soap_tmp___TMSServ3__GetTowerPartsLabelAndVersionSerial;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://localhost/TMSServ/TmsService.asmx";
	if (soap_action == NULL)
		soap_action = "http://xerofox.com/TMSService/GetTowerPartsLabelAndVersionSerial";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___TMSServ3__GetTowerPartsLabelAndVersionSerial.TMSServ__GetTowerPartsLabelAndVersionSerial = TMSServ__GetTowerPartsLabelAndVersionSerial;
	soap_serializeheader(soap);
	soap_serialize___TMSServ3__GetTowerPartsLabelAndVersionSerial(soap, &soap_tmp___TMSServ3__GetTowerPartsLabelAndVersionSerial);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___TMSServ3__GetTowerPartsLabelAndVersionSerial(soap, &soap_tmp___TMSServ3__GetTowerPartsLabelAndVersionSerial, "-TMSServ3:GetTowerPartsLabelAndVersionSerial", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___TMSServ3__GetTowerPartsLabelAndVersionSerial(soap, &soap_tmp___TMSServ3__GetTowerPartsLabelAndVersionSerial, "-TMSServ3:GetTowerPartsLabelAndVersionSerial", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&TMSServ__GetTowerPartsLabelAndVersionSerialResponse)
		return soap_closesock(soap);
	TMSServ__GetTowerPartsLabelAndVersionSerialResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	TMSServ__GetTowerPartsLabelAndVersionSerialResponse.soap_get(soap, "TMSServ:GetTowerPartsLabelAndVersionSerialResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int TMSServiceSoap12Proxy::MatchTowerParts(const char *endpoint, const char *soap_action, _TMSServ__MatchTowerParts *TMSServ__MatchTowerParts, _TMSServ__MatchTowerPartsResponse &TMSServ__MatchTowerPartsResponse)
{	struct soap *soap = this;
	struct __TMSServ3__MatchTowerParts soap_tmp___TMSServ3__MatchTowerParts;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://localhost/TMSServ/TmsService.asmx";
	if (soap_action == NULL)
		soap_action = "http://xerofox.com/TMSService/MatchTowerParts";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___TMSServ3__MatchTowerParts.TMSServ__MatchTowerParts = TMSServ__MatchTowerParts;
	soap_serializeheader(soap);
	soap_serialize___TMSServ3__MatchTowerParts(soap, &soap_tmp___TMSServ3__MatchTowerParts);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___TMSServ3__MatchTowerParts(soap, &soap_tmp___TMSServ3__MatchTowerParts, "-TMSServ3:MatchTowerParts", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___TMSServ3__MatchTowerParts(soap, &soap_tmp___TMSServ3__MatchTowerParts, "-TMSServ3:MatchTowerParts", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&TMSServ__MatchTowerPartsResponse)
		return soap_closesock(soap);
	TMSServ__MatchTowerPartsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	TMSServ__MatchTowerPartsResponse.soap_get(soap, "TMSServ:MatchTowerPartsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int TMSServiceSoap12Proxy::SaveOrUpdateObjects(const char *endpoint, const char *soap_action, _TMSServ__SaveOrUpdateObjects *TMSServ__SaveOrUpdateObjects, _TMSServ__SaveOrUpdateObjectsResponse &TMSServ__SaveOrUpdateObjectsResponse)
{	struct soap *soap = this;
	struct __TMSServ3__SaveOrUpdateObjects soap_tmp___TMSServ3__SaveOrUpdateObjects;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://localhost/TMSServ/TmsService.asmx";
	if (soap_action == NULL)
		soap_action = "http://xerofox.com/TMSService/SaveOrUpdateObjects";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___TMSServ3__SaveOrUpdateObjects.TMSServ__SaveOrUpdateObjects = TMSServ__SaveOrUpdateObjects;
	soap_serializeheader(soap);
	soap_serialize___TMSServ3__SaveOrUpdateObjects(soap, &soap_tmp___TMSServ3__SaveOrUpdateObjects);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___TMSServ3__SaveOrUpdateObjects(soap, &soap_tmp___TMSServ3__SaveOrUpdateObjects, "-TMSServ3:SaveOrUpdateObjects", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___TMSServ3__SaveOrUpdateObjects(soap, &soap_tmp___TMSServ3__SaveOrUpdateObjects, "-TMSServ3:SaveOrUpdateObjects", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&TMSServ__SaveOrUpdateObjectsResponse)
		return soap_closesock(soap);
	TMSServ__SaveOrUpdateObjectsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	TMSServ__SaveOrUpdateObjectsResponse.soap_get(soap, "TMSServ:SaveOrUpdateObjectsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int TMSServiceSoap12Proxy::DeleteObject(const char *endpoint, const char *soap_action, _TMSServ__DeleteObject *TMSServ__DeleteObject, _TMSServ__DeleteObjectResponse &TMSServ__DeleteObjectResponse)
{	struct soap *soap = this;
	struct __TMSServ3__DeleteObject soap_tmp___TMSServ3__DeleteObject;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://localhost/TMSServ/TmsService.asmx";
	if (soap_action == NULL)
		soap_action = "http://xerofox.com/TMSService/DeleteObject";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___TMSServ3__DeleteObject.TMSServ__DeleteObject = TMSServ__DeleteObject;
	soap_serializeheader(soap);
	soap_serialize___TMSServ3__DeleteObject(soap, &soap_tmp___TMSServ3__DeleteObject);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___TMSServ3__DeleteObject(soap, &soap_tmp___TMSServ3__DeleteObject, "-TMSServ3:DeleteObject", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___TMSServ3__DeleteObject(soap, &soap_tmp___TMSServ3__DeleteObject, "-TMSServ3:DeleteObject", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&TMSServ__DeleteObjectResponse)
		return soap_closesock(soap);
	TMSServ__DeleteObjectResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	TMSServ__DeleteObjectResponse.soap_get(soap, "TMSServ:DeleteObjectResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int TMSServiceSoap12Proxy::DownloadFileById(const char *endpoint, const char *soap_action, _TMSServ__DownloadFileById *TMSServ__DownloadFileById, _TMSServ__DownloadFileByIdResponse &TMSServ__DownloadFileByIdResponse)
{	struct soap *soap = this;
	struct __TMSServ3__DownloadFileById soap_tmp___TMSServ3__DownloadFileById;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://localhost/TMSServ/TmsService.asmx";
	if (soap_action == NULL)
		soap_action = "http://xerofox.com/TMSService/DownloadFileById";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___TMSServ3__DownloadFileById.TMSServ__DownloadFileById = TMSServ__DownloadFileById;
	soap_serializeheader(soap);
	soap_serialize___TMSServ3__DownloadFileById(soap, &soap_tmp___TMSServ3__DownloadFileById);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___TMSServ3__DownloadFileById(soap, &soap_tmp___TMSServ3__DownloadFileById, "-TMSServ3:DownloadFileById", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___TMSServ3__DownloadFileById(soap, &soap_tmp___TMSServ3__DownloadFileById, "-TMSServ3:DownloadFileById", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&TMSServ__DownloadFileByIdResponse)
		return soap_closesock(soap);
	TMSServ__DownloadFileByIdResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	TMSServ__DownloadFileByIdResponse.soap_get(soap, "TMSServ:DownloadFileByIdResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int TMSServiceSoap12Proxy::UploadFileObject(const char *endpoint, const char *soap_action, _TMSServ__UploadFileObject *TMSServ__UploadFileObject, _TMSServ__UploadFileObjectResponse &TMSServ__UploadFileObjectResponse)
{	struct soap *soap = this;
	struct __TMSServ3__UploadFileObject soap_tmp___TMSServ3__UploadFileObject;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://localhost/TMSServ/TmsService.asmx";
	if (soap_action == NULL)
		soap_action = "http://xerofox.com/TMSService/UploadFileObject";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___TMSServ3__UploadFileObject.TMSServ__UploadFileObject = TMSServ__UploadFileObject;
	soap_serializeheader(soap);
	soap_serialize___TMSServ3__UploadFileObject(soap, &soap_tmp___TMSServ3__UploadFileObject);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___TMSServ3__UploadFileObject(soap, &soap_tmp___TMSServ3__UploadFileObject, "-TMSServ3:UploadFileObject", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___TMSServ3__UploadFileObject(soap, &soap_tmp___TMSServ3__UploadFileObject, "-TMSServ3:UploadFileObject", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&TMSServ__UploadFileObjectResponse)
		return soap_closesock(soap);
	TMSServ__UploadFileObjectResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	TMSServ__UploadFileObjectResponse.soap_get(soap, "TMSServ:UploadFileObjectResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int TMSServiceSoap12Proxy::FinalizeFileObjectData(const char *endpoint, const char *soap_action, _TMSServ__FinalizeFileObjectData *TMSServ__FinalizeFileObjectData, _TMSServ__FinalizeFileObjectDataResponse &TMSServ__FinalizeFileObjectDataResponse)
{	struct soap *soap = this;
	struct __TMSServ3__FinalizeFileObjectData soap_tmp___TMSServ3__FinalizeFileObjectData;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://localhost/TMSServ/TmsService.asmx";
	if (soap_action == NULL)
		soap_action = "http://xerofox.com/TMSService/FinalizeFileObjectData";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___TMSServ3__FinalizeFileObjectData.TMSServ__FinalizeFileObjectData = TMSServ__FinalizeFileObjectData;
	soap_serializeheader(soap);
	soap_serialize___TMSServ3__FinalizeFileObjectData(soap, &soap_tmp___TMSServ3__FinalizeFileObjectData);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___TMSServ3__FinalizeFileObjectData(soap, &soap_tmp___TMSServ3__FinalizeFileObjectData, "-TMSServ3:FinalizeFileObjectData", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___TMSServ3__FinalizeFileObjectData(soap, &soap_tmp___TMSServ3__FinalizeFileObjectData, "-TMSServ3:FinalizeFileObjectData", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&TMSServ__FinalizeFileObjectDataResponse)
		return soap_closesock(soap);
	TMSServ__FinalizeFileObjectDataResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	TMSServ__FinalizeFileObjectDataResponse.soap_get(soap, "TMSServ:FinalizeFileObjectDataResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int TMSServiceSoap12Proxy::OpenFileObjectDataProvider(const char *endpoint, const char *soap_action, _TMSServ__OpenFileObjectDataProvider *TMSServ__OpenFileObjectDataProvider, _TMSServ__OpenFileObjectDataProviderResponse &TMSServ__OpenFileObjectDataProviderResponse)
{	struct soap *soap = this;
	struct __TMSServ3__OpenFileObjectDataProvider soap_tmp___TMSServ3__OpenFileObjectDataProvider;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://localhost/TMSServ/TmsService.asmx";
	if (soap_action == NULL)
		soap_action = "http://xerofox.com/TMSService/OpenFileObjectDataProvider";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___TMSServ3__OpenFileObjectDataProvider.TMSServ__OpenFileObjectDataProvider = TMSServ__OpenFileObjectDataProvider;
	soap_serializeheader(soap);
	soap_serialize___TMSServ3__OpenFileObjectDataProvider(soap, &soap_tmp___TMSServ3__OpenFileObjectDataProvider);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___TMSServ3__OpenFileObjectDataProvider(soap, &soap_tmp___TMSServ3__OpenFileObjectDataProvider, "-TMSServ3:OpenFileObjectDataProvider", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___TMSServ3__OpenFileObjectDataProvider(soap, &soap_tmp___TMSServ3__OpenFileObjectDataProvider, "-TMSServ3:OpenFileObjectDataProvider", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&TMSServ__OpenFileObjectDataProviderResponse)
		return soap_closesock(soap);
	TMSServ__OpenFileObjectDataProviderResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	TMSServ__OpenFileObjectDataProviderResponse.soap_get(soap, "TMSServ:OpenFileObjectDataProviderResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int TMSServiceSoap12Proxy::OpenTapModelDataProvider(const char *endpoint, const char *soap_action, _TMSServ__OpenTapModelDataProvider *TMSServ__OpenTapModelDataProvider, _TMSServ__OpenTapModelDataProviderResponse &TMSServ__OpenTapModelDataProviderResponse)
{	struct soap *soap = this;
	struct __TMSServ3__OpenTapModelDataProvider soap_tmp___TMSServ3__OpenTapModelDataProvider;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://localhost/TMSServ/TmsService.asmx";
	if (soap_action == NULL)
		soap_action = "http://xerofox.com/TMSService/OpenTapModelDataProvider";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___TMSServ3__OpenTapModelDataProvider.TMSServ__OpenTapModelDataProvider = TMSServ__OpenTapModelDataProvider;
	soap_serializeheader(soap);
	soap_serialize___TMSServ3__OpenTapModelDataProvider(soap, &soap_tmp___TMSServ3__OpenTapModelDataProvider);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___TMSServ3__OpenTapModelDataProvider(soap, &soap_tmp___TMSServ3__OpenTapModelDataProvider, "-TMSServ3:OpenTapModelDataProvider", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___TMSServ3__OpenTapModelDataProvider(soap, &soap_tmp___TMSServ3__OpenTapModelDataProvider, "-TMSServ3:OpenTapModelDataProvider", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&TMSServ__OpenTapModelDataProviderResponse)
		return soap_closesock(soap);
	TMSServ__OpenTapModelDataProviderResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	TMSServ__OpenTapModelDataProviderResponse.soap_get(soap, "TMSServ:OpenTapModelDataProviderResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int TMSServiceSoap12Proxy::OpenServerObjectDataProvider(const char *endpoint, const char *soap_action, _TMSServ__OpenServerObjectDataProvider *TMSServ__OpenServerObjectDataProvider, _TMSServ__OpenServerObjectDataProviderResponse &TMSServ__OpenServerObjectDataProviderResponse)
{	struct soap *soap = this;
	struct __TMSServ3__OpenServerObjectDataProvider soap_tmp___TMSServ3__OpenServerObjectDataProvider;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://localhost/TMSServ/TmsService.asmx";
	if (soap_action == NULL)
		soap_action = "http://xerofox.com/TMSService/OpenServerObjectDataProvider";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___TMSServ3__OpenServerObjectDataProvider.TMSServ__OpenServerObjectDataProvider = TMSServ__OpenServerObjectDataProvider;
	soap_serializeheader(soap);
	soap_serialize___TMSServ3__OpenServerObjectDataProvider(soap, &soap_tmp___TMSServ3__OpenServerObjectDataProvider);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___TMSServ3__OpenServerObjectDataProvider(soap, &soap_tmp___TMSServ3__OpenServerObjectDataProvider, "-TMSServ3:OpenServerObjectDataProvider", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___TMSServ3__OpenServerObjectDataProvider(soap, &soap_tmp___TMSServ3__OpenServerObjectDataProvider, "-TMSServ3:OpenServerObjectDataProvider", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&TMSServ__OpenServerObjectDataProviderResponse)
		return soap_closesock(soap);
	TMSServ__OpenServerObjectDataProviderResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	TMSServ__OpenServerObjectDataProviderResponse.soap_get(soap, "TMSServ:OpenServerObjectDataProviderResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int TMSServiceSoap12Proxy::DownloadFileObject(const char *endpoint, const char *soap_action, _TMSServ__DownloadFileObject *TMSServ__DownloadFileObject, _TMSServ__DownloadFileObjectResponse &TMSServ__DownloadFileObjectResponse)
{	struct soap *soap = this;
	struct __TMSServ3__DownloadFileObject soap_tmp___TMSServ3__DownloadFileObject;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://localhost/TMSServ/TmsService.asmx";
	if (soap_action == NULL)
		soap_action = "http://xerofox.com/TMSService/DownloadFileObject";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___TMSServ3__DownloadFileObject.TMSServ__DownloadFileObject = TMSServ__DownloadFileObject;
	soap_serializeheader(soap);
	soap_serialize___TMSServ3__DownloadFileObject(soap, &soap_tmp___TMSServ3__DownloadFileObject);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___TMSServ3__DownloadFileObject(soap, &soap_tmp___TMSServ3__DownloadFileObject, "-TMSServ3:DownloadFileObject", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___TMSServ3__DownloadFileObject(soap, &soap_tmp___TMSServ3__DownloadFileObject, "-TMSServ3:DownloadFileObject", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&TMSServ__DownloadFileObjectResponse)
		return soap_closesock(soap);
	TMSServ__DownloadFileObjectResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	TMSServ__DownloadFileObjectResponse.soap_get(soap, "TMSServ:DownloadFileObjectResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int TMSServiceSoap12Proxy::CloseFileObjectDataProvider(const char *endpoint, const char *soap_action, _TMSServ__CloseFileObjectDataProvider *TMSServ__CloseFileObjectDataProvider, _TMSServ__CloseFileObjectDataProviderResponse &TMSServ__CloseFileObjectDataProviderResponse)
{	struct soap *soap = this;
	struct __TMSServ3__CloseFileObjectDataProvider soap_tmp___TMSServ3__CloseFileObjectDataProvider;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://localhost/TMSServ/TmsService.asmx";
	if (soap_action == NULL)
		soap_action = "http://xerofox.com/TMSService/CloseFileObjectDataProvider";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___TMSServ3__CloseFileObjectDataProvider.TMSServ__CloseFileObjectDataProvider = TMSServ__CloseFileObjectDataProvider;
	soap_serializeheader(soap);
	soap_serialize___TMSServ3__CloseFileObjectDataProvider(soap, &soap_tmp___TMSServ3__CloseFileObjectDataProvider);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___TMSServ3__CloseFileObjectDataProvider(soap, &soap_tmp___TMSServ3__CloseFileObjectDataProvider, "-TMSServ3:CloseFileObjectDataProvider", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___TMSServ3__CloseFileObjectDataProvider(soap, &soap_tmp___TMSServ3__CloseFileObjectDataProvider, "-TMSServ3:CloseFileObjectDataProvider", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&TMSServ__CloseFileObjectDataProviderResponse)
		return soap_closesock(soap);
	TMSServ__CloseFileObjectDataProviderResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	TMSServ__CloseFileObjectDataProviderResponse.soap_get(soap, "TMSServ:CloseFileObjectDataProviderResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
/* End of client proxy code */
