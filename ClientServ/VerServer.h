/* D:\Structure\!ClientServTemp\VerServer.h
   Generated by wsdl2h 2.8.19 from http://localhost/VersionService/VersionService.asmx?wsdl and typemap.dat
   2018-11-02 06:37:52 GMT

   DO NOT INCLUDE THIS FILE DIRECTLY INTO YOUR PROJECT BUILDS
   USE THE soapcpp2-GENERATED SOURCE CODE FILES FOR YOUR PROJECT BUILDS

   gSOAP XML Web services tools.
   Copyright (C) 2000-2014 Robert van Engelen, Genivia Inc. All Rights Reserved.
   Part of this software is released under one of the following licenses:
   GPL or Genivia's license for commercial use.
*/

/** @page page_notes Notes

@note HINTS:
 - Run soapcpp2 on D:\Structure\!ClientServTemp\VerServer.h to generate the SOAP/XML processing logic.
   Use soapcpp2 -I to specify paths for #import
   To build with STL, 'stlvector.h' is imported from 'import' dir in package.
   Use soapcpp2 -j to generate improved proxy and server classes.
 - Use wsdl2h -c and -s to generate pure C code or C++ code without STL.
 - Use 'typemap.dat' to control namespace bindings and type mappings.
   It is strongly recommended to customize the names of the namespace prefixes
   generated by wsdl2h. To do so, modify the prefix bindings in the Namespaces
   section below and add the modified lines to 'typemap.dat' to rerun wsdl2h.
 - Use Doxygen (www.doxygen.org) on this file to generate documentation.
 - Use wsdl2h -R to generate REST operations.
 - Use wsdl2h -nname to use name as the base namespace prefix instead of 'ns'.
 - Use wsdl2h -Nname for service prefix and produce multiple service bindings
 - Use wsdl2h -d to enable DOM support for xsd:anyType.
 - Use wsdl2h -g to auto-generate readers and writers for root elements.
 - Use wsdl2h -b to auto-generate bi-directional operations (duplex ops).
 - Struct/class members serialized as XML attributes are annotated with a '@'.
 - Struct/class members that have a special role are annotated with a '$'.

@warning
   DO NOT INCLUDE THIS ANNOTATED FILE DIRECTLY IN YOUR PROJECT SOURCE CODE.
   USE THE FILES GENERATED BY soapcpp2 FOR YOUR PROJECT'S SOURCE CODE:
   THE soapStub.h FILE CONTAINS THIS CONTENT WITHOUT ANNOTATIONS.

@copyright LICENSE:
@verbatim
--------------------------------------------------------------------------------
gSOAP XML Web services tools
Copyright (C) 2000-2014, Robert van Engelen, Genivia Inc. All Rights Reserved.

This software is released under one of the following licenses:
GPL or Genivia's license for commercial use.
--------------------------------------------------------------------------------
GPL license.

This program is free software; you can redistribute it and/or modify it under
the terms of the GNU General Public License as published by the Free Software
Foundation; either version 2 of the License, or (at your option) any later
version.

This program is distributed in the hope that it will be useful, but WITHOUT ANY
WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
PARTICULAR PURPOSE. See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with
this program; if not, write to the Free Software Foundation, Inc., 59 Temple
Place, Suite 330, Boston, MA 02111-1307 USA

Author contact information:
engelen@genivia.com / engelen@acm.org

This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
--------------------------------------------------------------------------------
A commercial-use license is available from Genivia, Inc., contact@genivia.com
--------------------------------------------------------------------------------
@endverbatim

*/


//gsoapopt w

/******************************************************************************\
 *                                                                            *
 * Definitions                                                                *
 *   http://xerofox.com/VersionService/                                       *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Import                                                                     *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Namespaces                                                          *
 *                                                                            *
\******************************************************************************/


/* NOTE:

It is strongly recommended to customize the names of the namespace prefixes
generated by wsdl2h. To do so, modify the prefix bindings below and add the
modified lines to typemap.dat to rerun wsdl2h:

VersionServ = "http://xerofox.com/VersionService/"

*/

#define SOAP_NAMESPACE_OF_VersionServ	"http://xerofox.com/VersionService/"
//gsoap VersionServ schema namespace:	http://xerofox.com/VersionService/
//gsoap VersionServ schema elementForm:	qualified
//gsoap VersionServ schema attributeForm:	unqualified

/******************************************************************************\
 *                                                                            *
 * Built-in Schema Types and Top-Level Elements and Attributes                *
 *                                                                            *
\******************************************************************************/

/// Built-in XSD type "xs:base64Binary".
class xsd__base64Binary
{	unsigned char *__ptr;
	int __size;
	char *id, *type, *options; // NOTE: non-NULL for DIMEM/MIME/MTOM XOP attachments only
	struct soap *soap;
};

/// Built-in XSD type "xs:byte".
typedef char xsd__byte;

/// Built-in XSD type "xs:unsignedByte".
typedef unsigned char xsd__unsignedByte;


/******************************************************************************\
 *                                                                            *
 * Forward Declarations                                                       *
 *                                                                            *
\******************************************************************************/


//  Forward declaration of class VersionServ__ArrayOfProductVersion.
class VersionServ__ArrayOfProductVersion;

//  Forward declaration of class VersionServ__ProductVersion.
class VersionServ__ProductVersion;

//  Forward declaration of class VersionServ__ArrayOfInt.
class VersionServ__ArrayOfInt;

//  Forward declaration of class VersionServ__ArrayOfVersionRevision.
class VersionServ__ArrayOfVersionRevision;

//  Forward declaration of class VersionServ__VersionRevision.
class VersionServ__VersionRevision;

//  Forward declaration of class VersionServ__DogAccessHistory.
class VersionServ__DogAccessHistory;

//  Forward declaration of class VersionServ__ObjectV.
class VersionServ__ObjectV;

//  Forward declaration of class VersionServ__ArrayOfDownLoadItem.
class VersionServ__ArrayOfDownLoadItem;

//  Forward declaration of class VersionServ__DownLoadItem.
class VersionServ__DownLoadItem;

//  Forward declaration of class VersionServ__FileHeader.
class VersionServ__FileHeader;

//  Forward declaration of class _VersionServ__Login.
class _VersionServ__Login;

//  Forward declaration of class _VersionServ__LoginResponse.
class _VersionServ__LoginResponse;

//  Forward declaration of class _VersionServ__LoginByByteArr.
class _VersionServ__LoginByByteArr;

//  Forward declaration of class _VersionServ__LoginByByteArrResponse.
class _VersionServ__LoginByByteArrResponse;

//  Forward declaration of class _VersionServ__GetUpdateVerByCurVer.
class _VersionServ__GetUpdateVerByCurVer;

//  Forward declaration of class _VersionServ__GetUpdateVerByCurVerResponse.
class _VersionServ__GetUpdateVerByCurVerResponse;

//  Forward declaration of class _VersionServ__SetRevisionReadFlag.
class _VersionServ__SetRevisionReadFlag;

//  Forward declaration of class _VersionServ__SetRevisionReadFlagResponse.
class _VersionServ__SetRevisionReadFlagResponse;

//  Forward declaration of class _VersionServ__CompareVersion.
class _VersionServ__CompareVersion;

//  Forward declaration of class _VersionServ__CompareVersionResponse.
class _VersionServ__CompareVersionResponse;

//  Forward declaration of class _VersionServ__GetVersionReleaseNotes.
class _VersionServ__GetVersionReleaseNotes;

//  Forward declaration of class _VersionServ__GetVersionReleaseNotesResponse.
class _VersionServ__GetVersionReleaseNotesResponse;

//  Forward declaration of class _VersionServ__GetDogAccessHistory.
class _VersionServ__GetDogAccessHistory;

//  Forward declaration of class _VersionServ__GetDogAccessHistoryResponse.
class _VersionServ__GetDogAccessHistoryResponse;

//  Forward declaration of class _VersionServ__QueryDownLoadItemArrByProductId.
class _VersionServ__QueryDownLoadItemArrByProductId;

//  Forward declaration of class _VersionServ__QueryDownLoadItemArrByProductIdResponse.
class _VersionServ__QueryDownLoadItemArrByProductIdResponse;

//  Forward declaration of class _VersionServ__GetFileHeader.
class _VersionServ__GetFileHeader;

//  Forward declaration of class _VersionServ__GetFileHeaderResponse.
class _VersionServ__GetFileHeaderResponse;

//  Forward declaration of class _VersionServ__QueryObjects.
class _VersionServ__QueryObjects;

//  Forward declaration of class _VersionServ__QueryObjectsResponse.
class _VersionServ__QueryObjectsResponse;

//  Forward declaration of class _VersionServ__DownloadObjects.
class _VersionServ__DownloadObjects;

//  Forward declaration of class _VersionServ__DownloadObjectsResponse.
class _VersionServ__DownloadObjectsResponse;

//  Forward declaration of class _VersionServ__SaveOrUpdateObjects.
class _VersionServ__SaveOrUpdateObjects;

//  Forward declaration of class _VersionServ__SaveOrUpdateObjectsResponse.
class _VersionServ__SaveOrUpdateObjectsResponse;


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://xerofox.com/VersionService/                                       *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://xerofox.com/VersionService/                                       *
 *                                                                            *
\******************************************************************************/

/// @brief "http://xerofox.com/VersionService/":ArrayOfProductVersion is a complexType.
///
/// class VersionServ__ArrayOfProductVersion operations:
/// - soap_new_VersionServ__ArrayOfProductVersion(soap*) allocate
/// - soap_new_VersionServ__ArrayOfProductVersion(soap*, int num) allocate array
/// - soap_new_req_VersionServ__ArrayOfProductVersion(soap*, ...) allocate, set required members
/// - soap_new_set_VersionServ__ArrayOfProductVersion(soap*, ...) allocate, set all public members
/// - int soap_read_VersionServ__ArrayOfProductVersion(soap*, VersionServ__ArrayOfProductVersion*) deserialize from a stream
/// - int soap_write_VersionServ__ArrayOfProductVersion(soap, VersionServ__ArrayOfProductVersion*) serialize to a stream
class VersionServ__ArrayOfProductVersion
{ public:
/// Size of array of VersionServ__ProductVersion* is 0..unbounded.
   $int                                  __sizeProductVersion           0;
/// Pointer to array VersionServ__ProductVersion* of size 0..unbounded.
    VersionServ__ProductVersion*        *ProductVersion                 0;	///< Nillable pointer.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://xerofox.com/VersionService/":ProductVersion is a complexType.
///
/// class VersionServ__ProductVersion operations:
/// - soap_new_VersionServ__ProductVersion(soap*) allocate
/// - soap_new_VersionServ__ProductVersion(soap*, int num) allocate array
/// - soap_new_req_VersionServ__ProductVersion(soap*, ...) allocate, set required members
/// - soap_new_set_VersionServ__ProductVersion(soap*, ...) allocate, set all public members
/// - int soap_read_VersionServ__ProductVersion(soap*, VersionServ__ProductVersion*) deserialize from a stream
/// - int soap_write_VersionServ__ProductVersion(soap, VersionServ__ProductVersion*) serialize to a stream
class VersionServ__ProductVersion
{ public:
/// Element "id" of XSD type xs:int.
    int                                  id                             1;	///< Required element.
/// Element "productId" of XSD type xs:unsignedInt.
    unsigned int                         productId                      1;	///< Required element.
/// Element "version" of XSD type xs:unsignedInt.
    unsigned int                         version                        1;	///< Required element.
/// Element "releaseDate" of XSD type xs:dateTime.
    time_t                               releaseDate                    1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://xerofox.com/VersionService/":ArrayOfInt is a complexType.
///
/// class VersionServ__ArrayOfInt operations:
/// - soap_new_VersionServ__ArrayOfInt(soap*) allocate
/// - soap_new_VersionServ__ArrayOfInt(soap*, int num) allocate array
/// - soap_new_req_VersionServ__ArrayOfInt(soap*, ...) allocate, set required members
/// - soap_new_set_VersionServ__ArrayOfInt(soap*, ...) allocate, set all public members
/// - int soap_read_VersionServ__ArrayOfInt(soap*, VersionServ__ArrayOfInt*) deserialize from a stream
/// - int soap_write_VersionServ__ArrayOfInt(soap, VersionServ__ArrayOfInt*) serialize to a stream
class VersionServ__ArrayOfInt
{ public:
/// Size of array of int is 0..unbounded.
   $int                                  __sizeint_                     0;
/// Pointer to array int of size 0..unbounded.
    int                                 *int_                           0;
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://xerofox.com/VersionService/":ArrayOfVersionRevision is a complexType.
///
/// class VersionServ__ArrayOfVersionRevision operations:
/// - soap_new_VersionServ__ArrayOfVersionRevision(soap*) allocate
/// - soap_new_VersionServ__ArrayOfVersionRevision(soap*, int num) allocate array
/// - soap_new_req_VersionServ__ArrayOfVersionRevision(soap*, ...) allocate, set required members
/// - soap_new_set_VersionServ__ArrayOfVersionRevision(soap*, ...) allocate, set all public members
/// - int soap_read_VersionServ__ArrayOfVersionRevision(soap*, VersionServ__ArrayOfVersionRevision*) deserialize from a stream
/// - int soap_write_VersionServ__ArrayOfVersionRevision(soap, VersionServ__ArrayOfVersionRevision*) serialize to a stream
class VersionServ__ArrayOfVersionRevision
{ public:
/// Size of array of VersionServ__VersionRevision* is 0..unbounded.
   $int                                  __sizeVersionRevision          0;
/// Pointer to array VersionServ__VersionRevision* of size 0..unbounded.
    VersionServ__VersionRevision*       *VersionRevision                0;	///< Nillable pointer.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://xerofox.com/VersionService/":VersionRevision is a complexType.
///
/// class VersionServ__VersionRevision operations:
/// - soap_new_VersionServ__VersionRevision(soap*) allocate
/// - soap_new_VersionServ__VersionRevision(soap*, int num) allocate array
/// - soap_new_req_VersionServ__VersionRevision(soap*, ...) allocate, set required members
/// - soap_new_set_VersionServ__VersionRevision(soap*, ...) allocate, set all public members
/// - int soap_read_VersionServ__VersionRevision(soap*, VersionServ__VersionRevision*) deserialize from a stream
/// - int soap_write_VersionServ__VersionRevision(soap, VersionServ__VersionRevision*) serialize to a stream
class VersionServ__VersionRevision
{ public:
/// Element "Id" of XSD type xs:unsignedInt.
    unsigned int                         Id                             1;	///< Required element.
/// Element "productId" of XSD type xs:unsignedInt.
    unsigned int                         productId                      1;	///< Required element.
/// Element "revisionType" of XSD type xs:byte.
    xsd__byte                            revisionType                   1;	///< Required element.
/// Element "important" of XSD type xs:unsignedByte.
    xsd__unsignedByte                    important                      1;	///< Required element.
/// Element "readed" of XSD type xs:boolean.
    bool                                 readed                         1;	///< Required element.
/// Element "title" of XSD type xs:string.
    char*                                title                          0;	///< Optional element.
/// Element "contents" of XSD type xs:string.
    char*                                contents                       0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://xerofox.com/VersionService/":ObjectV is a complexType.
///
/// class VersionServ__ObjectV operations:
/// - soap_new_VersionServ__ObjectV(soap*) allocate
/// - soap_new_VersionServ__ObjectV(soap*, int num) allocate array
/// - soap_new_req_VersionServ__ObjectV(soap*, ...) allocate, set required members
/// - soap_new_set_VersionServ__ObjectV(soap*, ...) allocate, set all public members
/// - int soap_read_VersionServ__ObjectV(soap*, VersionServ__ObjectV*) deserialize from a stream
/// - int soap_write_VersionServ__ObjectV(soap, VersionServ__ObjectV*) serialize to a stream
class VersionServ__ObjectV
{ public:
/// Element "id" of XSD type xs:int.
    int                                  id                             1;	///< Required element.
/// Element "tag" has no type or ref (empty or with XML content).
    _XML                                 tag                            0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://xerofox.com/VersionService/":ArrayOfDownLoadItem is a complexType.
///
/// class VersionServ__ArrayOfDownLoadItem operations:
/// - soap_new_VersionServ__ArrayOfDownLoadItem(soap*) allocate
/// - soap_new_VersionServ__ArrayOfDownLoadItem(soap*, int num) allocate array
/// - soap_new_req_VersionServ__ArrayOfDownLoadItem(soap*, ...) allocate, set required members
/// - soap_new_set_VersionServ__ArrayOfDownLoadItem(soap*, ...) allocate, set all public members
/// - int soap_read_VersionServ__ArrayOfDownLoadItem(soap*, VersionServ__ArrayOfDownLoadItem*) deserialize from a stream
/// - int soap_write_VersionServ__ArrayOfDownLoadItem(soap, VersionServ__ArrayOfDownLoadItem*) serialize to a stream
class VersionServ__ArrayOfDownLoadItem
{ public:
/// Size of array of VersionServ__DownLoadItem* is 0..unbounded.
   $int                                  __sizeDownLoadItem             0;
/// Pointer to array VersionServ__DownLoadItem* of size 0..unbounded.
    VersionServ__DownLoadItem*          *DownLoadItem                   0;	///< Nillable pointer.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://xerofox.com/VersionService/":Login
/// @brief "http://xerofox.com/VersionService/":Login is a complexType.
///
/// class _VersionServ__Login operations:
/// - soap_new__VersionServ__Login(soap*) allocate
/// - soap_new__VersionServ__Login(soap*, int num) allocate array
/// - soap_new_req__VersionServ__Login(soap*, ...) allocate, set required members
/// - soap_new_set__VersionServ__Login(soap*, ...) allocate, set all public members
/// - int soap_read__VersionServ__Login(soap*, _VersionServ__Login*) deserialize from a stream
/// - int soap_write__VersionServ__Login(soap, _VersionServ__Login*) serialize to a stream
class _VersionServ__Login
{ public:
/// Element "computerMac" of XSD type xs:base64Binary.
    xsd__base64Binary*                   computerMac                    0;	///< Optional element.
/// Element "computerIp" of XSD type xs:base64Binary.
    xsd__base64Binary*                   computerIp                     0;	///< Optional element.
/// Element "computerName" of XSD type xs:string.
    char*                                computerName                   0;	///< Optional element.
/// Element "dogSerial" of XSD type xs:unsignedInt.
    unsigned int                         dogSerial                      1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://xerofox.com/VersionService/":LoginResponse
/// @brief "http://xerofox.com/VersionService/":LoginResponse is a complexType.
///
/// class _VersionServ__LoginResponse operations:
/// - soap_new__VersionServ__LoginResponse(soap*) allocate
/// - soap_new__VersionServ__LoginResponse(soap*, int num) allocate array
/// - soap_new_req__VersionServ__LoginResponse(soap*, ...) allocate, set required members
/// - soap_new_set__VersionServ__LoginResponse(soap*, ...) allocate, set all public members
/// - int soap_read__VersionServ__LoginResponse(soap*, _VersionServ__LoginResponse*) deserialize from a stream
/// - int soap_write__VersionServ__LoginResponse(soap, _VersionServ__LoginResponse*) serialize to a stream
class _VersionServ__LoginResponse
{ public:
/// Element "LoginResult" of XSD type xs:unsignedInt.
    unsigned int                         LoginResult                    1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://xerofox.com/VersionService/":LoginByByteArr
/// @brief "http://xerofox.com/VersionService/":LoginByByteArr is a complexType.
///
/// class _VersionServ__LoginByByteArr operations:
/// - soap_new__VersionServ__LoginByByteArr(soap*) allocate
/// - soap_new__VersionServ__LoginByByteArr(soap*, int num) allocate array
/// - soap_new_req__VersionServ__LoginByByteArr(soap*, ...) allocate, set required members
/// - soap_new_set__VersionServ__LoginByByteArr(soap*, ...) allocate, set all public members
/// - int soap_read__VersionServ__LoginByByteArr(soap*, _VersionServ__LoginByByteArr*) deserialize from a stream
/// - int soap_write__VersionServ__LoginByByteArr(soap, _VersionServ__LoginByByteArr*) serialize to a stream
class _VersionServ__LoginByByteArr
{ public:
/// Element "userInfo" of XSD type xs:base64Binary.
    xsd__base64Binary*                   userInfo                       0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://xerofox.com/VersionService/":LoginByByteArrResponse
/// @brief "http://xerofox.com/VersionService/":LoginByByteArrResponse is a complexType.
///
/// class _VersionServ__LoginByByteArrResponse operations:
/// - soap_new__VersionServ__LoginByByteArrResponse(soap*) allocate
/// - soap_new__VersionServ__LoginByByteArrResponse(soap*, int num) allocate array
/// - soap_new_req__VersionServ__LoginByByteArrResponse(soap*, ...) allocate, set required members
/// - soap_new_set__VersionServ__LoginByByteArrResponse(soap*, ...) allocate, set all public members
/// - int soap_read__VersionServ__LoginByByteArrResponse(soap*, _VersionServ__LoginByByteArrResponse*) deserialize from a stream
/// - int soap_write__VersionServ__LoginByByteArrResponse(soap, _VersionServ__LoginByByteArrResponse*) serialize to a stream
class _VersionServ__LoginByByteArrResponse
{ public:
/// Element "LoginByByteArrResult" of XSD type xs:unsignedInt.
    unsigned int                         LoginByByteArrResult           1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://xerofox.com/VersionService/":GetUpdateVerByCurVer
/// @brief "http://xerofox.com/VersionService/":GetUpdateVerByCurVer is a complexType.
///
/// class _VersionServ__GetUpdateVerByCurVer operations:
/// - soap_new__VersionServ__GetUpdateVerByCurVer(soap*) allocate
/// - soap_new__VersionServ__GetUpdateVerByCurVer(soap*, int num) allocate array
/// - soap_new_req__VersionServ__GetUpdateVerByCurVer(soap*, ...) allocate, set required members
/// - soap_new_set__VersionServ__GetUpdateVerByCurVer(soap*, ...) allocate, set all public members
/// - int soap_read__VersionServ__GetUpdateVerByCurVer(soap*, _VersionServ__GetUpdateVerByCurVer*) deserialize from a stream
/// - int soap_write__VersionServ__GetUpdateVerByCurVer(soap, _VersionServ__GetUpdateVerByCurVer*) serialize to a stream
class _VersionServ__GetUpdateVerByCurVer
{ public:
/// Element "userId" of XSD type xs:unsignedInt.
    unsigned int                         userId                         1;	///< Required element.
/// Element "product_id" of XSD type xs:unsignedInt.
    unsigned int                         product_USCOREid               1;	///< Required element.
/// Element "uCurVersion" of XSD type xs:unsignedInt.
    unsigned int                         uCurVersion                    1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://xerofox.com/VersionService/":GetUpdateVerByCurVerResponse
/// @brief "http://xerofox.com/VersionService/":GetUpdateVerByCurVerResponse is a complexType.
///
/// class _VersionServ__GetUpdateVerByCurVerResponse operations:
/// - soap_new__VersionServ__GetUpdateVerByCurVerResponse(soap*) allocate
/// - soap_new__VersionServ__GetUpdateVerByCurVerResponse(soap*, int num) allocate array
/// - soap_new_req__VersionServ__GetUpdateVerByCurVerResponse(soap*, ...) allocate, set required members
/// - soap_new_set__VersionServ__GetUpdateVerByCurVerResponse(soap*, ...) allocate, set all public members
/// - int soap_read__VersionServ__GetUpdateVerByCurVerResponse(soap*, _VersionServ__GetUpdateVerByCurVerResponse*) deserialize from a stream
/// - int soap_write__VersionServ__GetUpdateVerByCurVerResponse(soap, _VersionServ__GetUpdateVerByCurVerResponse*) serialize to a stream
class _VersionServ__GetUpdateVerByCurVerResponse
{ public:
/// Element "GetUpdateVerByCurVerResult" of XSD type "http://xerofox.com/VersionService/":ArrayOfProductVersion.
    VersionServ__ArrayOfProductVersion*  GetUpdateVerByCurVerResult     0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://xerofox.com/VersionService/":SetRevisionReadFlag
/// @brief "http://xerofox.com/VersionService/":SetRevisionReadFlag is a complexType.
///
/// class _VersionServ__SetRevisionReadFlag operations:
/// - soap_new__VersionServ__SetRevisionReadFlag(soap*) allocate
/// - soap_new__VersionServ__SetRevisionReadFlag(soap*, int num) allocate array
/// - soap_new_req__VersionServ__SetRevisionReadFlag(soap*, ...) allocate, set required members
/// - soap_new_set__VersionServ__SetRevisionReadFlag(soap*, ...) allocate, set all public members
/// - int soap_read__VersionServ__SetRevisionReadFlag(soap*, _VersionServ__SetRevisionReadFlag*) deserialize from a stream
/// - int soap_write__VersionServ__SetRevisionReadFlag(soap, _VersionServ__SetRevisionReadFlag*) serialize to a stream
class _VersionServ__SetRevisionReadFlag
{ public:
/// Element "userId" of XSD type xs:int.
    int                                  userId                         1;	///< Required element.
/// Element "revisionIdArr" of XSD type "http://xerofox.com/VersionService/":ArrayOfInt.
    VersionServ__ArrayOfInt*             revisionIdArr                  0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://xerofox.com/VersionService/":SetRevisionReadFlagResponse
/// @brief "http://xerofox.com/VersionService/":SetRevisionReadFlagResponse is a complexType.
///
/// class _VersionServ__SetRevisionReadFlagResponse operations:
/// - soap_new__VersionServ__SetRevisionReadFlagResponse(soap*) allocate
/// - soap_new__VersionServ__SetRevisionReadFlagResponse(soap*, int num) allocate array
/// - soap_new_req__VersionServ__SetRevisionReadFlagResponse(soap*, ...) allocate, set required members
/// - soap_new_set__VersionServ__SetRevisionReadFlagResponse(soap*, ...) allocate, set all public members
/// - int soap_read__VersionServ__SetRevisionReadFlagResponse(soap*, _VersionServ__SetRevisionReadFlagResponse*) deserialize from a stream
/// - int soap_write__VersionServ__SetRevisionReadFlagResponse(soap, _VersionServ__SetRevisionReadFlagResponse*) serialize to a stream
class _VersionServ__SetRevisionReadFlagResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://xerofox.com/VersionService/":CompareVersion
/// @brief "http://xerofox.com/VersionService/":CompareVersion is a complexType.
///
/// class _VersionServ__CompareVersion operations:
/// - soap_new__VersionServ__CompareVersion(soap*) allocate
/// - soap_new__VersionServ__CompareVersion(soap*, int num) allocate array
/// - soap_new_req__VersionServ__CompareVersion(soap*, ...) allocate, set required members
/// - soap_new_set__VersionServ__CompareVersion(soap*, ...) allocate, set all public members
/// - int soap_read__VersionServ__CompareVersion(soap*, _VersionServ__CompareVersion*) deserialize from a stream
/// - int soap_write__VersionServ__CompareVersion(soap, _VersionServ__CompareVersion*) serialize to a stream
class _VersionServ__CompareVersion
{ public:
/// Element "userId" of XSD type xs:int.
    int                                  userId                         1;	///< Required element.
/// Element "product_id" of XSD type xs:unsignedInt.
    unsigned int                         product_USCOREid               1;	///< Required element.
/// Element "uCurVersion" of XSD type xs:unsignedInt.
    unsigned int                         uCurVersion                    1;	///< Required element.
/// Element "uUpdateVersion" of XSD type xs:unsignedInt.
    unsigned int                         uUpdateVersion                 1;	///< Required element.
/// Element "bLoadOnHasNew" of XSD type xs:boolean.
    bool                                 bLoadOnHasNew                  1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://xerofox.com/VersionService/":CompareVersionResponse
/// @brief "http://xerofox.com/VersionService/":CompareVersionResponse is a complexType.
///
/// class _VersionServ__CompareVersionResponse operations:
/// - soap_new__VersionServ__CompareVersionResponse(soap*) allocate
/// - soap_new__VersionServ__CompareVersionResponse(soap*, int num) allocate array
/// - soap_new_req__VersionServ__CompareVersionResponse(soap*, ...) allocate, set required members
/// - soap_new_set__VersionServ__CompareVersionResponse(soap*, ...) allocate, set all public members
/// - int soap_read__VersionServ__CompareVersionResponse(soap*, _VersionServ__CompareVersionResponse*) deserialize from a stream
/// - int soap_write__VersionServ__CompareVersionResponse(soap, _VersionServ__CompareVersionResponse*) serialize to a stream
class _VersionServ__CompareVersionResponse
{ public:
/// Element "CompareVersionResult" of XSD type "http://xerofox.com/VersionService/":ArrayOfVersionRevision.
    VersionServ__ArrayOfVersionRevision*  CompareVersionResult           0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://xerofox.com/VersionService/":GetVersionReleaseNotes
/// @brief "http://xerofox.com/VersionService/":GetVersionReleaseNotes is a complexType.
///
/// class _VersionServ__GetVersionReleaseNotes operations:
/// - soap_new__VersionServ__GetVersionReleaseNotes(soap*) allocate
/// - soap_new__VersionServ__GetVersionReleaseNotes(soap*, int num) allocate array
/// - soap_new_req__VersionServ__GetVersionReleaseNotes(soap*, ...) allocate, set required members
/// - soap_new_set__VersionServ__GetVersionReleaseNotes(soap*, ...) allocate, set all public members
/// - int soap_read__VersionServ__GetVersionReleaseNotes(soap*, _VersionServ__GetVersionReleaseNotes*) deserialize from a stream
/// - int soap_write__VersionServ__GetVersionReleaseNotes(soap, _VersionServ__GetVersionReleaseNotes*) serialize to a stream
class _VersionServ__GetVersionReleaseNotes
{ public:
/// Element "product_id" of XSD type xs:unsignedInt.
    unsigned int                         product_USCOREid               1;	///< Required element.
/// Element "uCurVersion" of XSD type xs:unsignedInt.
    unsigned int                         uCurVersion                    1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://xerofox.com/VersionService/":GetVersionReleaseNotesResponse
/// @brief "http://xerofox.com/VersionService/":GetVersionReleaseNotesResponse is a complexType.
///
/// class _VersionServ__GetVersionReleaseNotesResponse operations:
/// - soap_new__VersionServ__GetVersionReleaseNotesResponse(soap*) allocate
/// - soap_new__VersionServ__GetVersionReleaseNotesResponse(soap*, int num) allocate array
/// - soap_new_req__VersionServ__GetVersionReleaseNotesResponse(soap*, ...) allocate, set required members
/// - soap_new_set__VersionServ__GetVersionReleaseNotesResponse(soap*, ...) allocate, set all public members
/// - int soap_read__VersionServ__GetVersionReleaseNotesResponse(soap*, _VersionServ__GetVersionReleaseNotesResponse*) deserialize from a stream
/// - int soap_write__VersionServ__GetVersionReleaseNotesResponse(soap, _VersionServ__GetVersionReleaseNotesResponse*) serialize to a stream
class _VersionServ__GetVersionReleaseNotesResponse
{ public:
/// Element "GetVersionReleaseNotesResult" of XSD type "http://xerofox.com/VersionService/":ArrayOfVersionRevision.
    VersionServ__ArrayOfVersionRevision*  GetVersionReleaseNotesResult   0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://xerofox.com/VersionService/":GetDogAccessHistory
/// @brief "http://xerofox.com/VersionService/":GetDogAccessHistory is a complexType.
///
/// class _VersionServ__GetDogAccessHistory operations:
/// - soap_new__VersionServ__GetDogAccessHistory(soap*) allocate
/// - soap_new__VersionServ__GetDogAccessHistory(soap*, int num) allocate array
/// - soap_new_req__VersionServ__GetDogAccessHistory(soap*, ...) allocate, set required members
/// - soap_new_set__VersionServ__GetDogAccessHistory(soap*, ...) allocate, set all public members
/// - int soap_read__VersionServ__GetDogAccessHistory(soap*, _VersionServ__GetDogAccessHistory*) deserialize from a stream
/// - int soap_write__VersionServ__GetDogAccessHistory(soap, _VersionServ__GetDogAccessHistory*) serialize to a stream
class _VersionServ__GetDogAccessHistory
{ public:
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://xerofox.com/VersionService/":GetDogAccessHistoryResponse
/// @brief "http://xerofox.com/VersionService/":GetDogAccessHistoryResponse is a complexType.
///
/// class _VersionServ__GetDogAccessHistoryResponse operations:
/// - soap_new__VersionServ__GetDogAccessHistoryResponse(soap*) allocate
/// - soap_new__VersionServ__GetDogAccessHistoryResponse(soap*, int num) allocate array
/// - soap_new_req__VersionServ__GetDogAccessHistoryResponse(soap*, ...) allocate, set required members
/// - soap_new_set__VersionServ__GetDogAccessHistoryResponse(soap*, ...) allocate, set all public members
/// - int soap_read__VersionServ__GetDogAccessHistoryResponse(soap*, _VersionServ__GetDogAccessHistoryResponse*) deserialize from a stream
/// - int soap_write__VersionServ__GetDogAccessHistoryResponse(soap, _VersionServ__GetDogAccessHistoryResponse*) serialize to a stream
class _VersionServ__GetDogAccessHistoryResponse
{ public:
/// Element "GetDogAccessHistoryResult" of XSD type "http://xerofox.com/VersionService/":DogAccessHistory.
    VersionServ__DogAccessHistory*       GetDogAccessHistoryResult      0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://xerofox.com/VersionService/":QueryDownLoadItemArrByProductId
/// @brief "http://xerofox.com/VersionService/":QueryDownLoadItemArrByProductId is a complexType.
///
/// class _VersionServ__QueryDownLoadItemArrByProductId operations:
/// - soap_new__VersionServ__QueryDownLoadItemArrByProductId(soap*) allocate
/// - soap_new__VersionServ__QueryDownLoadItemArrByProductId(soap*, int num) allocate array
/// - soap_new_req__VersionServ__QueryDownLoadItemArrByProductId(soap*, ...) allocate, set required members
/// - soap_new_set__VersionServ__QueryDownLoadItemArrByProductId(soap*, ...) allocate, set all public members
/// - int soap_read__VersionServ__QueryDownLoadItemArrByProductId(soap*, _VersionServ__QueryDownLoadItemArrByProductId*) deserialize from a stream
/// - int soap_write__VersionServ__QueryDownLoadItemArrByProductId(soap, _VersionServ__QueryDownLoadItemArrByProductId*) serialize to a stream
class _VersionServ__QueryDownLoadItemArrByProductId
{ public:
/// Element "dogNo" of XSD type xs:string.
    char*                                dogNo                          0;	///< Optional element.
/// Element "productId" of XSD type xs:int.
    int                                  productId                      1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://xerofox.com/VersionService/":QueryDownLoadItemArrByProductIdResponse
/// @brief "http://xerofox.com/VersionService/":QueryDownLoadItemArrByProductIdResponse is a complexType.
///
/// class _VersionServ__QueryDownLoadItemArrByProductIdResponse operations:
/// - soap_new__VersionServ__QueryDownLoadItemArrByProductIdResponse(soap*) allocate
/// - soap_new__VersionServ__QueryDownLoadItemArrByProductIdResponse(soap*, int num) allocate array
/// - soap_new_req__VersionServ__QueryDownLoadItemArrByProductIdResponse(soap*, ...) allocate, set required members
/// - soap_new_set__VersionServ__QueryDownLoadItemArrByProductIdResponse(soap*, ...) allocate, set all public members
/// - int soap_read__VersionServ__QueryDownLoadItemArrByProductIdResponse(soap*, _VersionServ__QueryDownLoadItemArrByProductIdResponse*) deserialize from a stream
/// - int soap_write__VersionServ__QueryDownLoadItemArrByProductIdResponse(soap, _VersionServ__QueryDownLoadItemArrByProductIdResponse*) serialize to a stream
class _VersionServ__QueryDownLoadItemArrByProductIdResponse
{ public:
/// Element "QueryDownLoadItemArrByProductIdResult" of XSD type "http://xerofox.com/VersionService/":ArrayOfDownLoadItem.
    VersionServ__ArrayOfDownLoadItem*    QueryDownLoadItemArrByProductIdResult 0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://xerofox.com/VersionService/":GetFileHeader
/// @brief "http://xerofox.com/VersionService/":GetFileHeader is a complexType.
///
/// class _VersionServ__GetFileHeader operations:
/// - soap_new__VersionServ__GetFileHeader(soap*) allocate
/// - soap_new__VersionServ__GetFileHeader(soap*, int num) allocate array
/// - soap_new_req__VersionServ__GetFileHeader(soap*, ...) allocate, set required members
/// - soap_new_set__VersionServ__GetFileHeader(soap*, ...) allocate, set all public members
/// - int soap_read__VersionServ__GetFileHeader(soap*, _VersionServ__GetFileHeader*) deserialize from a stream
/// - int soap_write__VersionServ__GetFileHeader(soap, _VersionServ__GetFileHeader*) serialize to a stream
class _VersionServ__GetFileHeader
{ public:
/// Element "downLoadItemId" of XSD type xs:int.
    int                                  downLoadItemId                 1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://xerofox.com/VersionService/":GetFileHeaderResponse
/// @brief "http://xerofox.com/VersionService/":GetFileHeaderResponse is a complexType.
///
/// class _VersionServ__GetFileHeaderResponse operations:
/// - soap_new__VersionServ__GetFileHeaderResponse(soap*) allocate
/// - soap_new__VersionServ__GetFileHeaderResponse(soap*, int num) allocate array
/// - soap_new_req__VersionServ__GetFileHeaderResponse(soap*, ...) allocate, set required members
/// - soap_new_set__VersionServ__GetFileHeaderResponse(soap*, ...) allocate, set all public members
/// - int soap_read__VersionServ__GetFileHeaderResponse(soap*, _VersionServ__GetFileHeaderResponse*) deserialize from a stream
/// - int soap_write__VersionServ__GetFileHeaderResponse(soap, _VersionServ__GetFileHeaderResponse*) serialize to a stream
class _VersionServ__GetFileHeaderResponse
{ public:
/// Element "GetFileHeaderResult" of XSD type "http://xerofox.com/VersionService/":FileHeader.
    VersionServ__FileHeader*             GetFileHeaderResult            0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://xerofox.com/VersionService/":QueryObjects
/// @brief "http://xerofox.com/VersionService/":QueryObjects is a complexType.
///
/// class _VersionServ__QueryObjects operations:
/// - soap_new__VersionServ__QueryObjects(soap*) allocate
/// - soap_new__VersionServ__QueryObjects(soap*, int num) allocate array
/// - soap_new_req__VersionServ__QueryObjects(soap*, ...) allocate, set required members
/// - soap_new_set__VersionServ__QueryObjects(soap*, ...) allocate, set all public members
/// - int soap_read__VersionServ__QueryObjects(soap*, _VersionServ__QueryObjects*) deserialize from a stream
/// - int soap_write__VersionServ__QueryObjects(soap, _VersionServ__QueryObjects*) serialize to a stream
class _VersionServ__QueryObjects
{ public:
/// Element "sessionId" of XSD type xs:int.
    int                                  sessionId                      1;	///< Required element.
/// Element "clsName" of XSD type xs:string.
    char*                                clsName                        0;	///< Optional element.
/// Element "xmlScope" of XSD type xs:string.
    char*                                xmlScope                       0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://xerofox.com/VersionService/":QueryObjectsResponse
/// @brief "http://xerofox.com/VersionService/":QueryObjectsResponse is a complexType.
///
/// class _VersionServ__QueryObjectsResponse operations:
/// - soap_new__VersionServ__QueryObjectsResponse(soap*) allocate
/// - soap_new__VersionServ__QueryObjectsResponse(soap*, int num) allocate array
/// - soap_new_req__VersionServ__QueryObjectsResponse(soap*, ...) allocate, set required members
/// - soap_new_set__VersionServ__QueryObjectsResponse(soap*, ...) allocate, set all public members
/// - int soap_read__VersionServ__QueryObjectsResponse(soap*, _VersionServ__QueryObjectsResponse*) deserialize from a stream
/// - int soap_write__VersionServ__QueryObjectsResponse(soap, _VersionServ__QueryObjectsResponse*) serialize to a stream
class _VersionServ__QueryObjectsResponse
{ public:
/// Element "QueryObjectsResult" of XSD type xs:base64Binary.
    xsd__base64Binary*                   QueryObjectsResult             0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://xerofox.com/VersionService/":DownloadObjects
/// @brief "http://xerofox.com/VersionService/":DownloadObjects is a complexType.
///
/// class _VersionServ__DownloadObjects operations:
/// - soap_new__VersionServ__DownloadObjects(soap*) allocate
/// - soap_new__VersionServ__DownloadObjects(soap*, int num) allocate array
/// - soap_new_req__VersionServ__DownloadObjects(soap*, ...) allocate, set required members
/// - soap_new_set__VersionServ__DownloadObjects(soap*, ...) allocate, set all public members
/// - int soap_read__VersionServ__DownloadObjects(soap*, _VersionServ__DownloadObjects*) deserialize from a stream
/// - int soap_write__VersionServ__DownloadObjects(soap, _VersionServ__DownloadObjects*) serialize to a stream
class _VersionServ__DownloadObjects
{ public:
/// Element "sessionId" of XSD type xs:int.
    int                                  sessionId                      1;	///< Required element.
/// Element "clsName" of XSD type xs:string.
    char*                                clsName                        0;	///< Optional element.
/// Element "idarr" of XSD type "http://xerofox.com/VersionService/":ArrayOfInt.
    VersionServ__ArrayOfInt*             idarr                          0;	///< Optional element.
/// Element "serialize" of XSD type xs:unsignedInt.
    unsigned int                         serialize                      1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://xerofox.com/VersionService/":DownloadObjectsResponse
/// @brief "http://xerofox.com/VersionService/":DownloadObjectsResponse is a complexType.
///
/// class _VersionServ__DownloadObjectsResponse operations:
/// - soap_new__VersionServ__DownloadObjectsResponse(soap*) allocate
/// - soap_new__VersionServ__DownloadObjectsResponse(soap*, int num) allocate array
/// - soap_new_req__VersionServ__DownloadObjectsResponse(soap*, ...) allocate, set required members
/// - soap_new_set__VersionServ__DownloadObjectsResponse(soap*, ...) allocate, set all public members
/// - int soap_read__VersionServ__DownloadObjectsResponse(soap*, _VersionServ__DownloadObjectsResponse*) deserialize from a stream
/// - int soap_write__VersionServ__DownloadObjectsResponse(soap, _VersionServ__DownloadObjectsResponse*) serialize to a stream
class _VersionServ__DownloadObjectsResponse
{ public:
/// Element "DownloadObjectsResult" of XSD type xs:base64Binary.
    xsd__base64Binary*                   DownloadObjectsResult          0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://xerofox.com/VersionService/":SaveOrUpdateObjects
/// @brief "http://xerofox.com/VersionService/":SaveOrUpdateObjects is a complexType.
///
/// class _VersionServ__SaveOrUpdateObjects operations:
/// - soap_new__VersionServ__SaveOrUpdateObjects(soap*) allocate
/// - soap_new__VersionServ__SaveOrUpdateObjects(soap*, int num) allocate array
/// - soap_new_req__VersionServ__SaveOrUpdateObjects(soap*, ...) allocate, set required members
/// - soap_new_set__VersionServ__SaveOrUpdateObjects(soap*, ...) allocate, set all public members
/// - int soap_read__VersionServ__SaveOrUpdateObjects(soap*, _VersionServ__SaveOrUpdateObjects*) deserialize from a stream
/// - int soap_write__VersionServ__SaveOrUpdateObjects(soap, _VersionServ__SaveOrUpdateObjects*) serialize to a stream
class _VersionServ__SaveOrUpdateObjects
{ public:
/// Element "sessionId" of XSD type xs:int.
    int                                  sessionId                      1;	///< Required element.
/// Element "clsName" of XSD type xs:string.
    char*                                clsName                        0;	///< Optional element.
/// Element "xmlformat" of XSD type xs:string.
    char*                                xmlformat                      0;	///< Optional element.
/// Element "byteArr" of XSD type xs:base64Binary.
    xsd__base64Binary*                   byteArr                        0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://xerofox.com/VersionService/":SaveOrUpdateObjectsResponse
/// @brief "http://xerofox.com/VersionService/":SaveOrUpdateObjectsResponse is a complexType.
///
/// class _VersionServ__SaveOrUpdateObjectsResponse operations:
/// - soap_new__VersionServ__SaveOrUpdateObjectsResponse(soap*) allocate
/// - soap_new__VersionServ__SaveOrUpdateObjectsResponse(soap*, int num) allocate array
/// - soap_new_req__VersionServ__SaveOrUpdateObjectsResponse(soap*, ...) allocate, set required members
/// - soap_new_set__VersionServ__SaveOrUpdateObjectsResponse(soap*, ...) allocate, set all public members
/// - int soap_read__VersionServ__SaveOrUpdateObjectsResponse(soap*, _VersionServ__SaveOrUpdateObjectsResponse*) deserialize from a stream
/// - int soap_write__VersionServ__SaveOrUpdateObjectsResponse(soap, _VersionServ__SaveOrUpdateObjectsResponse*) serialize to a stream
class _VersionServ__SaveOrUpdateObjectsResponse
{ public:
/// Element "SaveOrUpdateObjectsResult" of XSD type xs:string.
    char*                                SaveOrUpdateObjectsResult      0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://xerofox.com/VersionService/":DogAccessHistory is a complexType with complexContent extension of XSD type "http://xerofox.com/VersionService/":ObjectV.
///
/// class VersionServ__DogAccessHistory operations:
/// - soap_new_VersionServ__DogAccessHistory(soap*) allocate
/// - soap_new_VersionServ__DogAccessHistory(soap*, int num) allocate array
/// - soap_new_req_VersionServ__DogAccessHistory(soap*, ...) allocate, set required members
/// - soap_new_set_VersionServ__DogAccessHistory(soap*, ...) allocate, set all public members
/// - int soap_read_VersionServ__DogAccessHistory(soap*, VersionServ__DogAccessHistory*) deserialize from a stream
/// - int soap_write_VersionServ__DogAccessHistory(soap, VersionServ__DogAccessHistory*) serialize to a stream
class VersionServ__DogAccessHistory : public VersionServ__ObjectV
{ public:
/*  INHERITED FROM VersionServ__ObjectV:
/// Element "id" of XSD type xs:int.
    int                                  id                             1;	///< Required element.
/// Element "tag" has no type or ref (empty or with XML content).
    _XML                                 tag                            0;	///< Optional element.
    END OF INHERITED FROM VersionServ__ObjectV */
/// Element "dogserial" of XSD type xs:string.
    char*                                dogserial                      0;	///< Optional element.
/// Element "endUserId" of XSD type xs:int.
    int                                  endUserId                      1;	///< Required element.
/// Element "productId" of XSD type xs:int.
    int                                  productId                      1;	///< Required element.
/// Element "cycleSerial" of XSD type xs:int.
    int                                  cycleSerial                    1;	///< Required element.
/// Element "accessType" of XSD type xs:int.
    int                                  accessType                     1;	///< Required element.
/// Element "accessOccurDate" of XSD type xs:int.
    int                                  accessOccurDate                1;	///< Required element.
};

/// @brief "http://xerofox.com/VersionService/":DownLoadItem is a complexType with complexContent extension of XSD type "http://xerofox.com/VersionService/":ObjectV.
///
/// class VersionServ__DownLoadItem operations:
/// - soap_new_VersionServ__DownLoadItem(soap*) allocate
/// - soap_new_VersionServ__DownLoadItem(soap*, int num) allocate array
/// - soap_new_req_VersionServ__DownLoadItem(soap*, ...) allocate, set required members
/// - soap_new_set_VersionServ__DownLoadItem(soap*, ...) allocate, set all public members
/// - int soap_read_VersionServ__DownLoadItem(soap*, VersionServ__DownLoadItem*) deserialize from a stream
/// - int soap_write_VersionServ__DownLoadItem(soap, VersionServ__DownLoadItem*) serialize to a stream
class VersionServ__DownLoadItem : public VersionServ__ObjectV
{ public:
/*  INHERITED FROM VersionServ__ObjectV:
/// Element "id" of XSD type xs:int.
    int                                  id                             1;	///< Required element.
/// Element "tag" has no type or ref (empty or with XML content).
    _XML                                 tag                            0;	///< Optional element.
    END OF INHERITED FROM VersionServ__ObjectV */
/// Element "title" of XSD type xs:string.
    char*                                title                          0;	///< Optional element.
/// Element "updateDate" of XSD type xs:dateTime.
    time_t                               updateDate                     1;	///< Required element.
/// Element "notes" of XSD type xs:string.
    char*                                notes                          0;	///< Optional element.
/// Element "serialno" of XSD type xs:int.
    int                                  serialno                       1;	///< Required element.
/// Element "occurDateValue" of XSD type xs:string.
    char*                                occurDateValue                 0;	///< Optional element.
/// Element "fileName" of XSD type xs:string.
    char*                                fileName                       0;	///< Optional element.
/// Element "productId" of XSD type xs:int.
    int                                  productId                      1;	///< Required element.
};

/// @brief "http://xerofox.com/VersionService/":FileHeader is a complexType with complexContent extension of XSD type "http://xerofox.com/VersionService/":ObjectV.
///
/// class VersionServ__FileHeader operations:
/// - soap_new_VersionServ__FileHeader(soap*) allocate
/// - soap_new_VersionServ__FileHeader(soap*, int num) allocate array
/// - soap_new_req_VersionServ__FileHeader(soap*, ...) allocate, set required members
/// - soap_new_set_VersionServ__FileHeader(soap*, ...) allocate, set all public members
/// - int soap_read_VersionServ__FileHeader(soap*, VersionServ__FileHeader*) deserialize from a stream
/// - int soap_write_VersionServ__FileHeader(soap, VersionServ__FileHeader*) serialize to a stream
class VersionServ__FileHeader : public VersionServ__ObjectV
{ public:
/*  INHERITED FROM VersionServ__ObjectV:
/// Element "id" of XSD type xs:int.
    int                                  id                             1;	///< Required element.
/// Element "tag" has no type or ref (empty or with XML content).
    _XML                                 tag                            0;	///< Optional element.
    END OF INHERITED FROM VersionServ__ObjectV */
/// Element "filePath" of XSD type xs:string.
    char*                                filePath                       0;	///< Optional element.
/// Element "fileType" of XSD type xs:int.
    int                                  fileType                       1;	///< Required element.
/// Element "fileName" of XSD type xs:string.
    char*                                fileName                       0;	///< Optional element.
/// Element "fileNameServer" of XSD type xs:string.
    char*                                fileNameServer                 0;	///< Optional element.
/// Element "hostId" of XSD type xs:int.
    int                                  hostId                         1;	///< Required element.
/// Element "ownerId" of XSD type xs:int.
    int                                  ownerId                        1;	///< Required element.
/// Element "matter" of XSD type xs:base64Binary.
    xsd__base64Binary*                   matter                         0;	///< Optional element.
/// Element "description" of XSD type xs:string.
    char*                                description                    0;	///< Optional element.
/// Element "occurDateValue" of XSD type xs:dateTime.
    time_t                               occurDateValue                 1;	///< Required element.
/// Element "serialNo" of XSD type xs:int.
    int                                  serialNo                       1;	///< Required element.
};


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://xerofox.com/VersionService/                                       *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://xerofox.com/VersionService/                                       *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Services                                                                   *
 *                                                                            *
\******************************************************************************/

// This service supports SOAP 1.2 namespaces:
#import "soap12.h"

//gsoap VersionServ2 service name:	VersionServiceSoap 
//gsoap VersionServ2 service type:	VersionServiceSoap 
//gsoap VersionServ2 service port:	http://localhost/VersionService/VersionService.asmx 
//gsoap VersionServ2 service namespace:	http://xerofox.com/VersionService/VersionServiceSoap 
//gsoap VersionServ2 service transport:	http://schemas.xmlsoap.org/soap/http 

//gsoap VersionServ3 service name:	VersionServiceSoap12 
//gsoap VersionServ3 service type:	VersionServiceSoap 
//gsoap VersionServ3 service port:	http://localhost/VersionService/VersionService.asmx 
//gsoap VersionServ3 service namespace:	http://xerofox.com/VersionService/VersionServiceSoap12 
//gsoap VersionServ3 service transport:	http://schemas.xmlsoap.org/soap/http 

/** @mainpage Service Definitions

@section Service_bindings Service Bindings

  - @ref VersionServiceSoap

  - @ref VersionServiceSoap12

@section Service_more More Information

  - @ref page_notes "Notes"

  - @ref page_XMLDataBinding "XML Data Binding"

  - @ref SOAP_ENV__Header "SOAP Header Content" (when applicable)

  - @ref SOAP_ENV__Detail "SOAP Fault Detail Content" (when applicable)


*/

/**

@page VersionServiceSoap Binding "VersionServiceSoap"

@section VersionServiceSoap_operations Operations of Binding "VersionServiceSoap"

  - @ref __VersionServ2__Login

  - @ref __VersionServ2__LoginByByteArr

  - @ref __VersionServ2__GetUpdateVerByCurVer

  - @ref __VersionServ2__SetRevisionReadFlag

  - @ref __VersionServ2__CompareVersion

  - @ref __VersionServ2__GetVersionReleaseNotes

  - @ref __VersionServ2__GetDogAccessHistory

  - @ref __VersionServ2__QueryDownLoadItemArrByProductId

  - @ref __VersionServ2__GetFileHeader

  - @ref __VersionServ2__QueryObjects

  - @ref __VersionServ2__DownloadObjects

  - @ref __VersionServ2__SaveOrUpdateObjects

@section VersionServiceSoap_ports Endpoints of Binding "VersionServiceSoap"

  - http://localhost/VersionService/VersionService.asmx


*/

/**

@page VersionServiceSoap12 Binding "VersionServiceSoap12"

@section VersionServiceSoap12_operations Operations of Binding "VersionServiceSoap12"

  - @ref __VersionServ3__Login

  - @ref __VersionServ3__LoginByByteArr

  - @ref __VersionServ3__GetUpdateVerByCurVer

  - @ref __VersionServ3__SetRevisionReadFlag

  - @ref __VersionServ3__CompareVersion

  - @ref __VersionServ3__GetVersionReleaseNotes

  - @ref __VersionServ3__GetDogAccessHistory

  - @ref __VersionServ3__QueryDownLoadItemArrByProductId

  - @ref __VersionServ3__GetFileHeader

  - @ref __VersionServ3__QueryObjects

  - @ref __VersionServ3__DownloadObjects

  - @ref __VersionServ3__SaveOrUpdateObjects

@section VersionServiceSoap12_ports Endpoints of Binding "VersionServiceSoap12"

  - http://localhost/VersionService/VersionService.asmx


*/

/******************************************************************************\
 *                                                                            *
 * Service Binding                                                            *
 *   VersionServiceSoap                                                       *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __VersionServ2__Login                                                    *
 *                                                                            *
\******************************************************************************/


/** Operation "__VersionServ2__Login" of service binding "VersionServiceSoap".

  - SOAP document/literal style messaging

  - Action: "http://xerofox.com/VersionService/Login"

  - Addressing input action: "http://xerofox.com/VersionService/Login"

  - Addressing output action: "http://xerofox.com/VersionService/LoginResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___VersionServ2__Login(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _VersionServ__Login*                VersionServ__Login,
    // output parameters:
    _VersionServ__LoginResponse        &VersionServ__LoginResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __VersionServ2__Login(
    struct soap *soap,
    // input parameters:
    _VersionServ__Login*                VersionServ__Login,
    // output parameters:
    _VersionServ__LoginResponse        &VersionServ__LoginResponse
  );
@endcode

C++ proxy class (defined in soapVersionServiceSoapProxy.h):
@code
  class VersionServiceSoapProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapVersionServiceSoapService.h):
@code
  class VersionServiceSoapService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap VersionServ2 service method-protocol:	Login SOAP
//gsoap VersionServ2 service method-style:	Login document
//gsoap VersionServ2 service method-encoding:	Login literal
//gsoap VersionServ2 service method-input-action:	Login http://xerofox.com/VersionService/Login
//gsoap VersionServ2 service method-output-action:	Login http://xerofox.com/VersionService/LoginResponse
int __VersionServ2__Login(
    _VersionServ__Login*                VersionServ__Login,	///< Input parameter
    _VersionServ__LoginResponse        &VersionServ__LoginResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __VersionServ2__LoginByByteArr                                           *
 *                                                                            *
\******************************************************************************/


/** Operation "__VersionServ2__LoginByByteArr" of service binding "VersionServiceSoap".

  - SOAP document/literal style messaging

  - Action: "http://xerofox.com/VersionService/LoginByByteArr"

  - Addressing input action: "http://xerofox.com/VersionService/LoginByByteArr"

  - Addressing output action: "http://xerofox.com/VersionService/LoginByByteArrResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___VersionServ2__LoginByByteArr(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _VersionServ__LoginByByteArr*       VersionServ__LoginByByteArr,
    // output parameters:
    _VersionServ__LoginByByteArrResponse&VersionServ__LoginByByteArrResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __VersionServ2__LoginByByteArr(
    struct soap *soap,
    // input parameters:
    _VersionServ__LoginByByteArr*       VersionServ__LoginByByteArr,
    // output parameters:
    _VersionServ__LoginByByteArrResponse&VersionServ__LoginByByteArrResponse
  );
@endcode

C++ proxy class (defined in soapVersionServiceSoapProxy.h):
@code
  class VersionServiceSoapProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapVersionServiceSoapService.h):
@code
  class VersionServiceSoapService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap VersionServ2 service method-protocol:	LoginByByteArr SOAP
//gsoap VersionServ2 service method-style:	LoginByByteArr document
//gsoap VersionServ2 service method-encoding:	LoginByByteArr literal
//gsoap VersionServ2 service method-input-action:	LoginByByteArr http://xerofox.com/VersionService/LoginByByteArr
//gsoap VersionServ2 service method-output-action:	LoginByByteArr http://xerofox.com/VersionService/LoginByByteArrResponse
int __VersionServ2__LoginByByteArr(
    _VersionServ__LoginByByteArr*       VersionServ__LoginByByteArr,	///< Input parameter
    _VersionServ__LoginByByteArrResponse&VersionServ__LoginByByteArrResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __VersionServ2__GetUpdateVerByCurVer                                     *
 *                                                                            *
\******************************************************************************/


/** Operation "__VersionServ2__GetUpdateVerByCurVer" of service binding "VersionServiceSoap".

  - SOAP document/literal style messaging

  - Action: "http://xerofox.com/VersionService/GetUpdateVerByCurVer"

  - Addressing input action: "http://xerofox.com/VersionService/GetUpdateVerByCurVer"

  - Addressing output action: "http://xerofox.com/VersionService/GetUpdateVerByCurVerResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___VersionServ2__GetUpdateVerByCurVer(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _VersionServ__GetUpdateVerByCurVer* VersionServ__GetUpdateVerByCurVer,
    // output parameters:
    _VersionServ__GetUpdateVerByCurVerResponse&VersionServ__GetUpdateVerByCurVerResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __VersionServ2__GetUpdateVerByCurVer(
    struct soap *soap,
    // input parameters:
    _VersionServ__GetUpdateVerByCurVer* VersionServ__GetUpdateVerByCurVer,
    // output parameters:
    _VersionServ__GetUpdateVerByCurVerResponse&VersionServ__GetUpdateVerByCurVerResponse
  );
@endcode

C++ proxy class (defined in soapVersionServiceSoapProxy.h):
@code
  class VersionServiceSoapProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapVersionServiceSoapService.h):
@code
  class VersionServiceSoapService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap VersionServ2 service method-protocol:	GetUpdateVerByCurVer SOAP
//gsoap VersionServ2 service method-style:	GetUpdateVerByCurVer document
//gsoap VersionServ2 service method-encoding:	GetUpdateVerByCurVer literal
//gsoap VersionServ2 service method-input-action:	GetUpdateVerByCurVer http://xerofox.com/VersionService/GetUpdateVerByCurVer
//gsoap VersionServ2 service method-output-action:	GetUpdateVerByCurVer http://xerofox.com/VersionService/GetUpdateVerByCurVerResponse
int __VersionServ2__GetUpdateVerByCurVer(
    _VersionServ__GetUpdateVerByCurVer* VersionServ__GetUpdateVerByCurVer,	///< Input parameter
    _VersionServ__GetUpdateVerByCurVerResponse&VersionServ__GetUpdateVerByCurVerResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __VersionServ2__SetRevisionReadFlag                                      *
 *                                                                            *
\******************************************************************************/


/** Operation "__VersionServ2__SetRevisionReadFlag" of service binding "VersionServiceSoap".

  - SOAP document/literal style messaging

  - Action: "http://xerofox.com/VersionService/SetRevisionReadFlag"

  - Addressing input action: "http://xerofox.com/VersionService/SetRevisionReadFlag"

  - Addressing output action: "http://xerofox.com/VersionService/SetRevisionReadFlagResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___VersionServ2__SetRevisionReadFlag(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _VersionServ__SetRevisionReadFlag*  VersionServ__SetRevisionReadFlag,
    // output parameters:
    _VersionServ__SetRevisionReadFlagResponse&VersionServ__SetRevisionReadFlagResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __VersionServ2__SetRevisionReadFlag(
    struct soap *soap,
    // input parameters:
    _VersionServ__SetRevisionReadFlag*  VersionServ__SetRevisionReadFlag,
    // output parameters:
    _VersionServ__SetRevisionReadFlagResponse&VersionServ__SetRevisionReadFlagResponse
  );
@endcode

C++ proxy class (defined in soapVersionServiceSoapProxy.h):
@code
  class VersionServiceSoapProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapVersionServiceSoapService.h):
@code
  class VersionServiceSoapService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap VersionServ2 service method-protocol:	SetRevisionReadFlag SOAP
//gsoap VersionServ2 service method-style:	SetRevisionReadFlag document
//gsoap VersionServ2 service method-encoding:	SetRevisionReadFlag literal
//gsoap VersionServ2 service method-input-action:	SetRevisionReadFlag http://xerofox.com/VersionService/SetRevisionReadFlag
//gsoap VersionServ2 service method-output-action:	SetRevisionReadFlag http://xerofox.com/VersionService/SetRevisionReadFlagResponse
int __VersionServ2__SetRevisionReadFlag(
    _VersionServ__SetRevisionReadFlag*  VersionServ__SetRevisionReadFlag,	///< Input parameter
    _VersionServ__SetRevisionReadFlagResponse&VersionServ__SetRevisionReadFlagResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __VersionServ2__CompareVersion                                           *
 *                                                                            *
\******************************************************************************/


/** Operation "__VersionServ2__CompareVersion" of service binding "VersionServiceSoap".

  - SOAP document/literal style messaging

  - Action: "http://xerofox.com/VersionService/CompareVersion"

  - Addressing input action: "http://xerofox.com/VersionService/CompareVersion"

  - Addressing output action: "http://xerofox.com/VersionService/CompareVersionResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___VersionServ2__CompareVersion(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _VersionServ__CompareVersion*       VersionServ__CompareVersion,
    // output parameters:
    _VersionServ__CompareVersionResponse&VersionServ__CompareVersionResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __VersionServ2__CompareVersion(
    struct soap *soap,
    // input parameters:
    _VersionServ__CompareVersion*       VersionServ__CompareVersion,
    // output parameters:
    _VersionServ__CompareVersionResponse&VersionServ__CompareVersionResponse
  );
@endcode

C++ proxy class (defined in soapVersionServiceSoapProxy.h):
@code
  class VersionServiceSoapProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapVersionServiceSoapService.h):
@code
  class VersionServiceSoapService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap VersionServ2 service method-protocol:	CompareVersion SOAP
//gsoap VersionServ2 service method-style:	CompareVersion document
//gsoap VersionServ2 service method-encoding:	CompareVersion literal
//gsoap VersionServ2 service method-input-action:	CompareVersion http://xerofox.com/VersionService/CompareVersion
//gsoap VersionServ2 service method-output-action:	CompareVersion http://xerofox.com/VersionService/CompareVersionResponse
int __VersionServ2__CompareVersion(
    _VersionServ__CompareVersion*       VersionServ__CompareVersion,	///< Input parameter
    _VersionServ__CompareVersionResponse&VersionServ__CompareVersionResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __VersionServ2__GetVersionReleaseNotes                                   *
 *                                                                            *
\******************************************************************************/


/** Operation "__VersionServ2__GetVersionReleaseNotes" of service binding "VersionServiceSoap".

  - SOAP document/literal style messaging

  - Action: "http://xerofox.com/VersionService/GetVersionReleaseNotes"

  - Addressing input action: "http://xerofox.com/VersionService/GetVersionReleaseNotes"

  - Addressing output action: "http://xerofox.com/VersionService/GetVersionReleaseNotesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___VersionServ2__GetVersionReleaseNotes(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _VersionServ__GetVersionReleaseNotes* VersionServ__GetVersionReleaseNotes,
    // output parameters:
    _VersionServ__GetVersionReleaseNotesResponse&VersionServ__GetVersionReleaseNotesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __VersionServ2__GetVersionReleaseNotes(
    struct soap *soap,
    // input parameters:
    _VersionServ__GetVersionReleaseNotes* VersionServ__GetVersionReleaseNotes,
    // output parameters:
    _VersionServ__GetVersionReleaseNotesResponse&VersionServ__GetVersionReleaseNotesResponse
  );
@endcode

C++ proxy class (defined in soapVersionServiceSoapProxy.h):
@code
  class VersionServiceSoapProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapVersionServiceSoapService.h):
@code
  class VersionServiceSoapService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap VersionServ2 service method-protocol:	GetVersionReleaseNotes SOAP
//gsoap VersionServ2 service method-style:	GetVersionReleaseNotes document
//gsoap VersionServ2 service method-encoding:	GetVersionReleaseNotes literal
//gsoap VersionServ2 service method-input-action:	GetVersionReleaseNotes http://xerofox.com/VersionService/GetVersionReleaseNotes
//gsoap VersionServ2 service method-output-action:	GetVersionReleaseNotes http://xerofox.com/VersionService/GetVersionReleaseNotesResponse
int __VersionServ2__GetVersionReleaseNotes(
    _VersionServ__GetVersionReleaseNotes* VersionServ__GetVersionReleaseNotes,	///< Input parameter
    _VersionServ__GetVersionReleaseNotesResponse&VersionServ__GetVersionReleaseNotesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __VersionServ2__GetDogAccessHistory                                      *
 *                                                                            *
\******************************************************************************/


/** Operation "__VersionServ2__GetDogAccessHistory" of service binding "VersionServiceSoap".

  - SOAP document/literal style messaging

  - Action: "http://xerofox.com/VersionService/GetDogAccessHistory"

  - Addressing input action: "http://xerofox.com/VersionService/GetDogAccessHistory"

  - Addressing output action: "http://xerofox.com/VersionService/GetDogAccessHistoryResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___VersionServ2__GetDogAccessHistory(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _VersionServ__GetDogAccessHistory*  VersionServ__GetDogAccessHistory,
    // output parameters:
    _VersionServ__GetDogAccessHistoryResponse&VersionServ__GetDogAccessHistoryResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __VersionServ2__GetDogAccessHistory(
    struct soap *soap,
    // input parameters:
    _VersionServ__GetDogAccessHistory*  VersionServ__GetDogAccessHistory,
    // output parameters:
    _VersionServ__GetDogAccessHistoryResponse&VersionServ__GetDogAccessHistoryResponse
  );
@endcode

C++ proxy class (defined in soapVersionServiceSoapProxy.h):
@code
  class VersionServiceSoapProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapVersionServiceSoapService.h):
@code
  class VersionServiceSoapService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap VersionServ2 service method-protocol:	GetDogAccessHistory SOAP
//gsoap VersionServ2 service method-style:	GetDogAccessHistory document
//gsoap VersionServ2 service method-encoding:	GetDogAccessHistory literal
//gsoap VersionServ2 service method-input-action:	GetDogAccessHistory http://xerofox.com/VersionService/GetDogAccessHistory
//gsoap VersionServ2 service method-output-action:	GetDogAccessHistory http://xerofox.com/VersionService/GetDogAccessHistoryResponse
int __VersionServ2__GetDogAccessHistory(
    _VersionServ__GetDogAccessHistory*  VersionServ__GetDogAccessHistory,	///< Input parameter
    _VersionServ__GetDogAccessHistoryResponse&VersionServ__GetDogAccessHistoryResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __VersionServ2__QueryDownLoadItemArrByProductId                          *
 *                                                                            *
\******************************************************************************/


/** Operation "__VersionServ2__QueryDownLoadItemArrByProductId" of service binding "VersionServiceSoap".

  - SOAP document/literal style messaging

  - Action: "http://xerofox.com/VersionService/QueryDownLoadItemArrByProductId"

  - Addressing input action: "http://xerofox.com/VersionService/QueryDownLoadItemArrByProductId"

  - Addressing output action: "http://xerofox.com/VersionService/QueryDownLoadItemArrByProductIdResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___VersionServ2__QueryDownLoadItemArrByProductId(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _VersionServ__QueryDownLoadItemArrByProductId* VersionServ__QueryDownLoadItemArrByProductId,
    // output parameters:
    _VersionServ__QueryDownLoadItemArrByProductIdResponse&VersionServ__QueryDownLoadItemArrByProductIdResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __VersionServ2__QueryDownLoadItemArrByProductId(
    struct soap *soap,
    // input parameters:
    _VersionServ__QueryDownLoadItemArrByProductId* VersionServ__QueryDownLoadItemArrByProductId,
    // output parameters:
    _VersionServ__QueryDownLoadItemArrByProductIdResponse&VersionServ__QueryDownLoadItemArrByProductIdResponse
  );
@endcode

C++ proxy class (defined in soapVersionServiceSoapProxy.h):
@code
  class VersionServiceSoapProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapVersionServiceSoapService.h):
@code
  class VersionServiceSoapService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap VersionServ2 service method-protocol:	QueryDownLoadItemArrByProductId SOAP
//gsoap VersionServ2 service method-style:	QueryDownLoadItemArrByProductId document
//gsoap VersionServ2 service method-encoding:	QueryDownLoadItemArrByProductId literal
//gsoap VersionServ2 service method-input-action:	QueryDownLoadItemArrByProductId http://xerofox.com/VersionService/QueryDownLoadItemArrByProductId
//gsoap VersionServ2 service method-output-action:	QueryDownLoadItemArrByProductId http://xerofox.com/VersionService/QueryDownLoadItemArrByProductIdResponse
int __VersionServ2__QueryDownLoadItemArrByProductId(
    _VersionServ__QueryDownLoadItemArrByProductId* VersionServ__QueryDownLoadItemArrByProductId,	///< Input parameter
    _VersionServ__QueryDownLoadItemArrByProductIdResponse&VersionServ__QueryDownLoadItemArrByProductIdResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __VersionServ2__GetFileHeader                                            *
 *                                                                            *
\******************************************************************************/


/** Operation "__VersionServ2__GetFileHeader" of service binding "VersionServiceSoap".

  - SOAP document/literal style messaging

  - Action: "http://xerofox.com/VersionService/GetFileHeader"

  - Addressing input action: "http://xerofox.com/VersionService/GetFileHeader"

  - Addressing output action: "http://xerofox.com/VersionService/GetFileHeaderResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___VersionServ2__GetFileHeader(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _VersionServ__GetFileHeader*        VersionServ__GetFileHeader,
    // output parameters:
    _VersionServ__GetFileHeaderResponse&VersionServ__GetFileHeaderResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __VersionServ2__GetFileHeader(
    struct soap *soap,
    // input parameters:
    _VersionServ__GetFileHeader*        VersionServ__GetFileHeader,
    // output parameters:
    _VersionServ__GetFileHeaderResponse&VersionServ__GetFileHeaderResponse
  );
@endcode

C++ proxy class (defined in soapVersionServiceSoapProxy.h):
@code
  class VersionServiceSoapProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapVersionServiceSoapService.h):
@code
  class VersionServiceSoapService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap VersionServ2 service method-protocol:	GetFileHeader SOAP
//gsoap VersionServ2 service method-style:	GetFileHeader document
//gsoap VersionServ2 service method-encoding:	GetFileHeader literal
//gsoap VersionServ2 service method-input-action:	GetFileHeader http://xerofox.com/VersionService/GetFileHeader
//gsoap VersionServ2 service method-output-action:	GetFileHeader http://xerofox.com/VersionService/GetFileHeaderResponse
int __VersionServ2__GetFileHeader(
    _VersionServ__GetFileHeader*        VersionServ__GetFileHeader,	///< Input parameter
    _VersionServ__GetFileHeaderResponse&VersionServ__GetFileHeaderResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __VersionServ2__QueryObjects                                             *
 *                                                                            *
\******************************************************************************/


/** Operation "__VersionServ2__QueryObjects" of service binding "VersionServiceSoap".

  - SOAP document/literal style messaging

  - Action: "http://xerofox.com/VersionService/QueryObjects"

  - Addressing input action: "http://xerofox.com/VersionService/QueryObjects"

  - Addressing output action: "http://xerofox.com/VersionService/QueryObjectsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___VersionServ2__QueryObjects(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _VersionServ__QueryObjects*         VersionServ__QueryObjects,
    // output parameters:
    _VersionServ__QueryObjectsResponse &VersionServ__QueryObjectsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __VersionServ2__QueryObjects(
    struct soap *soap,
    // input parameters:
    _VersionServ__QueryObjects*         VersionServ__QueryObjects,
    // output parameters:
    _VersionServ__QueryObjectsResponse &VersionServ__QueryObjectsResponse
  );
@endcode

C++ proxy class (defined in soapVersionServiceSoapProxy.h):
@code
  class VersionServiceSoapProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapVersionServiceSoapService.h):
@code
  class VersionServiceSoapService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap VersionServ2 service method-protocol:	QueryObjects SOAP
//gsoap VersionServ2 service method-style:	QueryObjects document
//gsoap VersionServ2 service method-encoding:	QueryObjects literal
//gsoap VersionServ2 service method-input-action:	QueryObjects http://xerofox.com/VersionService/QueryObjects
//gsoap VersionServ2 service method-output-action:	QueryObjects http://xerofox.com/VersionService/QueryObjectsResponse
int __VersionServ2__QueryObjects(
    _VersionServ__QueryObjects*         VersionServ__QueryObjects,	///< Input parameter
    _VersionServ__QueryObjectsResponse &VersionServ__QueryObjectsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __VersionServ2__DownloadObjects                                          *
 *                                                                            *
\******************************************************************************/


/** Operation "__VersionServ2__DownloadObjects" of service binding "VersionServiceSoap".

  - SOAP document/literal style messaging

  - Action: "http://xerofox.com/VersionService/DownloadObjects"

  - Addressing input action: "http://xerofox.com/VersionService/DownloadObjects"

  - Addressing output action: "http://xerofox.com/VersionService/DownloadObjectsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___VersionServ2__DownloadObjects(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _VersionServ__DownloadObjects*      VersionServ__DownloadObjects,
    // output parameters:
    _VersionServ__DownloadObjectsResponse&VersionServ__DownloadObjectsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __VersionServ2__DownloadObjects(
    struct soap *soap,
    // input parameters:
    _VersionServ__DownloadObjects*      VersionServ__DownloadObjects,
    // output parameters:
    _VersionServ__DownloadObjectsResponse&VersionServ__DownloadObjectsResponse
  );
@endcode

C++ proxy class (defined in soapVersionServiceSoapProxy.h):
@code
  class VersionServiceSoapProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapVersionServiceSoapService.h):
@code
  class VersionServiceSoapService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap VersionServ2 service method-protocol:	DownloadObjects SOAP
//gsoap VersionServ2 service method-style:	DownloadObjects document
//gsoap VersionServ2 service method-encoding:	DownloadObjects literal
//gsoap VersionServ2 service method-input-action:	DownloadObjects http://xerofox.com/VersionService/DownloadObjects
//gsoap VersionServ2 service method-output-action:	DownloadObjects http://xerofox.com/VersionService/DownloadObjectsResponse
int __VersionServ2__DownloadObjects(
    _VersionServ__DownloadObjects*      VersionServ__DownloadObjects,	///< Input parameter
    _VersionServ__DownloadObjectsResponse&VersionServ__DownloadObjectsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __VersionServ2__SaveOrUpdateObjects                                      *
 *                                                                            *
\******************************************************************************/


/** Operation "__VersionServ2__SaveOrUpdateObjects" of service binding "VersionServiceSoap".

  - SOAP document/literal style messaging

  - Action: "http://xerofox.com/VersionService/SaveOrUpdateObjects"

  - Addressing input action: "http://xerofox.com/VersionService/SaveOrUpdateObjects"

  - Addressing output action: "http://xerofox.com/VersionService/SaveOrUpdateObjectsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___VersionServ2__SaveOrUpdateObjects(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _VersionServ__SaveOrUpdateObjects*  VersionServ__SaveOrUpdateObjects,
    // output parameters:
    _VersionServ__SaveOrUpdateObjectsResponse&VersionServ__SaveOrUpdateObjectsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __VersionServ2__SaveOrUpdateObjects(
    struct soap *soap,
    // input parameters:
    _VersionServ__SaveOrUpdateObjects*  VersionServ__SaveOrUpdateObjects,
    // output parameters:
    _VersionServ__SaveOrUpdateObjectsResponse&VersionServ__SaveOrUpdateObjectsResponse
  );
@endcode

C++ proxy class (defined in soapVersionServiceSoapProxy.h):
@code
  class VersionServiceSoapProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapVersionServiceSoapService.h):
@code
  class VersionServiceSoapService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap VersionServ2 service method-protocol:	SaveOrUpdateObjects SOAP
//gsoap VersionServ2 service method-style:	SaveOrUpdateObjects document
//gsoap VersionServ2 service method-encoding:	SaveOrUpdateObjects literal
//gsoap VersionServ2 service method-input-action:	SaveOrUpdateObjects http://xerofox.com/VersionService/SaveOrUpdateObjects
//gsoap VersionServ2 service method-output-action:	SaveOrUpdateObjects http://xerofox.com/VersionService/SaveOrUpdateObjectsResponse
int __VersionServ2__SaveOrUpdateObjects(
    _VersionServ__SaveOrUpdateObjects*  VersionServ__SaveOrUpdateObjects,	///< Input parameter
    _VersionServ__SaveOrUpdateObjectsResponse&VersionServ__SaveOrUpdateObjectsResponse	///< Output parameter
);

/**

@page VersionServiceSoap Binding "VersionServiceSoap"

@section VersionServiceSoap_policy_enablers Policy Enablers of Binding "VersionServiceSoap"

Based on policies, this service imports

  - WS-Policy reminders and enablers:
    - WS-Addressing 1.0 (2005/08, accepts 2004/08):
	@code
	#import "wsa5.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsaapi.h"
	soap_register_plugin(soap, soap_wsa); // register the wsa plugin in your code
	// See the user guide gsoap/doc/wsa/html/index.html
	@endcode
    - WS-Addressing (2004/08):
	@code
	#import "wsa.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsaapi.h"
	soap_register_plugin(soap, soap_wsa); // register the wsa plugin in your code
	// See the user guide gsoap/doc/wsa/html/index.html
	@endcode
    - WS-ReliableMessaging 1.0:
	@code
	#import "wsrm5.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsrmapi.h"
	soap_register_plugin(soap, soap_wsa); // register the wsa plugin in your code
	soap_register_plugin(soap, soap_wsrm); // register the wsrm plugin in your code
	// See the user guide gsoap/doc/wsrm/html/index.html
	@endcode
    - WS-ReliableMessaging 1.1:
	@code
	#import "wsrm.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsrmapi.h"
	soap_register_plugin(soap, soap_wsa); // register the wsa plugin in your code
	soap_register_plugin(soap, soap_wsrm); // register the wsrm plugin in your code
	// See the user guide gsoap/doc/wsrm/html/index.html
	@endcode
    - WS-Security (SOAP Message Security) 1.0 (accepts 1.1):
	@code
	#import "wsse.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsseapi.h"
	soap_register_plugin(soap, soap_wsse); // register the wsse plugin in your code
	// See the user guide gsoap/doc/wsse/html/index.html
	@endcode
    - WS-Security (SOAP Message Security) 1.1 (accepts 1.0):
	@code
	#import "wsse11.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsseapi.h"
	soap_register_plugin(soap, soap_wsse); // register the wsse plugin in your code
	// See the user guide gsoap/doc/wsse/html/index.html
	@endcode
    - HTTP Digest Authentication:
	@code
	#include "plugin/httpda.h"
	soap_register_plugin(soap, soap_http_da); // register the HTTP DA plugin in your code
	// See the user guide gsoap/doc/httpda/html/index.html
	@endcode
*/


/******************************************************************************\
 *                                                                            *
 * Service Binding                                                            *
 *   VersionServiceSoap12                                                     *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __VersionServ3__Login                                                    *
 *                                                                            *
\******************************************************************************/


/** Operation "__VersionServ3__Login" of service binding "VersionServiceSoap12".

  - SOAP document/literal style messaging

  - Action: "http://xerofox.com/VersionService/Login"

  - Addressing input action: "http://xerofox.com/VersionService/Login"

  - Addressing output action: "http://xerofox.com/VersionService/LoginResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___VersionServ3__Login(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _VersionServ__Login*                VersionServ__Login,
    // output parameters:
    _VersionServ__LoginResponse        &VersionServ__LoginResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __VersionServ3__Login(
    struct soap *soap,
    // input parameters:
    _VersionServ__Login*                VersionServ__Login,
    // output parameters:
    _VersionServ__LoginResponse        &VersionServ__LoginResponse
  );
@endcode

C++ proxy class (defined in soapVersionServiceSoap12Proxy.h):
@code
  class VersionServiceSoap12Proxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapVersionServiceSoap12Service.h):
@code
  class VersionServiceSoap12Service;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap VersionServ3 service method-protocol:	Login SOAP
//gsoap VersionServ3 service method-style:	Login document
//gsoap VersionServ3 service method-encoding:	Login literal
//gsoap VersionServ3 service method-input-action:	Login http://xerofox.com/VersionService/Login
//gsoap VersionServ3 service method-output-action:	Login http://xerofox.com/VersionService/LoginResponse
int __VersionServ3__Login(
    _VersionServ__Login*                VersionServ__Login,	///< Input parameter
    _VersionServ__LoginResponse        &VersionServ__LoginResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __VersionServ3__LoginByByteArr                                           *
 *                                                                            *
\******************************************************************************/


/** Operation "__VersionServ3__LoginByByteArr" of service binding "VersionServiceSoap12".

  - SOAP document/literal style messaging

  - Action: "http://xerofox.com/VersionService/LoginByByteArr"

  - Addressing input action: "http://xerofox.com/VersionService/LoginByByteArr"

  - Addressing output action: "http://xerofox.com/VersionService/LoginByByteArrResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___VersionServ3__LoginByByteArr(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _VersionServ__LoginByByteArr*       VersionServ__LoginByByteArr,
    // output parameters:
    _VersionServ__LoginByByteArrResponse&VersionServ__LoginByByteArrResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __VersionServ3__LoginByByteArr(
    struct soap *soap,
    // input parameters:
    _VersionServ__LoginByByteArr*       VersionServ__LoginByByteArr,
    // output parameters:
    _VersionServ__LoginByByteArrResponse&VersionServ__LoginByByteArrResponse
  );
@endcode

C++ proxy class (defined in soapVersionServiceSoap12Proxy.h):
@code
  class VersionServiceSoap12Proxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapVersionServiceSoap12Service.h):
@code
  class VersionServiceSoap12Service;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap VersionServ3 service method-protocol:	LoginByByteArr SOAP
//gsoap VersionServ3 service method-style:	LoginByByteArr document
//gsoap VersionServ3 service method-encoding:	LoginByByteArr literal
//gsoap VersionServ3 service method-input-action:	LoginByByteArr http://xerofox.com/VersionService/LoginByByteArr
//gsoap VersionServ3 service method-output-action:	LoginByByteArr http://xerofox.com/VersionService/LoginByByteArrResponse
int __VersionServ3__LoginByByteArr(
    _VersionServ__LoginByByteArr*       VersionServ__LoginByByteArr,	///< Input parameter
    _VersionServ__LoginByByteArrResponse&VersionServ__LoginByByteArrResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __VersionServ3__GetUpdateVerByCurVer                                     *
 *                                                                            *
\******************************************************************************/


/** Operation "__VersionServ3__GetUpdateVerByCurVer" of service binding "VersionServiceSoap12".

  - SOAP document/literal style messaging

  - Action: "http://xerofox.com/VersionService/GetUpdateVerByCurVer"

  - Addressing input action: "http://xerofox.com/VersionService/GetUpdateVerByCurVer"

  - Addressing output action: "http://xerofox.com/VersionService/GetUpdateVerByCurVerResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___VersionServ3__GetUpdateVerByCurVer(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _VersionServ__GetUpdateVerByCurVer* VersionServ__GetUpdateVerByCurVer,
    // output parameters:
    _VersionServ__GetUpdateVerByCurVerResponse&VersionServ__GetUpdateVerByCurVerResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __VersionServ3__GetUpdateVerByCurVer(
    struct soap *soap,
    // input parameters:
    _VersionServ__GetUpdateVerByCurVer* VersionServ__GetUpdateVerByCurVer,
    // output parameters:
    _VersionServ__GetUpdateVerByCurVerResponse&VersionServ__GetUpdateVerByCurVerResponse
  );
@endcode

C++ proxy class (defined in soapVersionServiceSoap12Proxy.h):
@code
  class VersionServiceSoap12Proxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapVersionServiceSoap12Service.h):
@code
  class VersionServiceSoap12Service;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap VersionServ3 service method-protocol:	GetUpdateVerByCurVer SOAP
//gsoap VersionServ3 service method-style:	GetUpdateVerByCurVer document
//gsoap VersionServ3 service method-encoding:	GetUpdateVerByCurVer literal
//gsoap VersionServ3 service method-input-action:	GetUpdateVerByCurVer http://xerofox.com/VersionService/GetUpdateVerByCurVer
//gsoap VersionServ3 service method-output-action:	GetUpdateVerByCurVer http://xerofox.com/VersionService/GetUpdateVerByCurVerResponse
int __VersionServ3__GetUpdateVerByCurVer(
    _VersionServ__GetUpdateVerByCurVer* VersionServ__GetUpdateVerByCurVer,	///< Input parameter
    _VersionServ__GetUpdateVerByCurVerResponse&VersionServ__GetUpdateVerByCurVerResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __VersionServ3__SetRevisionReadFlag                                      *
 *                                                                            *
\******************************************************************************/


/** Operation "__VersionServ3__SetRevisionReadFlag" of service binding "VersionServiceSoap12".

  - SOAP document/literal style messaging

  - Action: "http://xerofox.com/VersionService/SetRevisionReadFlag"

  - Addressing input action: "http://xerofox.com/VersionService/SetRevisionReadFlag"

  - Addressing output action: "http://xerofox.com/VersionService/SetRevisionReadFlagResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___VersionServ3__SetRevisionReadFlag(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _VersionServ__SetRevisionReadFlag*  VersionServ__SetRevisionReadFlag,
    // output parameters:
    _VersionServ__SetRevisionReadFlagResponse&VersionServ__SetRevisionReadFlagResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __VersionServ3__SetRevisionReadFlag(
    struct soap *soap,
    // input parameters:
    _VersionServ__SetRevisionReadFlag*  VersionServ__SetRevisionReadFlag,
    // output parameters:
    _VersionServ__SetRevisionReadFlagResponse&VersionServ__SetRevisionReadFlagResponse
  );
@endcode

C++ proxy class (defined in soapVersionServiceSoap12Proxy.h):
@code
  class VersionServiceSoap12Proxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapVersionServiceSoap12Service.h):
@code
  class VersionServiceSoap12Service;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap VersionServ3 service method-protocol:	SetRevisionReadFlag SOAP
//gsoap VersionServ3 service method-style:	SetRevisionReadFlag document
//gsoap VersionServ3 service method-encoding:	SetRevisionReadFlag literal
//gsoap VersionServ3 service method-input-action:	SetRevisionReadFlag http://xerofox.com/VersionService/SetRevisionReadFlag
//gsoap VersionServ3 service method-output-action:	SetRevisionReadFlag http://xerofox.com/VersionService/SetRevisionReadFlagResponse
int __VersionServ3__SetRevisionReadFlag(
    _VersionServ__SetRevisionReadFlag*  VersionServ__SetRevisionReadFlag,	///< Input parameter
    _VersionServ__SetRevisionReadFlagResponse&VersionServ__SetRevisionReadFlagResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __VersionServ3__CompareVersion                                           *
 *                                                                            *
\******************************************************************************/


/** Operation "__VersionServ3__CompareVersion" of service binding "VersionServiceSoap12".

  - SOAP document/literal style messaging

  - Action: "http://xerofox.com/VersionService/CompareVersion"

  - Addressing input action: "http://xerofox.com/VersionService/CompareVersion"

  - Addressing output action: "http://xerofox.com/VersionService/CompareVersionResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___VersionServ3__CompareVersion(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _VersionServ__CompareVersion*       VersionServ__CompareVersion,
    // output parameters:
    _VersionServ__CompareVersionResponse&VersionServ__CompareVersionResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __VersionServ3__CompareVersion(
    struct soap *soap,
    // input parameters:
    _VersionServ__CompareVersion*       VersionServ__CompareVersion,
    // output parameters:
    _VersionServ__CompareVersionResponse&VersionServ__CompareVersionResponse
  );
@endcode

C++ proxy class (defined in soapVersionServiceSoap12Proxy.h):
@code
  class VersionServiceSoap12Proxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapVersionServiceSoap12Service.h):
@code
  class VersionServiceSoap12Service;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap VersionServ3 service method-protocol:	CompareVersion SOAP
//gsoap VersionServ3 service method-style:	CompareVersion document
//gsoap VersionServ3 service method-encoding:	CompareVersion literal
//gsoap VersionServ3 service method-input-action:	CompareVersion http://xerofox.com/VersionService/CompareVersion
//gsoap VersionServ3 service method-output-action:	CompareVersion http://xerofox.com/VersionService/CompareVersionResponse
int __VersionServ3__CompareVersion(
    _VersionServ__CompareVersion*       VersionServ__CompareVersion,	///< Input parameter
    _VersionServ__CompareVersionResponse&VersionServ__CompareVersionResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __VersionServ3__GetVersionReleaseNotes                                   *
 *                                                                            *
\******************************************************************************/


/** Operation "__VersionServ3__GetVersionReleaseNotes" of service binding "VersionServiceSoap12".

  - SOAP document/literal style messaging

  - Action: "http://xerofox.com/VersionService/GetVersionReleaseNotes"

  - Addressing input action: "http://xerofox.com/VersionService/GetVersionReleaseNotes"

  - Addressing output action: "http://xerofox.com/VersionService/GetVersionReleaseNotesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___VersionServ3__GetVersionReleaseNotes(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _VersionServ__GetVersionReleaseNotes* VersionServ__GetVersionReleaseNotes,
    // output parameters:
    _VersionServ__GetVersionReleaseNotesResponse&VersionServ__GetVersionReleaseNotesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __VersionServ3__GetVersionReleaseNotes(
    struct soap *soap,
    // input parameters:
    _VersionServ__GetVersionReleaseNotes* VersionServ__GetVersionReleaseNotes,
    // output parameters:
    _VersionServ__GetVersionReleaseNotesResponse&VersionServ__GetVersionReleaseNotesResponse
  );
@endcode

C++ proxy class (defined in soapVersionServiceSoap12Proxy.h):
@code
  class VersionServiceSoap12Proxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapVersionServiceSoap12Service.h):
@code
  class VersionServiceSoap12Service;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap VersionServ3 service method-protocol:	GetVersionReleaseNotes SOAP
//gsoap VersionServ3 service method-style:	GetVersionReleaseNotes document
//gsoap VersionServ3 service method-encoding:	GetVersionReleaseNotes literal
//gsoap VersionServ3 service method-input-action:	GetVersionReleaseNotes http://xerofox.com/VersionService/GetVersionReleaseNotes
//gsoap VersionServ3 service method-output-action:	GetVersionReleaseNotes http://xerofox.com/VersionService/GetVersionReleaseNotesResponse
int __VersionServ3__GetVersionReleaseNotes(
    _VersionServ__GetVersionReleaseNotes* VersionServ__GetVersionReleaseNotes,	///< Input parameter
    _VersionServ__GetVersionReleaseNotesResponse&VersionServ__GetVersionReleaseNotesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __VersionServ3__GetDogAccessHistory                                      *
 *                                                                            *
\******************************************************************************/


/** Operation "__VersionServ3__GetDogAccessHistory" of service binding "VersionServiceSoap12".

  - SOAP document/literal style messaging

  - Action: "http://xerofox.com/VersionService/GetDogAccessHistory"

  - Addressing input action: "http://xerofox.com/VersionService/GetDogAccessHistory"

  - Addressing output action: "http://xerofox.com/VersionService/GetDogAccessHistoryResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___VersionServ3__GetDogAccessHistory(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _VersionServ__GetDogAccessHistory*  VersionServ__GetDogAccessHistory,
    // output parameters:
    _VersionServ__GetDogAccessHistoryResponse&VersionServ__GetDogAccessHistoryResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __VersionServ3__GetDogAccessHistory(
    struct soap *soap,
    // input parameters:
    _VersionServ__GetDogAccessHistory*  VersionServ__GetDogAccessHistory,
    // output parameters:
    _VersionServ__GetDogAccessHistoryResponse&VersionServ__GetDogAccessHistoryResponse
  );
@endcode

C++ proxy class (defined in soapVersionServiceSoap12Proxy.h):
@code
  class VersionServiceSoap12Proxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapVersionServiceSoap12Service.h):
@code
  class VersionServiceSoap12Service;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap VersionServ3 service method-protocol:	GetDogAccessHistory SOAP
//gsoap VersionServ3 service method-style:	GetDogAccessHistory document
//gsoap VersionServ3 service method-encoding:	GetDogAccessHistory literal
//gsoap VersionServ3 service method-input-action:	GetDogAccessHistory http://xerofox.com/VersionService/GetDogAccessHistory
//gsoap VersionServ3 service method-output-action:	GetDogAccessHistory http://xerofox.com/VersionService/GetDogAccessHistoryResponse
int __VersionServ3__GetDogAccessHistory(
    _VersionServ__GetDogAccessHistory*  VersionServ__GetDogAccessHistory,	///< Input parameter
    _VersionServ__GetDogAccessHistoryResponse&VersionServ__GetDogAccessHistoryResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __VersionServ3__QueryDownLoadItemArrByProductId                          *
 *                                                                            *
\******************************************************************************/


/** Operation "__VersionServ3__QueryDownLoadItemArrByProductId" of service binding "VersionServiceSoap12".

  - SOAP document/literal style messaging

  - Action: "http://xerofox.com/VersionService/QueryDownLoadItemArrByProductId"

  - Addressing input action: "http://xerofox.com/VersionService/QueryDownLoadItemArrByProductId"

  - Addressing output action: "http://xerofox.com/VersionService/QueryDownLoadItemArrByProductIdResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___VersionServ3__QueryDownLoadItemArrByProductId(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _VersionServ__QueryDownLoadItemArrByProductId* VersionServ__QueryDownLoadItemArrByProductId,
    // output parameters:
    _VersionServ__QueryDownLoadItemArrByProductIdResponse&VersionServ__QueryDownLoadItemArrByProductIdResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __VersionServ3__QueryDownLoadItemArrByProductId(
    struct soap *soap,
    // input parameters:
    _VersionServ__QueryDownLoadItemArrByProductId* VersionServ__QueryDownLoadItemArrByProductId,
    // output parameters:
    _VersionServ__QueryDownLoadItemArrByProductIdResponse&VersionServ__QueryDownLoadItemArrByProductIdResponse
  );
@endcode

C++ proxy class (defined in soapVersionServiceSoap12Proxy.h):
@code
  class VersionServiceSoap12Proxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapVersionServiceSoap12Service.h):
@code
  class VersionServiceSoap12Service;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap VersionServ3 service method-protocol:	QueryDownLoadItemArrByProductId SOAP
//gsoap VersionServ3 service method-style:	QueryDownLoadItemArrByProductId document
//gsoap VersionServ3 service method-encoding:	QueryDownLoadItemArrByProductId literal
//gsoap VersionServ3 service method-input-action:	QueryDownLoadItemArrByProductId http://xerofox.com/VersionService/QueryDownLoadItemArrByProductId
//gsoap VersionServ3 service method-output-action:	QueryDownLoadItemArrByProductId http://xerofox.com/VersionService/QueryDownLoadItemArrByProductIdResponse
int __VersionServ3__QueryDownLoadItemArrByProductId(
    _VersionServ__QueryDownLoadItemArrByProductId* VersionServ__QueryDownLoadItemArrByProductId,	///< Input parameter
    _VersionServ__QueryDownLoadItemArrByProductIdResponse&VersionServ__QueryDownLoadItemArrByProductIdResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __VersionServ3__GetFileHeader                                            *
 *                                                                            *
\******************************************************************************/


/** Operation "__VersionServ3__GetFileHeader" of service binding "VersionServiceSoap12".

  - SOAP document/literal style messaging

  - Action: "http://xerofox.com/VersionService/GetFileHeader"

  - Addressing input action: "http://xerofox.com/VersionService/GetFileHeader"

  - Addressing output action: "http://xerofox.com/VersionService/GetFileHeaderResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___VersionServ3__GetFileHeader(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _VersionServ__GetFileHeader*        VersionServ__GetFileHeader,
    // output parameters:
    _VersionServ__GetFileHeaderResponse&VersionServ__GetFileHeaderResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __VersionServ3__GetFileHeader(
    struct soap *soap,
    // input parameters:
    _VersionServ__GetFileHeader*        VersionServ__GetFileHeader,
    // output parameters:
    _VersionServ__GetFileHeaderResponse&VersionServ__GetFileHeaderResponse
  );
@endcode

C++ proxy class (defined in soapVersionServiceSoap12Proxy.h):
@code
  class VersionServiceSoap12Proxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapVersionServiceSoap12Service.h):
@code
  class VersionServiceSoap12Service;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap VersionServ3 service method-protocol:	GetFileHeader SOAP
//gsoap VersionServ3 service method-style:	GetFileHeader document
//gsoap VersionServ3 service method-encoding:	GetFileHeader literal
//gsoap VersionServ3 service method-input-action:	GetFileHeader http://xerofox.com/VersionService/GetFileHeader
//gsoap VersionServ3 service method-output-action:	GetFileHeader http://xerofox.com/VersionService/GetFileHeaderResponse
int __VersionServ3__GetFileHeader(
    _VersionServ__GetFileHeader*        VersionServ__GetFileHeader,	///< Input parameter
    _VersionServ__GetFileHeaderResponse&VersionServ__GetFileHeaderResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __VersionServ3__QueryObjects                                             *
 *                                                                            *
\******************************************************************************/


/** Operation "__VersionServ3__QueryObjects" of service binding "VersionServiceSoap12".

  - SOAP document/literal style messaging

  - Action: "http://xerofox.com/VersionService/QueryObjects"

  - Addressing input action: "http://xerofox.com/VersionService/QueryObjects"

  - Addressing output action: "http://xerofox.com/VersionService/QueryObjectsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___VersionServ3__QueryObjects(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _VersionServ__QueryObjects*         VersionServ__QueryObjects,
    // output parameters:
    _VersionServ__QueryObjectsResponse &VersionServ__QueryObjectsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __VersionServ3__QueryObjects(
    struct soap *soap,
    // input parameters:
    _VersionServ__QueryObjects*         VersionServ__QueryObjects,
    // output parameters:
    _VersionServ__QueryObjectsResponse &VersionServ__QueryObjectsResponse
  );
@endcode

C++ proxy class (defined in soapVersionServiceSoap12Proxy.h):
@code
  class VersionServiceSoap12Proxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapVersionServiceSoap12Service.h):
@code
  class VersionServiceSoap12Service;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap VersionServ3 service method-protocol:	QueryObjects SOAP
//gsoap VersionServ3 service method-style:	QueryObjects document
//gsoap VersionServ3 service method-encoding:	QueryObjects literal
//gsoap VersionServ3 service method-input-action:	QueryObjects http://xerofox.com/VersionService/QueryObjects
//gsoap VersionServ3 service method-output-action:	QueryObjects http://xerofox.com/VersionService/QueryObjectsResponse
int __VersionServ3__QueryObjects(
    _VersionServ__QueryObjects*         VersionServ__QueryObjects,	///< Input parameter
    _VersionServ__QueryObjectsResponse &VersionServ__QueryObjectsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __VersionServ3__DownloadObjects                                          *
 *                                                                            *
\******************************************************************************/


/** Operation "__VersionServ3__DownloadObjects" of service binding "VersionServiceSoap12".

  - SOAP document/literal style messaging

  - Action: "http://xerofox.com/VersionService/DownloadObjects"

  - Addressing input action: "http://xerofox.com/VersionService/DownloadObjects"

  - Addressing output action: "http://xerofox.com/VersionService/DownloadObjectsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___VersionServ3__DownloadObjects(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _VersionServ__DownloadObjects*      VersionServ__DownloadObjects,
    // output parameters:
    _VersionServ__DownloadObjectsResponse&VersionServ__DownloadObjectsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __VersionServ3__DownloadObjects(
    struct soap *soap,
    // input parameters:
    _VersionServ__DownloadObjects*      VersionServ__DownloadObjects,
    // output parameters:
    _VersionServ__DownloadObjectsResponse&VersionServ__DownloadObjectsResponse
  );
@endcode

C++ proxy class (defined in soapVersionServiceSoap12Proxy.h):
@code
  class VersionServiceSoap12Proxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapVersionServiceSoap12Service.h):
@code
  class VersionServiceSoap12Service;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap VersionServ3 service method-protocol:	DownloadObjects SOAP
//gsoap VersionServ3 service method-style:	DownloadObjects document
//gsoap VersionServ3 service method-encoding:	DownloadObjects literal
//gsoap VersionServ3 service method-input-action:	DownloadObjects http://xerofox.com/VersionService/DownloadObjects
//gsoap VersionServ3 service method-output-action:	DownloadObjects http://xerofox.com/VersionService/DownloadObjectsResponse
int __VersionServ3__DownloadObjects(
    _VersionServ__DownloadObjects*      VersionServ__DownloadObjects,	///< Input parameter
    _VersionServ__DownloadObjectsResponse&VersionServ__DownloadObjectsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __VersionServ3__SaveOrUpdateObjects                                      *
 *                                                                            *
\******************************************************************************/


/** Operation "__VersionServ3__SaveOrUpdateObjects" of service binding "VersionServiceSoap12".

  - SOAP document/literal style messaging

  - Action: "http://xerofox.com/VersionService/SaveOrUpdateObjects"

  - Addressing input action: "http://xerofox.com/VersionService/SaveOrUpdateObjects"

  - Addressing output action: "http://xerofox.com/VersionService/SaveOrUpdateObjectsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___VersionServ3__SaveOrUpdateObjects(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _VersionServ__SaveOrUpdateObjects*  VersionServ__SaveOrUpdateObjects,
    // output parameters:
    _VersionServ__SaveOrUpdateObjectsResponse&VersionServ__SaveOrUpdateObjectsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __VersionServ3__SaveOrUpdateObjects(
    struct soap *soap,
    // input parameters:
    _VersionServ__SaveOrUpdateObjects*  VersionServ__SaveOrUpdateObjects,
    // output parameters:
    _VersionServ__SaveOrUpdateObjectsResponse&VersionServ__SaveOrUpdateObjectsResponse
  );
@endcode

C++ proxy class (defined in soapVersionServiceSoap12Proxy.h):
@code
  class VersionServiceSoap12Proxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapVersionServiceSoap12Service.h):
@code
  class VersionServiceSoap12Service;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap VersionServ3 service method-protocol:	SaveOrUpdateObjects SOAP
//gsoap VersionServ3 service method-style:	SaveOrUpdateObjects document
//gsoap VersionServ3 service method-encoding:	SaveOrUpdateObjects literal
//gsoap VersionServ3 service method-input-action:	SaveOrUpdateObjects http://xerofox.com/VersionService/SaveOrUpdateObjects
//gsoap VersionServ3 service method-output-action:	SaveOrUpdateObjects http://xerofox.com/VersionService/SaveOrUpdateObjectsResponse
int __VersionServ3__SaveOrUpdateObjects(
    _VersionServ__SaveOrUpdateObjects*  VersionServ__SaveOrUpdateObjects,	///< Input parameter
    _VersionServ__SaveOrUpdateObjectsResponse&VersionServ__SaveOrUpdateObjectsResponse	///< Output parameter
);

/**

@page VersionServiceSoap12 Binding "VersionServiceSoap12"

@section VersionServiceSoap12_policy_enablers Policy Enablers of Binding "VersionServiceSoap12"

Based on policies, this service imports

  - WS-Policy reminders and enablers:
    - WS-Addressing 1.0 (2005/08, accepts 2004/08):
	@code
	#import "wsa5.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsaapi.h"
	soap_register_plugin(soap, soap_wsa); // register the wsa plugin in your code
	// See the user guide gsoap/doc/wsa/html/index.html
	@endcode
    - WS-Addressing (2004/08):
	@code
	#import "wsa.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsaapi.h"
	soap_register_plugin(soap, soap_wsa); // register the wsa plugin in your code
	// See the user guide gsoap/doc/wsa/html/index.html
	@endcode
    - WS-ReliableMessaging 1.0:
	@code
	#import "wsrm5.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsrmapi.h"
	soap_register_plugin(soap, soap_wsa); // register the wsa plugin in your code
	soap_register_plugin(soap, soap_wsrm); // register the wsrm plugin in your code
	// See the user guide gsoap/doc/wsrm/html/index.html
	@endcode
    - WS-ReliableMessaging 1.1:
	@code
	#import "wsrm.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsrmapi.h"
	soap_register_plugin(soap, soap_wsa); // register the wsa plugin in your code
	soap_register_plugin(soap, soap_wsrm); // register the wsrm plugin in your code
	// See the user guide gsoap/doc/wsrm/html/index.html
	@endcode
    - WS-Security (SOAP Message Security) 1.0 (accepts 1.1):
	@code
	#import "wsse.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsseapi.h"
	soap_register_plugin(soap, soap_wsse); // register the wsse plugin in your code
	// See the user guide gsoap/doc/wsse/html/index.html
	@endcode
    - WS-Security (SOAP Message Security) 1.1 (accepts 1.0):
	@code
	#import "wsse11.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsseapi.h"
	soap_register_plugin(soap, soap_wsse); // register the wsse plugin in your code
	// See the user guide gsoap/doc/wsse/html/index.html
	@endcode
    - HTTP Digest Authentication:
	@code
	#include "plugin/httpda.h"
	soap_register_plugin(soap, soap_http_da); // register the HTTP DA plugin in your code
	// See the user guide gsoap/doc/httpda/html/index.html
	@endcode
*/


/******************************************************************************\
 *                                                                            *
 * XML Data Binding                                                           *
 *                                                                            *
\******************************************************************************/


/**

@page page_XMLDataBinding XML Data Binding

SOAP/XML services use data bindings contractually bound by WSDL and auto-
generated by wsdl2h and soapcpp2 (see Service Bindings). Plain data bindings
are adopted from XML schemas as part of the WSDL types section or when running
wsdl2h on a set of schemas to produce non-SOAP-based XML data bindings.

The following readers and writers are C/C++ data type (de)serializers auto-
generated by wsdl2h and soapcpp2. Run soapcpp2 on this file to generate the
(de)serialization code, which is stored in soapC.c[pp]. Include "soapH.h" in
your code to import these data type and function declarations. Only use the
soapcpp2-generated files in your project build. Do not include the wsdl2h-
generated .h file in your code.

Data can be read in XML and deserialized from:
  - a file descriptor, using soap->recvfd = fd
  - a socket, using soap->socket = ...
  - a C++ stream, using soap->is = ...
  - a buffer, using the soap->frecv() callback

Data can be serialized in XML and written to:
  - a file descriptor, using soap->sendfd = fd
  - a socket, using soap->socket = ...
  - a C++ stream, using soap->os = ...
  - a buffer, using the soap->fsend() callback

The following options are available for (de)serialization control:
  - soap->encodingStyle = NULL; to remove SOAP 1.1/1.2 encodingStyle
  - soap_mode(soap, SOAP_XML_TREE); XML without id-ref (no cycles!)
  - soap_mode(soap, SOAP_XML_GRAPH); XML with id-ref (including cycles)
  - soap_set_namespaces(soap, struct Namespace *nsmap); to set xmlns bindings


@section VersionServ Top-level root elements of schema "http://xerofox.com/VersionService/"

  - <Login> @ref _VersionServ__Login
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__VersionServ__Login(struct soap*, _VersionServ__Login*);
    // Writer (returns SOAP_OK on success):
    soap_write__VersionServ__Login(struct soap*, _VersionServ__Login*);
    @endcode

  - <LoginResponse> @ref _VersionServ__LoginResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__VersionServ__LoginResponse(struct soap*, _VersionServ__LoginResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__VersionServ__LoginResponse(struct soap*, _VersionServ__LoginResponse*);
    @endcode

  - <LoginByByteArr> @ref _VersionServ__LoginByByteArr
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__VersionServ__LoginByByteArr(struct soap*, _VersionServ__LoginByByteArr*);
    // Writer (returns SOAP_OK on success):
    soap_write__VersionServ__LoginByByteArr(struct soap*, _VersionServ__LoginByByteArr*);
    @endcode

  - <LoginByByteArrResponse> @ref _VersionServ__LoginByByteArrResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__VersionServ__LoginByByteArrResponse(struct soap*, _VersionServ__LoginByByteArrResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__VersionServ__LoginByByteArrResponse(struct soap*, _VersionServ__LoginByByteArrResponse*);
    @endcode

  - <GetUpdateVerByCurVer> @ref _VersionServ__GetUpdateVerByCurVer
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__VersionServ__GetUpdateVerByCurVer(struct soap*, _VersionServ__GetUpdateVerByCurVer*);
    // Writer (returns SOAP_OK on success):
    soap_write__VersionServ__GetUpdateVerByCurVer(struct soap*, _VersionServ__GetUpdateVerByCurVer*);
    @endcode

  - <GetUpdateVerByCurVerResponse> @ref _VersionServ__GetUpdateVerByCurVerResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__VersionServ__GetUpdateVerByCurVerResponse(struct soap*, _VersionServ__GetUpdateVerByCurVerResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__VersionServ__GetUpdateVerByCurVerResponse(struct soap*, _VersionServ__GetUpdateVerByCurVerResponse*);
    @endcode

  - <SetRevisionReadFlag> @ref _VersionServ__SetRevisionReadFlag
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__VersionServ__SetRevisionReadFlag(struct soap*, _VersionServ__SetRevisionReadFlag*);
    // Writer (returns SOAP_OK on success):
    soap_write__VersionServ__SetRevisionReadFlag(struct soap*, _VersionServ__SetRevisionReadFlag*);
    @endcode

  - <SetRevisionReadFlagResponse> @ref _VersionServ__SetRevisionReadFlagResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__VersionServ__SetRevisionReadFlagResponse(struct soap*, _VersionServ__SetRevisionReadFlagResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__VersionServ__SetRevisionReadFlagResponse(struct soap*, _VersionServ__SetRevisionReadFlagResponse*);
    @endcode

  - <CompareVersion> @ref _VersionServ__CompareVersion
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__VersionServ__CompareVersion(struct soap*, _VersionServ__CompareVersion*);
    // Writer (returns SOAP_OK on success):
    soap_write__VersionServ__CompareVersion(struct soap*, _VersionServ__CompareVersion*);
    @endcode

  - <CompareVersionResponse> @ref _VersionServ__CompareVersionResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__VersionServ__CompareVersionResponse(struct soap*, _VersionServ__CompareVersionResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__VersionServ__CompareVersionResponse(struct soap*, _VersionServ__CompareVersionResponse*);
    @endcode

  - <GetVersionReleaseNotes> @ref _VersionServ__GetVersionReleaseNotes
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__VersionServ__GetVersionReleaseNotes(struct soap*, _VersionServ__GetVersionReleaseNotes*);
    // Writer (returns SOAP_OK on success):
    soap_write__VersionServ__GetVersionReleaseNotes(struct soap*, _VersionServ__GetVersionReleaseNotes*);
    @endcode

  - <GetVersionReleaseNotesResponse> @ref _VersionServ__GetVersionReleaseNotesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__VersionServ__GetVersionReleaseNotesResponse(struct soap*, _VersionServ__GetVersionReleaseNotesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__VersionServ__GetVersionReleaseNotesResponse(struct soap*, _VersionServ__GetVersionReleaseNotesResponse*);
    @endcode

  - <GetDogAccessHistory> @ref _VersionServ__GetDogAccessHistory
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__VersionServ__GetDogAccessHistory(struct soap*, _VersionServ__GetDogAccessHistory*);
    // Writer (returns SOAP_OK on success):
    soap_write__VersionServ__GetDogAccessHistory(struct soap*, _VersionServ__GetDogAccessHistory*);
    @endcode

  - <GetDogAccessHistoryResponse> @ref _VersionServ__GetDogAccessHistoryResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__VersionServ__GetDogAccessHistoryResponse(struct soap*, _VersionServ__GetDogAccessHistoryResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__VersionServ__GetDogAccessHistoryResponse(struct soap*, _VersionServ__GetDogAccessHistoryResponse*);
    @endcode

  - <QueryDownLoadItemArrByProductId> @ref _VersionServ__QueryDownLoadItemArrByProductId
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__VersionServ__QueryDownLoadItemArrByProductId(struct soap*, _VersionServ__QueryDownLoadItemArrByProductId*);
    // Writer (returns SOAP_OK on success):
    soap_write__VersionServ__QueryDownLoadItemArrByProductId(struct soap*, _VersionServ__QueryDownLoadItemArrByProductId*);
    @endcode

  - <QueryDownLoadItemArrByProductIdResponse> @ref _VersionServ__QueryDownLoadItemArrByProductIdResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__VersionServ__QueryDownLoadItemArrByProductIdResponse(struct soap*, _VersionServ__QueryDownLoadItemArrByProductIdResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__VersionServ__QueryDownLoadItemArrByProductIdResponse(struct soap*, _VersionServ__QueryDownLoadItemArrByProductIdResponse*);
    @endcode

  - <GetFileHeader> @ref _VersionServ__GetFileHeader
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__VersionServ__GetFileHeader(struct soap*, _VersionServ__GetFileHeader*);
    // Writer (returns SOAP_OK on success):
    soap_write__VersionServ__GetFileHeader(struct soap*, _VersionServ__GetFileHeader*);
    @endcode

  - <GetFileHeaderResponse> @ref _VersionServ__GetFileHeaderResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__VersionServ__GetFileHeaderResponse(struct soap*, _VersionServ__GetFileHeaderResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__VersionServ__GetFileHeaderResponse(struct soap*, _VersionServ__GetFileHeaderResponse*);
    @endcode

  - <QueryObjects> @ref _VersionServ__QueryObjects
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__VersionServ__QueryObjects(struct soap*, _VersionServ__QueryObjects*);
    // Writer (returns SOAP_OK on success):
    soap_write__VersionServ__QueryObjects(struct soap*, _VersionServ__QueryObjects*);
    @endcode

  - <QueryObjectsResponse> @ref _VersionServ__QueryObjectsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__VersionServ__QueryObjectsResponse(struct soap*, _VersionServ__QueryObjectsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__VersionServ__QueryObjectsResponse(struct soap*, _VersionServ__QueryObjectsResponse*);
    @endcode

  - <DownloadObjects> @ref _VersionServ__DownloadObjects
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__VersionServ__DownloadObjects(struct soap*, _VersionServ__DownloadObjects*);
    // Writer (returns SOAP_OK on success):
    soap_write__VersionServ__DownloadObjects(struct soap*, _VersionServ__DownloadObjects*);
    @endcode

  - <DownloadObjectsResponse> @ref _VersionServ__DownloadObjectsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__VersionServ__DownloadObjectsResponse(struct soap*, _VersionServ__DownloadObjectsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__VersionServ__DownloadObjectsResponse(struct soap*, _VersionServ__DownloadObjectsResponse*);
    @endcode

  - <SaveOrUpdateObjects> @ref _VersionServ__SaveOrUpdateObjects
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__VersionServ__SaveOrUpdateObjects(struct soap*, _VersionServ__SaveOrUpdateObjects*);
    // Writer (returns SOAP_OK on success):
    soap_write__VersionServ__SaveOrUpdateObjects(struct soap*, _VersionServ__SaveOrUpdateObjects*);
    @endcode

  - <SaveOrUpdateObjectsResponse> @ref _VersionServ__SaveOrUpdateObjectsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__VersionServ__SaveOrUpdateObjectsResponse(struct soap*, _VersionServ__SaveOrUpdateObjectsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__VersionServ__SaveOrUpdateObjectsResponse(struct soap*, _VersionServ__SaveOrUpdateObjectsResponse*);
    @endcode

*/

/* End of D:\Structure\!ClientServTemp\VerServer.h */
