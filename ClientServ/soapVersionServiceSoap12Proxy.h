/* soapVersionServiceSoap12Proxy.h
   Generated by gSOAP 2.8.19 from d:\Structure\!ClientServTemp\ClientServer.h

Copyright(C) 2000-2014, Robert van Engelen, Genivia Inc. All Rights Reserved.
The generated code is released under one of the following licenses:
GPL or Genivia's license for commercial use.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
*/

#ifndef soapVersionServiceSoap12Proxy_H
#define soapVersionServiceSoap12Proxy_H
#include "soapH.h"

class SOAP_CMAC VersionServiceSoap12Proxy : public soap
{ public:
	/// Endpoint URL of service 'VersionServiceSoap12Proxy' (change as needed)
	const char *soap_endpoint;
	/// Variables globally declared in d:\Structure\!ClientServTemp\ClientServer.h (non-static)
	/// Constructor
	VersionServiceSoap12Proxy();
	/// Construct from another engine state
	VersionServiceSoap12Proxy(const struct soap&);
	/// Constructor with endpoint URL
	VersionServiceSoap12Proxy(const char *url);
	/// Constructor with engine input+output mode control
	VersionServiceSoap12Proxy(soap_mode iomode);
	/// Constructor with URL and input+output mode control
	VersionServiceSoap12Proxy(const char *url, soap_mode iomode);
	/// Constructor with engine input and output mode control
	VersionServiceSoap12Proxy(soap_mode imode, soap_mode omode);
	/// Destructor frees deserialized data
	virtual	~VersionServiceSoap12Proxy();
	/// Initializer used by constructors
	virtual	void VersionServiceSoap12Proxy_init(soap_mode imode, soap_mode omode);
	/// Delete all deserialized data (with soap_destroy and soap_end)
	virtual	void destroy();
	/// Delete all deserialized data and reset to default
	virtual	void reset();
	/// Disables and removes SOAP Header from message
	virtual	void soap_noheader();
	/// Get SOAP Header structure (NULL when absent)
	virtual	const SOAP_ENV__Header *soap_header();
	/// Get SOAP Fault structure (NULL when absent)
	virtual	const SOAP_ENV__Fault *soap_fault();
	/// Get SOAP Fault string (NULL when absent)
	virtual	const char *soap_fault_string();
	/// Get SOAP Fault detail as string (NULL when absent)
	virtual	const char *soap_fault_detail();
	/// Close connection (normally automatic, except for send_X ops)
	virtual	int soap_close_socket();
	/// Force close connection (can kill a thread blocked on IO)
	virtual	int soap_force_close_socket();
	/// Print fault
	virtual	void soap_print_fault(FILE*);
#ifndef WITH_LEAN
	/// Print fault to stream
#ifndef WITH_COMPAT
	virtual	void soap_stream_fault(std::ostream&);
#endif

	/// Put fault into buffer
	virtual	char *soap_sprint_fault(char *buf, size_t len);
#endif

	/// Web service operation 'Login' (returns error code or SOAP_OK)
	virtual	int Login(_VersionServ__Login *VersionServ__Login, _VersionServ__LoginResponse &VersionServ__LoginResponse) { return this->Login(NULL, NULL, VersionServ__Login, VersionServ__LoginResponse); }
	virtual	int Login(const char *endpoint, const char *soap_action, _VersionServ__Login *VersionServ__Login, _VersionServ__LoginResponse &VersionServ__LoginResponse);

	/// Web service operation 'LoginByByteArr' (returns error code or SOAP_OK)
	virtual	int LoginByByteArr(_VersionServ__LoginByByteArr *VersionServ__LoginByByteArr, _VersionServ__LoginByByteArrResponse &VersionServ__LoginByByteArrResponse) { return this->LoginByByteArr(NULL, NULL, VersionServ__LoginByByteArr, VersionServ__LoginByByteArrResponse); }
	virtual	int LoginByByteArr(const char *endpoint, const char *soap_action, _VersionServ__LoginByByteArr *VersionServ__LoginByByteArr, _VersionServ__LoginByByteArrResponse &VersionServ__LoginByByteArrResponse);

	/// Web service operation 'GetUpdateVerByCurVer' (returns error code or SOAP_OK)
	virtual	int GetUpdateVerByCurVer(_VersionServ__GetUpdateVerByCurVer *VersionServ__GetUpdateVerByCurVer, _VersionServ__GetUpdateVerByCurVerResponse &VersionServ__GetUpdateVerByCurVerResponse) { return this->GetUpdateVerByCurVer(NULL, NULL, VersionServ__GetUpdateVerByCurVer, VersionServ__GetUpdateVerByCurVerResponse); }
	virtual	int GetUpdateVerByCurVer(const char *endpoint, const char *soap_action, _VersionServ__GetUpdateVerByCurVer *VersionServ__GetUpdateVerByCurVer, _VersionServ__GetUpdateVerByCurVerResponse &VersionServ__GetUpdateVerByCurVerResponse);

	/// Web service operation 'SetRevisionReadFlag' (returns error code or SOAP_OK)
	virtual	int SetRevisionReadFlag(_VersionServ__SetRevisionReadFlag *VersionServ__SetRevisionReadFlag, _VersionServ__SetRevisionReadFlagResponse &VersionServ__SetRevisionReadFlagResponse) { return this->SetRevisionReadFlag(NULL, NULL, VersionServ__SetRevisionReadFlag, VersionServ__SetRevisionReadFlagResponse); }
	virtual	int SetRevisionReadFlag(const char *endpoint, const char *soap_action, _VersionServ__SetRevisionReadFlag *VersionServ__SetRevisionReadFlag, _VersionServ__SetRevisionReadFlagResponse &VersionServ__SetRevisionReadFlagResponse);

	/// Web service operation 'CompareVersion' (returns error code or SOAP_OK)
	virtual	int CompareVersion(_VersionServ__CompareVersion *VersionServ__CompareVersion, _VersionServ__CompareVersionResponse &VersionServ__CompareVersionResponse) { return this->CompareVersion(NULL, NULL, VersionServ__CompareVersion, VersionServ__CompareVersionResponse); }
	virtual	int CompareVersion(const char *endpoint, const char *soap_action, _VersionServ__CompareVersion *VersionServ__CompareVersion, _VersionServ__CompareVersionResponse &VersionServ__CompareVersionResponse);

	/// Web service operation 'GetVersionReleaseNotes' (returns error code or SOAP_OK)
	virtual	int GetVersionReleaseNotes(_VersionServ__GetVersionReleaseNotes *VersionServ__GetVersionReleaseNotes, _VersionServ__GetVersionReleaseNotesResponse &VersionServ__GetVersionReleaseNotesResponse) { return this->GetVersionReleaseNotes(NULL, NULL, VersionServ__GetVersionReleaseNotes, VersionServ__GetVersionReleaseNotesResponse); }
	virtual	int GetVersionReleaseNotes(const char *endpoint, const char *soap_action, _VersionServ__GetVersionReleaseNotes *VersionServ__GetVersionReleaseNotes, _VersionServ__GetVersionReleaseNotesResponse &VersionServ__GetVersionReleaseNotesResponse);

	/// Web service operation 'GetDogAccessHistory' (returns error code or SOAP_OK)
	virtual	int GetDogAccessHistory(_VersionServ__GetDogAccessHistory *VersionServ__GetDogAccessHistory, _VersionServ__GetDogAccessHistoryResponse &VersionServ__GetDogAccessHistoryResponse) { return this->GetDogAccessHistory(NULL, NULL, VersionServ__GetDogAccessHistory, VersionServ__GetDogAccessHistoryResponse); }
	virtual	int GetDogAccessHistory(const char *endpoint, const char *soap_action, _VersionServ__GetDogAccessHistory *VersionServ__GetDogAccessHistory, _VersionServ__GetDogAccessHistoryResponse &VersionServ__GetDogAccessHistoryResponse);

	/// Web service operation 'QueryDownLoadItemArrByProductId' (returns error code or SOAP_OK)
	virtual	int QueryDownLoadItemArrByProductId(_VersionServ__QueryDownLoadItemArrByProductId *VersionServ__QueryDownLoadItemArrByProductId, _VersionServ__QueryDownLoadItemArrByProductIdResponse &VersionServ__QueryDownLoadItemArrByProductIdResponse) { return this->QueryDownLoadItemArrByProductId(NULL, NULL, VersionServ__QueryDownLoadItemArrByProductId, VersionServ__QueryDownLoadItemArrByProductIdResponse); }
	virtual	int QueryDownLoadItemArrByProductId(const char *endpoint, const char *soap_action, _VersionServ__QueryDownLoadItemArrByProductId *VersionServ__QueryDownLoadItemArrByProductId, _VersionServ__QueryDownLoadItemArrByProductIdResponse &VersionServ__QueryDownLoadItemArrByProductIdResponse);

	/// Web service operation 'GetFileHeader' (returns error code or SOAP_OK)
	virtual	int GetFileHeader(_VersionServ__GetFileHeader *VersionServ__GetFileHeader, _VersionServ__GetFileHeaderResponse &VersionServ__GetFileHeaderResponse) { return this->GetFileHeader(NULL, NULL, VersionServ__GetFileHeader, VersionServ__GetFileHeaderResponse); }
	virtual	int GetFileHeader(const char *endpoint, const char *soap_action, _VersionServ__GetFileHeader *VersionServ__GetFileHeader, _VersionServ__GetFileHeaderResponse &VersionServ__GetFileHeaderResponse);

	/// Web service operation 'QueryObjects' (returns error code or SOAP_OK)
	virtual	int QueryObjects(_VersionServ__QueryObjects *VersionServ__QueryObjects, _VersionServ__QueryObjectsResponse &VersionServ__QueryObjectsResponse) { return this->QueryObjects(NULL, NULL, VersionServ__QueryObjects, VersionServ__QueryObjectsResponse); }
	virtual	int QueryObjects(const char *endpoint, const char *soap_action, _VersionServ__QueryObjects *VersionServ__QueryObjects, _VersionServ__QueryObjectsResponse &VersionServ__QueryObjectsResponse);

	/// Web service operation 'DownloadObjects' (returns error code or SOAP_OK)
	virtual	int DownloadObjects(_VersionServ__DownloadObjects *VersionServ__DownloadObjects, _VersionServ__DownloadObjectsResponse &VersionServ__DownloadObjectsResponse) { return this->DownloadObjects(NULL, NULL, VersionServ__DownloadObjects, VersionServ__DownloadObjectsResponse); }
	virtual	int DownloadObjects(const char *endpoint, const char *soap_action, _VersionServ__DownloadObjects *VersionServ__DownloadObjects, _VersionServ__DownloadObjectsResponse &VersionServ__DownloadObjectsResponse);

	/// Web service operation 'SaveOrUpdateObjects' (returns error code or SOAP_OK)
	virtual	int SaveOrUpdateObjects(_VersionServ__SaveOrUpdateObjects *VersionServ__SaveOrUpdateObjects, _VersionServ__SaveOrUpdateObjectsResponse &VersionServ__SaveOrUpdateObjectsResponse) { return this->SaveOrUpdateObjects(NULL, NULL, VersionServ__SaveOrUpdateObjects, VersionServ__SaveOrUpdateObjectsResponse); }
	virtual	int SaveOrUpdateObjects(const char *endpoint, const char *soap_action, _VersionServ__SaveOrUpdateObjects *VersionServ__SaveOrUpdateObjects, _VersionServ__SaveOrUpdateObjectsResponse &VersionServ__SaveOrUpdateObjectsResponse);
};
#endif
