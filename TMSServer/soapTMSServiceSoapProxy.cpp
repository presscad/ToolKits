/* soapTMSServiceSoapProxy.cpp
   Generated by gSOAP 2.8.19 from d:\Structure\TMSServTemp\TmsServer.h

Copyright(C) 2000-2014, Robert van Engelen, Genivia Inc. All Rights Reserved.
The generated code is released under one of the following licenses:
GPL or Genivia's license for commercial use.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
*/

#include "soapTMSServiceSoapProxy.h"

TMSServiceSoapProxy::TMSServiceSoapProxy()
{	TMSServiceSoapProxy_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
}

TMSServiceSoapProxy::TMSServiceSoapProxy(const struct soap &_soap) : soap(_soap)
{ }

TMSServiceSoapProxy::TMSServiceSoapProxy(const char *url)
{	TMSServiceSoapProxy_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
	soap_endpoint = url;
}

TMSServiceSoapProxy::TMSServiceSoapProxy(soap_mode iomode)
{	TMSServiceSoapProxy_init(iomode, iomode);
}

TMSServiceSoapProxy::TMSServiceSoapProxy(const char *url, soap_mode iomode)
{	TMSServiceSoapProxy_init(iomode, iomode);
	soap_endpoint = url;
}

TMSServiceSoapProxy::TMSServiceSoapProxy(soap_mode imode, soap_mode omode)
{	TMSServiceSoapProxy_init(imode, omode);
}

TMSServiceSoapProxy::~TMSServiceSoapProxy()
{ }

void TMSServiceSoapProxy::TMSServiceSoapProxy_init(soap_mode imode, soap_mode omode)
{	soap_imode(this, imode);
	soap_omode(this, omode);
	soap_endpoint = NULL;
	static const struct Namespace namespaces[] =
{
	{"SOAP-ENV", "http://www.w3.org/2003/05/soap-envelope", "http://schemas.xmlsoap.org/soap/envelope/", NULL},
	{"SOAP-ENC", "http://www.w3.org/2003/05/soap-encoding", "http://schemas.xmlsoap.org/soap/encoding/", NULL},
	{"xsi", "http://www.w3.org/2001/XMLSchema-instance", "http://www.w3.org/*/XMLSchema-instance", NULL},
	{"xsd", "http://www.w3.org/2001/XMLSchema", "http://www.w3.org/*/XMLSchema", NULL},
	{"ns1", "http://xerofox.com/TMSService/", NULL, NULL},
	{NULL, NULL, NULL, NULL}
};
	soap_set_namespaces(this, namespaces);
}

void TMSServiceSoapProxy::destroy()
{	soap_destroy(this);
	soap_end(this);
}

void TMSServiceSoapProxy::reset()
{	destroy();
	soap_done(this);
	soap_initialize(this);
	TMSServiceSoapProxy_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
}

void TMSServiceSoapProxy::soap_noheader()
{	this->header = NULL;
}

const SOAP_ENV__Header *TMSServiceSoapProxy::soap_header()
{	return this->header;
}

const SOAP_ENV__Fault *TMSServiceSoapProxy::soap_fault()
{	return this->fault;
}

const char *TMSServiceSoapProxy::soap_fault_string()
{	return *soap_faultstring(this);
}

const char *TMSServiceSoapProxy::soap_fault_detail()
{	return *soap_faultdetail(this);
}

int TMSServiceSoapProxy::soap_close_socket()
{	return soap_closesock(this);
}

int TMSServiceSoapProxy::soap_force_close_socket()
{	return soap_force_closesock(this);
}

void TMSServiceSoapProxy::soap_print_fault(FILE *fd)
{	::soap_print_fault(this, fd);
}

#ifndef WITH_LEAN
#ifndef WITH_COMPAT
void TMSServiceSoapProxy::soap_stream_fault(std::ostream& os)
{	::soap_stream_fault(this, os);
}
#endif

char *TMSServiceSoapProxy::soap_sprint_fault(char *buf, size_t len)
{	return ::soap_sprint_fault(this, buf, len);
}
#endif

int TMSServiceSoapProxy::loginUser(const char *endpoint, const char *soap_action, _ns1__loginUser *ns1__loginUser, _ns1__loginUserResponse &ns1__loginUserResponse)
{	struct soap *soap = this;
	struct __ns1__loginUser soap_tmp___ns1__loginUser;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://localhost/TMSServ/TmsService.asmx";
	if (soap_action == NULL)
		soap_action = "http://xerofox.com/TMSService/loginUser";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__loginUser.ns1__loginUser = ns1__loginUser;
	soap_serializeheader(soap);
	soap_serialize___ns1__loginUser(soap, &soap_tmp___ns1__loginUser);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__loginUser(soap, &soap_tmp___ns1__loginUser, "-ns1:loginUser", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__loginUser(soap, &soap_tmp___ns1__loginUser, "-ns1:loginUser", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__loginUserResponse)
		return soap_closesock(soap);
	ns1__loginUserResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__loginUserResponse.soap_get(soap, "ns1:loginUserResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int TMSServiceSoapProxy::loginUserByByteArr(const char *endpoint, const char *soap_action, _ns1__loginUserByByteArr *ns1__loginUserByByteArr, _ns1__loginUserByByteArrResponse &ns1__loginUserByByteArrResponse)
{	struct soap *soap = this;
	struct __ns1__loginUserByByteArr soap_tmp___ns1__loginUserByByteArr;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://localhost/TMSServ/TmsService.asmx";
	if (soap_action == NULL)
		soap_action = "http://xerofox.com/TMSService/loginUserByByteArr";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__loginUserByByteArr.ns1__loginUserByByteArr = ns1__loginUserByByteArr;
	soap_serializeheader(soap);
	soap_serialize___ns1__loginUserByByteArr(soap, &soap_tmp___ns1__loginUserByByteArr);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__loginUserByByteArr(soap, &soap_tmp___ns1__loginUserByByteArr, "-ns1:loginUserByByteArr", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__loginUserByByteArr(soap, &soap_tmp___ns1__loginUserByByteArr, "-ns1:loginUserByByteArr", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__loginUserByByteArrResponse)
		return soap_closesock(soap);
	ns1__loginUserByByteArrResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__loginUserByByteArrResponse.soap_get(soap, "ns1:loginUserByByteArrResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int TMSServiceSoapProxy::logoutUser(const char *endpoint, const char *soap_action, _ns1__logoutUser *ns1__logoutUser, _ns1__logoutUserResponse &ns1__logoutUserResponse)
{	struct soap *soap = this;
	struct __ns1__logoutUser soap_tmp___ns1__logoutUser;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://localhost/TMSServ/TmsService.asmx";
	if (soap_action == NULL)
		soap_action = "http://xerofox.com/TMSService/logoutUser";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__logoutUser.ns1__logoutUser = ns1__logoutUser;
	soap_serializeheader(soap);
	soap_serialize___ns1__logoutUser(soap, &soap_tmp___ns1__logoutUser);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__logoutUser(soap, &soap_tmp___ns1__logoutUser, "-ns1:logoutUser", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__logoutUser(soap, &soap_tmp___ns1__logoutUser, "-ns1:logoutUser", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__logoutUserResponse)
		return soap_closesock(soap);
	ns1__logoutUserResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__logoutUserResponse.soap_get(soap, "ns1:logoutUserResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int TMSServiceSoapProxy::QueryObjects(const char *endpoint, const char *soap_action, _ns1__QueryObjects *ns1__QueryObjects, _ns1__QueryObjectsResponse &ns1__QueryObjectsResponse)
{	struct soap *soap = this;
	struct __ns1__QueryObjects soap_tmp___ns1__QueryObjects;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://localhost/TMSServ/TmsService.asmx";
	if (soap_action == NULL)
		soap_action = "http://xerofox.com/TMSService/QueryObjects";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__QueryObjects.ns1__QueryObjects = ns1__QueryObjects;
	soap_serializeheader(soap);
	soap_serialize___ns1__QueryObjects(soap, &soap_tmp___ns1__QueryObjects);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__QueryObjects(soap, &soap_tmp___ns1__QueryObjects, "-ns1:QueryObjects", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__QueryObjects(soap, &soap_tmp___ns1__QueryObjects, "-ns1:QueryObjects", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__QueryObjectsResponse)
		return soap_closesock(soap);
	ns1__QueryObjectsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__QueryObjectsResponse.soap_get(soap, "ns1:QueryObjectsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int TMSServiceSoapProxy::DownloadObjects(const char *endpoint, const char *soap_action, _ns1__DownloadObjects *ns1__DownloadObjects, _ns1__DownloadObjectsResponse &ns1__DownloadObjectsResponse)
{	struct soap *soap = this;
	struct __ns1__DownloadObjects soap_tmp___ns1__DownloadObjects;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://localhost/TMSServ/TmsService.asmx";
	if (soap_action == NULL)
		soap_action = "http://xerofox.com/TMSService/DownloadObjects";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__DownloadObjects.ns1__DownloadObjects = ns1__DownloadObjects;
	soap_serializeheader(soap);
	soap_serialize___ns1__DownloadObjects(soap, &soap_tmp___ns1__DownloadObjects);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__DownloadObjects(soap, &soap_tmp___ns1__DownloadObjects, "-ns1:DownloadObjects", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__DownloadObjects(soap, &soap_tmp___ns1__DownloadObjects, "-ns1:DownloadObjects", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__DownloadObjectsResponse)
		return soap_closesock(soap);
	ns1__DownloadObjectsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__DownloadObjectsResponse.soap_get(soap, "ns1:DownloadObjectsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int TMSServiceSoapProxy::GetObjectsVersion(const char *endpoint, const char *soap_action, _ns1__GetObjectsVersion *ns1__GetObjectsVersion, _ns1__GetObjectsVersionResponse &ns1__GetObjectsVersionResponse)
{	struct soap *soap = this;
	struct __ns1__GetObjectsVersion soap_tmp___ns1__GetObjectsVersion;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://localhost/TMSServ/TmsService.asmx";
	if (soap_action == NULL)
		soap_action = "http://xerofox.com/TMSService/GetObjectsVersion";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__GetObjectsVersion.ns1__GetObjectsVersion = ns1__GetObjectsVersion;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetObjectsVersion(soap, &soap_tmp___ns1__GetObjectsVersion);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetObjectsVersion(soap, &soap_tmp___ns1__GetObjectsVersion, "-ns1:GetObjectsVersion", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetObjectsVersion(soap, &soap_tmp___ns1__GetObjectsVersion, "-ns1:GetObjectsVersion", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__GetObjectsVersionResponse)
		return soap_closesock(soap);
	ns1__GetObjectsVersionResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetObjectsVersionResponse.soap_get(soap, "ns1:GetObjectsVersionResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int TMSServiceSoapProxy::GetTowerPartsLabelAndVersionSerial(const char *endpoint, const char *soap_action, _ns1__GetTowerPartsLabelAndVersionSerial *ns1__GetTowerPartsLabelAndVersionSerial, _ns1__GetTowerPartsLabelAndVersionSerialResponse &ns1__GetTowerPartsLabelAndVersionSerialResponse)
{	struct soap *soap = this;
	struct __ns1__GetTowerPartsLabelAndVersionSerial soap_tmp___ns1__GetTowerPartsLabelAndVersionSerial;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://localhost/TMSServ/TmsService.asmx";
	if (soap_action == NULL)
		soap_action = "http://xerofox.com/TMSService/GetTowerPartsLabelAndVersionSerial";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__GetTowerPartsLabelAndVersionSerial.ns1__GetTowerPartsLabelAndVersionSerial = ns1__GetTowerPartsLabelAndVersionSerial;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetTowerPartsLabelAndVersionSerial(soap, &soap_tmp___ns1__GetTowerPartsLabelAndVersionSerial);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetTowerPartsLabelAndVersionSerial(soap, &soap_tmp___ns1__GetTowerPartsLabelAndVersionSerial, "-ns1:GetTowerPartsLabelAndVersionSerial", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetTowerPartsLabelAndVersionSerial(soap, &soap_tmp___ns1__GetTowerPartsLabelAndVersionSerial, "-ns1:GetTowerPartsLabelAndVersionSerial", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__GetTowerPartsLabelAndVersionSerialResponse)
		return soap_closesock(soap);
	ns1__GetTowerPartsLabelAndVersionSerialResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetTowerPartsLabelAndVersionSerialResponse.soap_get(soap, "ns1:GetTowerPartsLabelAndVersionSerialResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int TMSServiceSoapProxy::MatchTowerParts(const char *endpoint, const char *soap_action, _ns1__MatchTowerParts *ns1__MatchTowerParts, _ns1__MatchTowerPartsResponse &ns1__MatchTowerPartsResponse)
{	struct soap *soap = this;
	struct __ns1__MatchTowerParts soap_tmp___ns1__MatchTowerParts;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://localhost/TMSServ/TmsService.asmx";
	if (soap_action == NULL)
		soap_action = "http://xerofox.com/TMSService/MatchTowerParts";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__MatchTowerParts.ns1__MatchTowerParts = ns1__MatchTowerParts;
	soap_serializeheader(soap);
	soap_serialize___ns1__MatchTowerParts(soap, &soap_tmp___ns1__MatchTowerParts);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__MatchTowerParts(soap, &soap_tmp___ns1__MatchTowerParts, "-ns1:MatchTowerParts", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__MatchTowerParts(soap, &soap_tmp___ns1__MatchTowerParts, "-ns1:MatchTowerParts", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__MatchTowerPartsResponse)
		return soap_closesock(soap);
	ns1__MatchTowerPartsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__MatchTowerPartsResponse.soap_get(soap, "ns1:MatchTowerPartsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int TMSServiceSoapProxy::SaveOrUpdateObjects(const char *endpoint, const char *soap_action, _ns1__SaveOrUpdateObjects *ns1__SaveOrUpdateObjects, _ns1__SaveOrUpdateObjectsResponse &ns1__SaveOrUpdateObjectsResponse)
{	struct soap *soap = this;
	struct __ns1__SaveOrUpdateObjects soap_tmp___ns1__SaveOrUpdateObjects;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://localhost/TMSServ/TmsService.asmx";
	if (soap_action == NULL)
		soap_action = "http://xerofox.com/TMSService/SaveOrUpdateObjects";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__SaveOrUpdateObjects.ns1__SaveOrUpdateObjects = ns1__SaveOrUpdateObjects;
	soap_serializeheader(soap);
	soap_serialize___ns1__SaveOrUpdateObjects(soap, &soap_tmp___ns1__SaveOrUpdateObjects);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__SaveOrUpdateObjects(soap, &soap_tmp___ns1__SaveOrUpdateObjects, "-ns1:SaveOrUpdateObjects", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__SaveOrUpdateObjects(soap, &soap_tmp___ns1__SaveOrUpdateObjects, "-ns1:SaveOrUpdateObjects", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__SaveOrUpdateObjectsResponse)
		return soap_closesock(soap);
	ns1__SaveOrUpdateObjectsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__SaveOrUpdateObjectsResponse.soap_get(soap, "ns1:SaveOrUpdateObjectsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int TMSServiceSoapProxy::DeleteObject(const char *endpoint, const char *soap_action, _ns1__DeleteObject *ns1__DeleteObject, _ns1__DeleteObjectResponse &ns1__DeleteObjectResponse)
{	struct soap *soap = this;
	struct __ns1__DeleteObject soap_tmp___ns1__DeleteObject;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://localhost/TMSServ/TmsService.asmx";
	if (soap_action == NULL)
		soap_action = "http://xerofox.com/TMSService/DeleteObject";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__DeleteObject.ns1__DeleteObject = ns1__DeleteObject;
	soap_serializeheader(soap);
	soap_serialize___ns1__DeleteObject(soap, &soap_tmp___ns1__DeleteObject);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__DeleteObject(soap, &soap_tmp___ns1__DeleteObject, "-ns1:DeleteObject", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__DeleteObject(soap, &soap_tmp___ns1__DeleteObject, "-ns1:DeleteObject", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__DeleteObjectResponse)
		return soap_closesock(soap);
	ns1__DeleteObjectResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__DeleteObjectResponse.soap_get(soap, "ns1:DeleteObjectResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int TMSServiceSoapProxy::DownloadFileById(const char *endpoint, const char *soap_action, _ns1__DownloadFileById *ns1__DownloadFileById, _ns1__DownloadFileByIdResponse &ns1__DownloadFileByIdResponse)
{	struct soap *soap = this;
	struct __ns1__DownloadFileById soap_tmp___ns1__DownloadFileById;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://localhost/TMSServ/TmsService.asmx";
	if (soap_action == NULL)
		soap_action = "http://xerofox.com/TMSService/DownloadFileById";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__DownloadFileById.ns1__DownloadFileById = ns1__DownloadFileById;
	soap_serializeheader(soap);
	soap_serialize___ns1__DownloadFileById(soap, &soap_tmp___ns1__DownloadFileById);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__DownloadFileById(soap, &soap_tmp___ns1__DownloadFileById, "-ns1:DownloadFileById", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__DownloadFileById(soap, &soap_tmp___ns1__DownloadFileById, "-ns1:DownloadFileById", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__DownloadFileByIdResponse)
		return soap_closesock(soap);
	ns1__DownloadFileByIdResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__DownloadFileByIdResponse.soap_get(soap, "ns1:DownloadFileByIdResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int TMSServiceSoapProxy::UploadFileObject(const char *endpoint, const char *soap_action, _ns1__UploadFileObject *ns1__UploadFileObject, _ns1__UploadFileObjectResponse &ns1__UploadFileObjectResponse)
{	struct soap *soap = this;
	struct __ns1__UploadFileObject soap_tmp___ns1__UploadFileObject;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://localhost/TMSServ/TmsService.asmx";
	if (soap_action == NULL)
		soap_action = "http://xerofox.com/TMSService/UploadFileObject";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__UploadFileObject.ns1__UploadFileObject = ns1__UploadFileObject;
	soap_serializeheader(soap);
	soap_serialize___ns1__UploadFileObject(soap, &soap_tmp___ns1__UploadFileObject);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__UploadFileObject(soap, &soap_tmp___ns1__UploadFileObject, "-ns1:UploadFileObject", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__UploadFileObject(soap, &soap_tmp___ns1__UploadFileObject, "-ns1:UploadFileObject", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__UploadFileObjectResponse)
		return soap_closesock(soap);
	ns1__UploadFileObjectResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__UploadFileObjectResponse.soap_get(soap, "ns1:UploadFileObjectResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int TMSServiceSoapProxy::FinalizeFileObjectData(const char *endpoint, const char *soap_action, _ns1__FinalizeFileObjectData *ns1__FinalizeFileObjectData, _ns1__FinalizeFileObjectDataResponse &ns1__FinalizeFileObjectDataResponse)
{	struct soap *soap = this;
	struct __ns1__FinalizeFileObjectData soap_tmp___ns1__FinalizeFileObjectData;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://localhost/TMSServ/TmsService.asmx";
	if (soap_action == NULL)
		soap_action = "http://xerofox.com/TMSService/FinalizeFileObjectData";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__FinalizeFileObjectData.ns1__FinalizeFileObjectData = ns1__FinalizeFileObjectData;
	soap_serializeheader(soap);
	soap_serialize___ns1__FinalizeFileObjectData(soap, &soap_tmp___ns1__FinalizeFileObjectData);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__FinalizeFileObjectData(soap, &soap_tmp___ns1__FinalizeFileObjectData, "-ns1:FinalizeFileObjectData", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__FinalizeFileObjectData(soap, &soap_tmp___ns1__FinalizeFileObjectData, "-ns1:FinalizeFileObjectData", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__FinalizeFileObjectDataResponse)
		return soap_closesock(soap);
	ns1__FinalizeFileObjectDataResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__FinalizeFileObjectDataResponse.soap_get(soap, "ns1:FinalizeFileObjectDataResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int TMSServiceSoapProxy::OpenFileObjectDataProvider(const char *endpoint, const char *soap_action, _ns1__OpenFileObjectDataProvider *ns1__OpenFileObjectDataProvider, _ns1__OpenFileObjectDataProviderResponse &ns1__OpenFileObjectDataProviderResponse)
{	struct soap *soap = this;
	struct __ns1__OpenFileObjectDataProvider soap_tmp___ns1__OpenFileObjectDataProvider;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://localhost/TMSServ/TmsService.asmx";
	if (soap_action == NULL)
		soap_action = "http://xerofox.com/TMSService/OpenFileObjectDataProvider";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__OpenFileObjectDataProvider.ns1__OpenFileObjectDataProvider = ns1__OpenFileObjectDataProvider;
	soap_serializeheader(soap);
	soap_serialize___ns1__OpenFileObjectDataProvider(soap, &soap_tmp___ns1__OpenFileObjectDataProvider);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__OpenFileObjectDataProvider(soap, &soap_tmp___ns1__OpenFileObjectDataProvider, "-ns1:OpenFileObjectDataProvider", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__OpenFileObjectDataProvider(soap, &soap_tmp___ns1__OpenFileObjectDataProvider, "-ns1:OpenFileObjectDataProvider", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__OpenFileObjectDataProviderResponse)
		return soap_closesock(soap);
	ns1__OpenFileObjectDataProviderResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__OpenFileObjectDataProviderResponse.soap_get(soap, "ns1:OpenFileObjectDataProviderResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int TMSServiceSoapProxy::OpenTapModelDataProvider(const char *endpoint, const char *soap_action, _ns1__OpenTapModelDataProvider *ns1__OpenTapModelDataProvider, _ns1__OpenTapModelDataProviderResponse &ns1__OpenTapModelDataProviderResponse)
{	struct soap *soap = this;
	struct __ns1__OpenTapModelDataProvider soap_tmp___ns1__OpenTapModelDataProvider;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://localhost/TMSServ/TmsService.asmx";
	if (soap_action == NULL)
		soap_action = "http://xerofox.com/TMSService/OpenTapModelDataProvider";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__OpenTapModelDataProvider.ns1__OpenTapModelDataProvider = ns1__OpenTapModelDataProvider;
	soap_serializeheader(soap);
	soap_serialize___ns1__OpenTapModelDataProvider(soap, &soap_tmp___ns1__OpenTapModelDataProvider);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__OpenTapModelDataProvider(soap, &soap_tmp___ns1__OpenTapModelDataProvider, "-ns1:OpenTapModelDataProvider", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__OpenTapModelDataProvider(soap, &soap_tmp___ns1__OpenTapModelDataProvider, "-ns1:OpenTapModelDataProvider", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__OpenTapModelDataProviderResponse)
		return soap_closesock(soap);
	ns1__OpenTapModelDataProviderResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__OpenTapModelDataProviderResponse.soap_get(soap, "ns1:OpenTapModelDataProviderResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int TMSServiceSoapProxy::OpenServerObjectDataProvider(const char *endpoint, const char *soap_action, _ns1__OpenServerObjectDataProvider *ns1__OpenServerObjectDataProvider, _ns1__OpenServerObjectDataProviderResponse &ns1__OpenServerObjectDataProviderResponse)
{	struct soap *soap = this;
	struct __ns1__OpenServerObjectDataProvider soap_tmp___ns1__OpenServerObjectDataProvider;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://localhost/TMSServ/TmsService.asmx";
	if (soap_action == NULL)
		soap_action = "http://xerofox.com/TMSService/OpenServerObjectDataProvider";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__OpenServerObjectDataProvider.ns1__OpenServerObjectDataProvider = ns1__OpenServerObjectDataProvider;
	soap_serializeheader(soap);
	soap_serialize___ns1__OpenServerObjectDataProvider(soap, &soap_tmp___ns1__OpenServerObjectDataProvider);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__OpenServerObjectDataProvider(soap, &soap_tmp___ns1__OpenServerObjectDataProvider, "-ns1:OpenServerObjectDataProvider", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__OpenServerObjectDataProvider(soap, &soap_tmp___ns1__OpenServerObjectDataProvider, "-ns1:OpenServerObjectDataProvider", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__OpenServerObjectDataProviderResponse)
		return soap_closesock(soap);
	ns1__OpenServerObjectDataProviderResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__OpenServerObjectDataProviderResponse.soap_get(soap, "ns1:OpenServerObjectDataProviderResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int TMSServiceSoapProxy::DownloadFileObject(const char *endpoint, const char *soap_action, _ns1__DownloadFileObject *ns1__DownloadFileObject, _ns1__DownloadFileObjectResponse &ns1__DownloadFileObjectResponse)
{	struct soap *soap = this;
	struct __ns1__DownloadFileObject soap_tmp___ns1__DownloadFileObject;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://localhost/TMSServ/TmsService.asmx";
	if (soap_action == NULL)
		soap_action = "http://xerofox.com/TMSService/DownloadFileObject";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__DownloadFileObject.ns1__DownloadFileObject = ns1__DownloadFileObject;
	soap_serializeheader(soap);
	soap_serialize___ns1__DownloadFileObject(soap, &soap_tmp___ns1__DownloadFileObject);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__DownloadFileObject(soap, &soap_tmp___ns1__DownloadFileObject, "-ns1:DownloadFileObject", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__DownloadFileObject(soap, &soap_tmp___ns1__DownloadFileObject, "-ns1:DownloadFileObject", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__DownloadFileObjectResponse)
		return soap_closesock(soap);
	ns1__DownloadFileObjectResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__DownloadFileObjectResponse.soap_get(soap, "ns1:DownloadFileObjectResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int TMSServiceSoapProxy::CloseFileObjectDataProvider(const char *endpoint, const char *soap_action, _ns1__CloseFileObjectDataProvider *ns1__CloseFileObjectDataProvider, _ns1__CloseFileObjectDataProviderResponse &ns1__CloseFileObjectDataProviderResponse)
{	struct soap *soap = this;
	struct __ns1__CloseFileObjectDataProvider soap_tmp___ns1__CloseFileObjectDataProvider;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://localhost/TMSServ/TmsService.asmx";
	if (soap_action == NULL)
		soap_action = "http://xerofox.com/TMSService/CloseFileObjectDataProvider";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__CloseFileObjectDataProvider.ns1__CloseFileObjectDataProvider = ns1__CloseFileObjectDataProvider;
	soap_serializeheader(soap);
	soap_serialize___ns1__CloseFileObjectDataProvider(soap, &soap_tmp___ns1__CloseFileObjectDataProvider);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__CloseFileObjectDataProvider(soap, &soap_tmp___ns1__CloseFileObjectDataProvider, "-ns1:CloseFileObjectDataProvider", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__CloseFileObjectDataProvider(soap, &soap_tmp___ns1__CloseFileObjectDataProvider, "-ns1:CloseFileObjectDataProvider", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__CloseFileObjectDataProviderResponse)
		return soap_closesock(soap);
	ns1__CloseFileObjectDataProviderResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__CloseFileObjectDataProviderResponse.soap_get(soap, "ns1:CloseFileObjectDataProviderResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int TMSServiceSoapProxy::loginUser_(const char *endpoint, const char *soap_action, _ns1__loginUser *ns1__loginUser, _ns1__loginUserResponse &ns1__loginUserResponse)
{	struct soap *soap = this;
	struct __ns1__loginUser_ soap_tmp___ns1__loginUser_;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://localhost/TMSServ/TmsService.asmx";
	if (soap_action == NULL)
		soap_action = "http://xerofox.com/TMSService/loginUser";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__loginUser_.ns1__loginUser = ns1__loginUser;
	soap_serializeheader(soap);
	soap_serialize___ns1__loginUser_(soap, &soap_tmp___ns1__loginUser_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__loginUser_(soap, &soap_tmp___ns1__loginUser_, "-ns1:loginUser", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__loginUser_(soap, &soap_tmp___ns1__loginUser_, "-ns1:loginUser", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__loginUserResponse)
		return soap_closesock(soap);
	ns1__loginUserResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__loginUserResponse.soap_get(soap, "ns1:loginUserResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int TMSServiceSoapProxy::loginUserByByteArr_(const char *endpoint, const char *soap_action, _ns1__loginUserByByteArr *ns1__loginUserByByteArr, _ns1__loginUserByByteArrResponse &ns1__loginUserByByteArrResponse)
{	struct soap *soap = this;
	struct __ns1__loginUserByByteArr_ soap_tmp___ns1__loginUserByByteArr_;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://localhost/TMSServ/TmsService.asmx";
	if (soap_action == NULL)
		soap_action = "http://xerofox.com/TMSService/loginUserByByteArr";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__loginUserByByteArr_.ns1__loginUserByByteArr = ns1__loginUserByByteArr;
	soap_serializeheader(soap);
	soap_serialize___ns1__loginUserByByteArr_(soap, &soap_tmp___ns1__loginUserByByteArr_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__loginUserByByteArr_(soap, &soap_tmp___ns1__loginUserByByteArr_, "-ns1:loginUserByByteArr", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__loginUserByByteArr_(soap, &soap_tmp___ns1__loginUserByByteArr_, "-ns1:loginUserByByteArr", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__loginUserByByteArrResponse)
		return soap_closesock(soap);
	ns1__loginUserByByteArrResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__loginUserByByteArrResponse.soap_get(soap, "ns1:loginUserByByteArrResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int TMSServiceSoapProxy::logoutUser_(const char *endpoint, const char *soap_action, _ns1__logoutUser *ns1__logoutUser, _ns1__logoutUserResponse &ns1__logoutUserResponse)
{	struct soap *soap = this;
	struct __ns1__logoutUser_ soap_tmp___ns1__logoutUser_;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://localhost/TMSServ/TmsService.asmx";
	if (soap_action == NULL)
		soap_action = "http://xerofox.com/TMSService/logoutUser";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__logoutUser_.ns1__logoutUser = ns1__logoutUser;
	soap_serializeheader(soap);
	soap_serialize___ns1__logoutUser_(soap, &soap_tmp___ns1__logoutUser_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__logoutUser_(soap, &soap_tmp___ns1__logoutUser_, "-ns1:logoutUser", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__logoutUser_(soap, &soap_tmp___ns1__logoutUser_, "-ns1:logoutUser", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__logoutUserResponse)
		return soap_closesock(soap);
	ns1__logoutUserResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__logoutUserResponse.soap_get(soap, "ns1:logoutUserResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int TMSServiceSoapProxy::QueryObjects_(const char *endpoint, const char *soap_action, _ns1__QueryObjects *ns1__QueryObjects, _ns1__QueryObjectsResponse &ns1__QueryObjectsResponse)
{	struct soap *soap = this;
	struct __ns1__QueryObjects_ soap_tmp___ns1__QueryObjects_;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://localhost/TMSServ/TmsService.asmx";
	if (soap_action == NULL)
		soap_action = "http://xerofox.com/TMSService/QueryObjects";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__QueryObjects_.ns1__QueryObjects = ns1__QueryObjects;
	soap_serializeheader(soap);
	soap_serialize___ns1__QueryObjects_(soap, &soap_tmp___ns1__QueryObjects_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__QueryObjects_(soap, &soap_tmp___ns1__QueryObjects_, "-ns1:QueryObjects", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__QueryObjects_(soap, &soap_tmp___ns1__QueryObjects_, "-ns1:QueryObjects", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__QueryObjectsResponse)
		return soap_closesock(soap);
	ns1__QueryObjectsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__QueryObjectsResponse.soap_get(soap, "ns1:QueryObjectsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int TMSServiceSoapProxy::DownloadObjects_(const char *endpoint, const char *soap_action, _ns1__DownloadObjects *ns1__DownloadObjects, _ns1__DownloadObjectsResponse &ns1__DownloadObjectsResponse)
{	struct soap *soap = this;
	struct __ns1__DownloadObjects_ soap_tmp___ns1__DownloadObjects_;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://localhost/TMSServ/TmsService.asmx";
	if (soap_action == NULL)
		soap_action = "http://xerofox.com/TMSService/DownloadObjects";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__DownloadObjects_.ns1__DownloadObjects = ns1__DownloadObjects;
	soap_serializeheader(soap);
	soap_serialize___ns1__DownloadObjects_(soap, &soap_tmp___ns1__DownloadObjects_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__DownloadObjects_(soap, &soap_tmp___ns1__DownloadObjects_, "-ns1:DownloadObjects", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__DownloadObjects_(soap, &soap_tmp___ns1__DownloadObjects_, "-ns1:DownloadObjects", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__DownloadObjectsResponse)
		return soap_closesock(soap);
	ns1__DownloadObjectsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__DownloadObjectsResponse.soap_get(soap, "ns1:DownloadObjectsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int TMSServiceSoapProxy::GetObjectsVersion_(const char *endpoint, const char *soap_action, _ns1__GetObjectsVersion *ns1__GetObjectsVersion, _ns1__GetObjectsVersionResponse &ns1__GetObjectsVersionResponse)
{	struct soap *soap = this;
	struct __ns1__GetObjectsVersion_ soap_tmp___ns1__GetObjectsVersion_;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://localhost/TMSServ/TmsService.asmx";
	if (soap_action == NULL)
		soap_action = "http://xerofox.com/TMSService/GetObjectsVersion";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__GetObjectsVersion_.ns1__GetObjectsVersion = ns1__GetObjectsVersion;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetObjectsVersion_(soap, &soap_tmp___ns1__GetObjectsVersion_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetObjectsVersion_(soap, &soap_tmp___ns1__GetObjectsVersion_, "-ns1:GetObjectsVersion", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetObjectsVersion_(soap, &soap_tmp___ns1__GetObjectsVersion_, "-ns1:GetObjectsVersion", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__GetObjectsVersionResponse)
		return soap_closesock(soap);
	ns1__GetObjectsVersionResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetObjectsVersionResponse.soap_get(soap, "ns1:GetObjectsVersionResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int TMSServiceSoapProxy::GetTowerPartsLabelAndVersionSerial_(const char *endpoint, const char *soap_action, _ns1__GetTowerPartsLabelAndVersionSerial *ns1__GetTowerPartsLabelAndVersionSerial, _ns1__GetTowerPartsLabelAndVersionSerialResponse &ns1__GetTowerPartsLabelAndVersionSerialResponse)
{	struct soap *soap = this;
	struct __ns1__GetTowerPartsLabelAndVersionSerial_ soap_tmp___ns1__GetTowerPartsLabelAndVersionSerial_;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://localhost/TMSServ/TmsService.asmx";
	if (soap_action == NULL)
		soap_action = "http://xerofox.com/TMSService/GetTowerPartsLabelAndVersionSerial";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__GetTowerPartsLabelAndVersionSerial_.ns1__GetTowerPartsLabelAndVersionSerial = ns1__GetTowerPartsLabelAndVersionSerial;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetTowerPartsLabelAndVersionSerial_(soap, &soap_tmp___ns1__GetTowerPartsLabelAndVersionSerial_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetTowerPartsLabelAndVersionSerial_(soap, &soap_tmp___ns1__GetTowerPartsLabelAndVersionSerial_, "-ns1:GetTowerPartsLabelAndVersionSerial", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetTowerPartsLabelAndVersionSerial_(soap, &soap_tmp___ns1__GetTowerPartsLabelAndVersionSerial_, "-ns1:GetTowerPartsLabelAndVersionSerial", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__GetTowerPartsLabelAndVersionSerialResponse)
		return soap_closesock(soap);
	ns1__GetTowerPartsLabelAndVersionSerialResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetTowerPartsLabelAndVersionSerialResponse.soap_get(soap, "ns1:GetTowerPartsLabelAndVersionSerialResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int TMSServiceSoapProxy::MatchTowerParts_(const char *endpoint, const char *soap_action, _ns1__MatchTowerParts *ns1__MatchTowerParts, _ns1__MatchTowerPartsResponse &ns1__MatchTowerPartsResponse)
{	struct soap *soap = this;
	struct __ns1__MatchTowerParts_ soap_tmp___ns1__MatchTowerParts_;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://localhost/TMSServ/TmsService.asmx";
	if (soap_action == NULL)
		soap_action = "http://xerofox.com/TMSService/MatchTowerParts";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__MatchTowerParts_.ns1__MatchTowerParts = ns1__MatchTowerParts;
	soap_serializeheader(soap);
	soap_serialize___ns1__MatchTowerParts_(soap, &soap_tmp___ns1__MatchTowerParts_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__MatchTowerParts_(soap, &soap_tmp___ns1__MatchTowerParts_, "-ns1:MatchTowerParts", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__MatchTowerParts_(soap, &soap_tmp___ns1__MatchTowerParts_, "-ns1:MatchTowerParts", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__MatchTowerPartsResponse)
		return soap_closesock(soap);
	ns1__MatchTowerPartsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__MatchTowerPartsResponse.soap_get(soap, "ns1:MatchTowerPartsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int TMSServiceSoapProxy::SaveOrUpdateObjects_(const char *endpoint, const char *soap_action, _ns1__SaveOrUpdateObjects *ns1__SaveOrUpdateObjects, _ns1__SaveOrUpdateObjectsResponse &ns1__SaveOrUpdateObjectsResponse)
{	struct soap *soap = this;
	struct __ns1__SaveOrUpdateObjects_ soap_tmp___ns1__SaveOrUpdateObjects_;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://localhost/TMSServ/TmsService.asmx";
	if (soap_action == NULL)
		soap_action = "http://xerofox.com/TMSService/SaveOrUpdateObjects";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__SaveOrUpdateObjects_.ns1__SaveOrUpdateObjects = ns1__SaveOrUpdateObjects;
	soap_serializeheader(soap);
	soap_serialize___ns1__SaveOrUpdateObjects_(soap, &soap_tmp___ns1__SaveOrUpdateObjects_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__SaveOrUpdateObjects_(soap, &soap_tmp___ns1__SaveOrUpdateObjects_, "-ns1:SaveOrUpdateObjects", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__SaveOrUpdateObjects_(soap, &soap_tmp___ns1__SaveOrUpdateObjects_, "-ns1:SaveOrUpdateObjects", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__SaveOrUpdateObjectsResponse)
		return soap_closesock(soap);
	ns1__SaveOrUpdateObjectsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__SaveOrUpdateObjectsResponse.soap_get(soap, "ns1:SaveOrUpdateObjectsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int TMSServiceSoapProxy::DeleteObject_(const char *endpoint, const char *soap_action, _ns1__DeleteObject *ns1__DeleteObject, _ns1__DeleteObjectResponse &ns1__DeleteObjectResponse)
{	struct soap *soap = this;
	struct __ns1__DeleteObject_ soap_tmp___ns1__DeleteObject_;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://localhost/TMSServ/TmsService.asmx";
	if (soap_action == NULL)
		soap_action = "http://xerofox.com/TMSService/DeleteObject";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__DeleteObject_.ns1__DeleteObject = ns1__DeleteObject;
	soap_serializeheader(soap);
	soap_serialize___ns1__DeleteObject_(soap, &soap_tmp___ns1__DeleteObject_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__DeleteObject_(soap, &soap_tmp___ns1__DeleteObject_, "-ns1:DeleteObject", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__DeleteObject_(soap, &soap_tmp___ns1__DeleteObject_, "-ns1:DeleteObject", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__DeleteObjectResponse)
		return soap_closesock(soap);
	ns1__DeleteObjectResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__DeleteObjectResponse.soap_get(soap, "ns1:DeleteObjectResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int TMSServiceSoapProxy::DownloadFileById_(const char *endpoint, const char *soap_action, _ns1__DownloadFileById *ns1__DownloadFileById, _ns1__DownloadFileByIdResponse &ns1__DownloadFileByIdResponse)
{	struct soap *soap = this;
	struct __ns1__DownloadFileById_ soap_tmp___ns1__DownloadFileById_;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://localhost/TMSServ/TmsService.asmx";
	if (soap_action == NULL)
		soap_action = "http://xerofox.com/TMSService/DownloadFileById";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__DownloadFileById_.ns1__DownloadFileById = ns1__DownloadFileById;
	soap_serializeheader(soap);
	soap_serialize___ns1__DownloadFileById_(soap, &soap_tmp___ns1__DownloadFileById_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__DownloadFileById_(soap, &soap_tmp___ns1__DownloadFileById_, "-ns1:DownloadFileById", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__DownloadFileById_(soap, &soap_tmp___ns1__DownloadFileById_, "-ns1:DownloadFileById", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__DownloadFileByIdResponse)
		return soap_closesock(soap);
	ns1__DownloadFileByIdResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__DownloadFileByIdResponse.soap_get(soap, "ns1:DownloadFileByIdResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int TMSServiceSoapProxy::UploadFileObject_(const char *endpoint, const char *soap_action, _ns1__UploadFileObject *ns1__UploadFileObject, _ns1__UploadFileObjectResponse &ns1__UploadFileObjectResponse)
{	struct soap *soap = this;
	struct __ns1__UploadFileObject_ soap_tmp___ns1__UploadFileObject_;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://localhost/TMSServ/TmsService.asmx";
	if (soap_action == NULL)
		soap_action = "http://xerofox.com/TMSService/UploadFileObject";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__UploadFileObject_.ns1__UploadFileObject = ns1__UploadFileObject;
	soap_serializeheader(soap);
	soap_serialize___ns1__UploadFileObject_(soap, &soap_tmp___ns1__UploadFileObject_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__UploadFileObject_(soap, &soap_tmp___ns1__UploadFileObject_, "-ns1:UploadFileObject", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__UploadFileObject_(soap, &soap_tmp___ns1__UploadFileObject_, "-ns1:UploadFileObject", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__UploadFileObjectResponse)
		return soap_closesock(soap);
	ns1__UploadFileObjectResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__UploadFileObjectResponse.soap_get(soap, "ns1:UploadFileObjectResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int TMSServiceSoapProxy::FinalizeFileObjectData_(const char *endpoint, const char *soap_action, _ns1__FinalizeFileObjectData *ns1__FinalizeFileObjectData, _ns1__FinalizeFileObjectDataResponse &ns1__FinalizeFileObjectDataResponse)
{	struct soap *soap = this;
	struct __ns1__FinalizeFileObjectData_ soap_tmp___ns1__FinalizeFileObjectData_;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://localhost/TMSServ/TmsService.asmx";
	if (soap_action == NULL)
		soap_action = "http://xerofox.com/TMSService/FinalizeFileObjectData";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__FinalizeFileObjectData_.ns1__FinalizeFileObjectData = ns1__FinalizeFileObjectData;
	soap_serializeheader(soap);
	soap_serialize___ns1__FinalizeFileObjectData_(soap, &soap_tmp___ns1__FinalizeFileObjectData_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__FinalizeFileObjectData_(soap, &soap_tmp___ns1__FinalizeFileObjectData_, "-ns1:FinalizeFileObjectData", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__FinalizeFileObjectData_(soap, &soap_tmp___ns1__FinalizeFileObjectData_, "-ns1:FinalizeFileObjectData", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__FinalizeFileObjectDataResponse)
		return soap_closesock(soap);
	ns1__FinalizeFileObjectDataResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__FinalizeFileObjectDataResponse.soap_get(soap, "ns1:FinalizeFileObjectDataResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int TMSServiceSoapProxy::OpenFileObjectDataProvider_(const char *endpoint, const char *soap_action, _ns1__OpenFileObjectDataProvider *ns1__OpenFileObjectDataProvider, _ns1__OpenFileObjectDataProviderResponse &ns1__OpenFileObjectDataProviderResponse)
{	struct soap *soap = this;
	struct __ns1__OpenFileObjectDataProvider_ soap_tmp___ns1__OpenFileObjectDataProvider_;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://localhost/TMSServ/TmsService.asmx";
	if (soap_action == NULL)
		soap_action = "http://xerofox.com/TMSService/OpenFileObjectDataProvider";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__OpenFileObjectDataProvider_.ns1__OpenFileObjectDataProvider = ns1__OpenFileObjectDataProvider;
	soap_serializeheader(soap);
	soap_serialize___ns1__OpenFileObjectDataProvider_(soap, &soap_tmp___ns1__OpenFileObjectDataProvider_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__OpenFileObjectDataProvider_(soap, &soap_tmp___ns1__OpenFileObjectDataProvider_, "-ns1:OpenFileObjectDataProvider", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__OpenFileObjectDataProvider_(soap, &soap_tmp___ns1__OpenFileObjectDataProvider_, "-ns1:OpenFileObjectDataProvider", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__OpenFileObjectDataProviderResponse)
		return soap_closesock(soap);
	ns1__OpenFileObjectDataProviderResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__OpenFileObjectDataProviderResponse.soap_get(soap, "ns1:OpenFileObjectDataProviderResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int TMSServiceSoapProxy::OpenTapModelDataProvider_(const char *endpoint, const char *soap_action, _ns1__OpenTapModelDataProvider *ns1__OpenTapModelDataProvider, _ns1__OpenTapModelDataProviderResponse &ns1__OpenTapModelDataProviderResponse)
{	struct soap *soap = this;
	struct __ns1__OpenTapModelDataProvider_ soap_tmp___ns1__OpenTapModelDataProvider_;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://localhost/TMSServ/TmsService.asmx";
	if (soap_action == NULL)
		soap_action = "http://xerofox.com/TMSService/OpenTapModelDataProvider";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__OpenTapModelDataProvider_.ns1__OpenTapModelDataProvider = ns1__OpenTapModelDataProvider;
	soap_serializeheader(soap);
	soap_serialize___ns1__OpenTapModelDataProvider_(soap, &soap_tmp___ns1__OpenTapModelDataProvider_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__OpenTapModelDataProvider_(soap, &soap_tmp___ns1__OpenTapModelDataProvider_, "-ns1:OpenTapModelDataProvider", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__OpenTapModelDataProvider_(soap, &soap_tmp___ns1__OpenTapModelDataProvider_, "-ns1:OpenTapModelDataProvider", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__OpenTapModelDataProviderResponse)
		return soap_closesock(soap);
	ns1__OpenTapModelDataProviderResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__OpenTapModelDataProviderResponse.soap_get(soap, "ns1:OpenTapModelDataProviderResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int TMSServiceSoapProxy::OpenServerObjectDataProvider_(const char *endpoint, const char *soap_action, _ns1__OpenServerObjectDataProvider *ns1__OpenServerObjectDataProvider, _ns1__OpenServerObjectDataProviderResponse &ns1__OpenServerObjectDataProviderResponse)
{	struct soap *soap = this;
	struct __ns1__OpenServerObjectDataProvider_ soap_tmp___ns1__OpenServerObjectDataProvider_;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://localhost/TMSServ/TmsService.asmx";
	if (soap_action == NULL)
		soap_action = "http://xerofox.com/TMSService/OpenServerObjectDataProvider";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__OpenServerObjectDataProvider_.ns1__OpenServerObjectDataProvider = ns1__OpenServerObjectDataProvider;
	soap_serializeheader(soap);
	soap_serialize___ns1__OpenServerObjectDataProvider_(soap, &soap_tmp___ns1__OpenServerObjectDataProvider_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__OpenServerObjectDataProvider_(soap, &soap_tmp___ns1__OpenServerObjectDataProvider_, "-ns1:OpenServerObjectDataProvider", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__OpenServerObjectDataProvider_(soap, &soap_tmp___ns1__OpenServerObjectDataProvider_, "-ns1:OpenServerObjectDataProvider", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__OpenServerObjectDataProviderResponse)
		return soap_closesock(soap);
	ns1__OpenServerObjectDataProviderResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__OpenServerObjectDataProviderResponse.soap_get(soap, "ns1:OpenServerObjectDataProviderResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int TMSServiceSoapProxy::DownloadFileObject_(const char *endpoint, const char *soap_action, _ns1__DownloadFileObject *ns1__DownloadFileObject, _ns1__DownloadFileObjectResponse &ns1__DownloadFileObjectResponse)
{	struct soap *soap = this;
	struct __ns1__DownloadFileObject_ soap_tmp___ns1__DownloadFileObject_;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://localhost/TMSServ/TmsService.asmx";
	if (soap_action == NULL)
		soap_action = "http://xerofox.com/TMSService/DownloadFileObject";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__DownloadFileObject_.ns1__DownloadFileObject = ns1__DownloadFileObject;
	soap_serializeheader(soap);
	soap_serialize___ns1__DownloadFileObject_(soap, &soap_tmp___ns1__DownloadFileObject_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__DownloadFileObject_(soap, &soap_tmp___ns1__DownloadFileObject_, "-ns1:DownloadFileObject", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__DownloadFileObject_(soap, &soap_tmp___ns1__DownloadFileObject_, "-ns1:DownloadFileObject", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__DownloadFileObjectResponse)
		return soap_closesock(soap);
	ns1__DownloadFileObjectResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__DownloadFileObjectResponse.soap_get(soap, "ns1:DownloadFileObjectResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int TMSServiceSoapProxy::CloseFileObjectDataProvider_(const char *endpoint, const char *soap_action, _ns1__CloseFileObjectDataProvider *ns1__CloseFileObjectDataProvider, _ns1__CloseFileObjectDataProviderResponse &ns1__CloseFileObjectDataProviderResponse)
{	struct soap *soap = this;
	struct __ns1__CloseFileObjectDataProvider_ soap_tmp___ns1__CloseFileObjectDataProvider_;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://localhost/TMSServ/TmsService.asmx";
	if (soap_action == NULL)
		soap_action = "http://xerofox.com/TMSService/CloseFileObjectDataProvider";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__CloseFileObjectDataProvider_.ns1__CloseFileObjectDataProvider = ns1__CloseFileObjectDataProvider;
	soap_serializeheader(soap);
	soap_serialize___ns1__CloseFileObjectDataProvider_(soap, &soap_tmp___ns1__CloseFileObjectDataProvider_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__CloseFileObjectDataProvider_(soap, &soap_tmp___ns1__CloseFileObjectDataProvider_, "-ns1:CloseFileObjectDataProvider", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__CloseFileObjectDataProvider_(soap, &soap_tmp___ns1__CloseFileObjectDataProvider_, "-ns1:CloseFileObjectDataProvider", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__CloseFileObjectDataProviderResponse)
		return soap_closesock(soap);
	ns1__CloseFileObjectDataProviderResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__CloseFileObjectDataProviderResponse.soap_get(soap, "ns1:CloseFileObjectDataProviderResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
/* End of client proxy code */
