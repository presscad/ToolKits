/* soapH.h
   Generated by gSOAP 2.8.19 from D:\Structure\VersionServTemp\VerServer.h

Copyright(C) 2000-2014, Robert van Engelen, Genivia Inc. All Rights Reserved.
The generated code is released under one of the following licenses:
GPL or Genivia's license for commercial use.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
*/

#ifndef soapH_H
#define soapH_H
#include "soapStub.h"
#ifndef WITH_NOIDREF

#ifdef __cplusplus
extern "C" {
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_markelement(struct soap*, const void*, int);

#ifdef __cplusplus
}
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_putindependent(struct soap*);
SOAP_FMAC3 int SOAP_FMAC4 soap_getindependent(struct soap*);
#endif

#ifdef __cplusplus
extern "C" {
#endif
SOAP_FMAC3 void *SOAP_FMAC4 soap_getelement(struct soap*, int*);
SOAP_FMAC3 int SOAP_FMAC4 soap_putelement(struct soap*, const void*, const char*, int, int);

#ifdef __cplusplus
}
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_ignore_element(struct soap*);

SOAP_FMAC3 const char ** SOAP_FMAC4 soap_faultcode(struct soap *soap);

SOAP_FMAC3 void * SOAP_FMAC4 soap_instantiate(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 int SOAP_FMAC4 soap_fdelete(struct soap_clist*);
SOAP_FMAC3 void* SOAP_FMAC4 soap_class_id_enter(struct soap*, const char*, void*, int, size_t, const char*, const char*);

#ifndef SOAP_TYPE_xsd__byte
#define SOAP_TYPE_xsd__byte (12)
#endif

#define soap_default_xsd__byte(soap, a) soap_default_byte(soap, a)

SOAP_FMAC3 int SOAP_FMAC4 soap_out_xsd__byte(struct soap*, const char*, int, const char *, const char*);
SOAP_FMAC3 char * SOAP_FMAC4 soap_in_xsd__byte(struct soap*, const char*, char *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_xsd__byte(struct soap*, const char *, const char*, const char*);

#ifndef soap_write_xsd__byte
#define soap_write_xsd__byte(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_xsd__byte(soap, data),0) || soap_put_xsd__byte(soap, data, "xsd:byte", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 char * SOAP_FMAC4 soap_get_xsd__byte(struct soap*, char *, const char*, const char*);

#ifndef soap_read_xsd__byte
#define soap_read_xsd__byte(soap, data) ( soap_begin_recv(soap) || !soap_get_xsd__byte(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_byte
#define SOAP_TYPE_byte (3)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_byte(struct soap*, char *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_byte(struct soap*, const char*, int, const char *, const char*);
SOAP_FMAC3 char * SOAP_FMAC4 soap_in_byte(struct soap*, const char*, char *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_byte(struct soap*, const char *, const char*, const char*);

#ifndef soap_write_byte
#define soap_write_byte(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_byte(soap, data),0) || soap_put_byte(soap, data, "byte", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 char * SOAP_FMAC4 soap_get_byte(struct soap*, char *, const char*, const char*);

#ifndef soap_read_byte
#define soap_read_byte(soap, data) ( soap_begin_recv(soap) || !soap_get_byte(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_int
#define SOAP_TYPE_int (1)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_int(struct soap*, int *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_int(struct soap*, const char*, int, const int *, const char*);
SOAP_FMAC3 int * SOAP_FMAC4 soap_in_int(struct soap*, const char*, int *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_int(struct soap*, const int *, const char*, const char*);

#ifndef soap_write_int
#define soap_write_int(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_int(soap, data),0) || soap_put_int(soap, data, "int", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 int * SOAP_FMAC4 soap_get_int(struct soap*, int *, const char*, const char*);

#ifndef soap_read_int
#define soap_read_int(soap, data) ( soap_begin_recv(soap) || !soap_get_int(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_xsd__unsignedByte
#define SOAP_TYPE_xsd__unsignedByte (13)
#endif

#define soap_default_xsd__unsignedByte(soap, a) soap_default_unsignedByte(soap, a)

SOAP_FMAC3 int SOAP_FMAC4 soap_out_xsd__unsignedByte(struct soap*, const char*, int, const unsigned char *, const char*);
SOAP_FMAC3 unsigned char * SOAP_FMAC4 soap_in_xsd__unsignedByte(struct soap*, const char*, unsigned char *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_xsd__unsignedByte(struct soap*, const unsigned char *, const char*, const char*);

#ifndef soap_write_xsd__unsignedByte
#define soap_write_xsd__unsignedByte(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_xsd__unsignedByte(soap, data),0) || soap_put_xsd__unsignedByte(soap, data, "xsd:unsignedByte", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 unsigned char * SOAP_FMAC4 soap_get_xsd__unsignedByte(struct soap*, unsigned char *, const char*, const char*);

#ifndef soap_read_xsd__unsignedByte
#define soap_read_xsd__unsignedByte(soap, data) ( soap_begin_recv(soap) || !soap_get_xsd__unsignedByte(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_unsignedByte
#define SOAP_TYPE_unsignedByte (9)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_unsignedByte(struct soap*, unsigned char *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_unsignedByte(struct soap*, const char*, int, const unsigned char *, const char*);
SOAP_FMAC3 unsigned char * SOAP_FMAC4 soap_in_unsignedByte(struct soap*, const char*, unsigned char *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_unsignedByte(struct soap*, const unsigned char *, const char*, const char*);

#ifndef soap_write_unsignedByte
#define soap_write_unsignedByte(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_unsignedByte(soap, data),0) || soap_put_unsignedByte(soap, data, "unsignedByte", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 unsigned char * SOAP_FMAC4 soap_get_unsignedByte(struct soap*, unsigned char *, const char*, const char*);

#ifndef soap_read_unsignedByte
#define soap_read_unsignedByte(soap, data) ( soap_begin_recv(soap) || !soap_get_unsignedByte(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_unsignedInt
#define SOAP_TYPE_unsignedInt (8)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_unsignedInt(struct soap*, unsigned int *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_unsignedInt(struct soap*, const char*, int, const unsigned int *, const char*);
SOAP_FMAC3 unsigned int * SOAP_FMAC4 soap_in_unsignedInt(struct soap*, const char*, unsigned int *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_unsignedInt(struct soap*, const unsigned int *, const char*, const char*);

#ifndef soap_write_unsignedInt
#define soap_write_unsignedInt(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_unsignedInt(soap, data),0) || soap_put_unsignedInt(soap, data, "unsignedInt", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 unsigned int * SOAP_FMAC4 soap_get_unsignedInt(struct soap*, unsigned int *, const char*, const char*);

#ifndef soap_read_unsignedInt
#define soap_read_unsignedInt(soap, data) ( soap_begin_recv(soap) || !soap_get_unsignedInt(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_time
#define SOAP_TYPE_time (50)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_time(struct soap*, time_t *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_time(struct soap*, const char*, int, const time_t *, const char*);
SOAP_FMAC3 time_t * SOAP_FMAC4 soap_in_time(struct soap*, const char*, time_t *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_time(struct soap*, const time_t *, const char*, const char*);

#ifndef soap_write_time
#define soap_write_time(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_time(soap, data),0) || soap_put_time(soap, data, "dateTime", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 time_t * SOAP_FMAC4 soap_get_time(struct soap*, time_t *, const char*, const char*);

#ifndef soap_read_time
#define soap_read_time(soap, data) ( soap_begin_recv(soap) || !soap_get_time(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_bool
#define SOAP_TYPE_bool (54)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_bool(struct soap*, bool *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_bool(struct soap*, const char*, int, const bool *, const char*);

SOAP_FMAC3S const char* SOAP_FMAC4S soap_bool2s(struct soap*, bool);
SOAP_FMAC3 bool * SOAP_FMAC4 soap_in_bool(struct soap*, const char*, bool *, const char*);

SOAP_FMAC3S int SOAP_FMAC4S soap_s2bool(struct soap*, const char*, bool *);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_bool(struct soap*, const bool *, const char*, const char*);

#ifndef soap_write_bool
#define soap_write_bool(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_bool(soap, data),0) || soap_put_bool(soap, data, "boolean", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 bool * SOAP_FMAC4 soap_get_bool(struct soap*, bool *, const char*, const char*);

#ifndef soap_read_bool
#define soap_read_bool(soap, data) ( soap_begin_recv(soap) || !soap_get_bool(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__ns1__SaveOrUpdateObjectsResponse
#define SOAP_TYPE__ns1__SaveOrUpdateObjectsResponse (47)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__SaveOrUpdateObjectsResponse(struct soap*, const char*, int, const _ns1__SaveOrUpdateObjectsResponse *, const char*);
SOAP_FMAC3 _ns1__SaveOrUpdateObjectsResponse * SOAP_FMAC4 soap_in__ns1__SaveOrUpdateObjectsResponse(struct soap*, const char*, _ns1__SaveOrUpdateObjectsResponse *, const char*);

#ifndef soap_write__ns1__SaveOrUpdateObjectsResponse
#define soap_write__ns1__SaveOrUpdateObjectsResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:SaveOrUpdateObjectsResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__SaveOrUpdateObjectsResponse * SOAP_FMAC4 soap_get__ns1__SaveOrUpdateObjectsResponse(struct soap*, _ns1__SaveOrUpdateObjectsResponse *, const char*, const char*);

#ifndef soap_read__ns1__SaveOrUpdateObjectsResponse
#define soap_read__ns1__SaveOrUpdateObjectsResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__SaveOrUpdateObjectsResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _ns1__SaveOrUpdateObjectsResponse * SOAP_FMAC2 soap_instantiate__ns1__SaveOrUpdateObjectsResponse(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__SaveOrUpdateObjectsResponse * soap_new__ns1__SaveOrUpdateObjectsResponse(struct soap *soap, int n = -1) { return soap_instantiate__ns1__SaveOrUpdateObjectsResponse(soap, n, NULL, NULL, NULL); }

inline _ns1__SaveOrUpdateObjectsResponse * soap_new_req__ns1__SaveOrUpdateObjectsResponse(struct soap *soap) { _ns1__SaveOrUpdateObjectsResponse *_p = soap_instantiate__ns1__SaveOrUpdateObjectsResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _ns1__SaveOrUpdateObjectsResponse * soap_new_set__ns1__SaveOrUpdateObjectsResponse(struct soap *soap, char *SaveOrUpdateObjectsResult) { _ns1__SaveOrUpdateObjectsResponse *_p = soap_instantiate__ns1__SaveOrUpdateObjectsResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1__SaveOrUpdateObjectsResponse::SaveOrUpdateObjectsResult = SaveOrUpdateObjectsResult; } return _p; }

inline void soap_delete__ns1__SaveOrUpdateObjectsResponse(struct soap *soap, _ns1__SaveOrUpdateObjectsResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__SaveOrUpdateObjectsResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1__SaveOrUpdateObjects
#define SOAP_TYPE__ns1__SaveOrUpdateObjects (46)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__SaveOrUpdateObjects(struct soap*, const char*, int, const _ns1__SaveOrUpdateObjects *, const char*);
SOAP_FMAC3 _ns1__SaveOrUpdateObjects * SOAP_FMAC4 soap_in__ns1__SaveOrUpdateObjects(struct soap*, const char*, _ns1__SaveOrUpdateObjects *, const char*);

#ifndef soap_write__ns1__SaveOrUpdateObjects
#define soap_write__ns1__SaveOrUpdateObjects(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:SaveOrUpdateObjects", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__SaveOrUpdateObjects * SOAP_FMAC4 soap_get__ns1__SaveOrUpdateObjects(struct soap*, _ns1__SaveOrUpdateObjects *, const char*, const char*);

#ifndef soap_read__ns1__SaveOrUpdateObjects
#define soap_read__ns1__SaveOrUpdateObjects(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__SaveOrUpdateObjects(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _ns1__SaveOrUpdateObjects * SOAP_FMAC2 soap_instantiate__ns1__SaveOrUpdateObjects(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__SaveOrUpdateObjects * soap_new__ns1__SaveOrUpdateObjects(struct soap *soap, int n = -1) { return soap_instantiate__ns1__SaveOrUpdateObjects(soap, n, NULL, NULL, NULL); }

inline _ns1__SaveOrUpdateObjects * soap_new_req__ns1__SaveOrUpdateObjects(struct soap *soap, int sessionId) { _ns1__SaveOrUpdateObjects *_p = soap_instantiate__ns1__SaveOrUpdateObjects(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1__SaveOrUpdateObjects::sessionId = sessionId; } return _p; }

inline _ns1__SaveOrUpdateObjects * soap_new_set__ns1__SaveOrUpdateObjects(struct soap *soap, int sessionId, char *clsName, char *xmlformat, xsd__base64Binary *byteArr) { _ns1__SaveOrUpdateObjects *_p = soap_instantiate__ns1__SaveOrUpdateObjects(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1__SaveOrUpdateObjects::sessionId = sessionId; _p->_ns1__SaveOrUpdateObjects::clsName = clsName; _p->_ns1__SaveOrUpdateObjects::xmlformat = xmlformat; _p->_ns1__SaveOrUpdateObjects::byteArr = byteArr; } return _p; }

inline void soap_delete__ns1__SaveOrUpdateObjects(struct soap *soap, _ns1__SaveOrUpdateObjects *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__SaveOrUpdateObjects(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1__DownloadObjectsResponse
#define SOAP_TYPE__ns1__DownloadObjectsResponse (45)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__DownloadObjectsResponse(struct soap*, const char*, int, const _ns1__DownloadObjectsResponse *, const char*);
SOAP_FMAC3 _ns1__DownloadObjectsResponse * SOAP_FMAC4 soap_in__ns1__DownloadObjectsResponse(struct soap*, const char*, _ns1__DownloadObjectsResponse *, const char*);

#ifndef soap_write__ns1__DownloadObjectsResponse
#define soap_write__ns1__DownloadObjectsResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:DownloadObjectsResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__DownloadObjectsResponse * SOAP_FMAC4 soap_get__ns1__DownloadObjectsResponse(struct soap*, _ns1__DownloadObjectsResponse *, const char*, const char*);

#ifndef soap_read__ns1__DownloadObjectsResponse
#define soap_read__ns1__DownloadObjectsResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__DownloadObjectsResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _ns1__DownloadObjectsResponse * SOAP_FMAC2 soap_instantiate__ns1__DownloadObjectsResponse(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__DownloadObjectsResponse * soap_new__ns1__DownloadObjectsResponse(struct soap *soap, int n = -1) { return soap_instantiate__ns1__DownloadObjectsResponse(soap, n, NULL, NULL, NULL); }

inline _ns1__DownloadObjectsResponse * soap_new_req__ns1__DownloadObjectsResponse(struct soap *soap) { _ns1__DownloadObjectsResponse *_p = soap_instantiate__ns1__DownloadObjectsResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _ns1__DownloadObjectsResponse * soap_new_set__ns1__DownloadObjectsResponse(struct soap *soap, xsd__base64Binary *DownloadObjectsResult) { _ns1__DownloadObjectsResponse *_p = soap_instantiate__ns1__DownloadObjectsResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1__DownloadObjectsResponse::DownloadObjectsResult = DownloadObjectsResult; } return _p; }

inline void soap_delete__ns1__DownloadObjectsResponse(struct soap *soap, _ns1__DownloadObjectsResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__DownloadObjectsResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1__DownloadObjects
#define SOAP_TYPE__ns1__DownloadObjects (44)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__DownloadObjects(struct soap*, const char*, int, const _ns1__DownloadObjects *, const char*);
SOAP_FMAC3 _ns1__DownloadObjects * SOAP_FMAC4 soap_in__ns1__DownloadObjects(struct soap*, const char*, _ns1__DownloadObjects *, const char*);

#ifndef soap_write__ns1__DownloadObjects
#define soap_write__ns1__DownloadObjects(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:DownloadObjects", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__DownloadObjects * SOAP_FMAC4 soap_get__ns1__DownloadObjects(struct soap*, _ns1__DownloadObjects *, const char*, const char*);

#ifndef soap_read__ns1__DownloadObjects
#define soap_read__ns1__DownloadObjects(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__DownloadObjects(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _ns1__DownloadObjects * SOAP_FMAC2 soap_instantiate__ns1__DownloadObjects(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__DownloadObjects * soap_new__ns1__DownloadObjects(struct soap *soap, int n = -1) { return soap_instantiate__ns1__DownloadObjects(soap, n, NULL, NULL, NULL); }

inline _ns1__DownloadObjects * soap_new_req__ns1__DownloadObjects(struct soap *soap, int sessionId, unsigned int serialize) { _ns1__DownloadObjects *_p = soap_instantiate__ns1__DownloadObjects(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1__DownloadObjects::sessionId = sessionId; _p->_ns1__DownloadObjects::serialize = serialize; } return _p; }

inline _ns1__DownloadObjects * soap_new_set__ns1__DownloadObjects(struct soap *soap, int sessionId, char *clsName, ns1__ArrayOfInt *idarr, unsigned int serialize) { _ns1__DownloadObjects *_p = soap_instantiate__ns1__DownloadObjects(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1__DownloadObjects::sessionId = sessionId; _p->_ns1__DownloadObjects::clsName = clsName; _p->_ns1__DownloadObjects::idarr = idarr; _p->_ns1__DownloadObjects::serialize = serialize; } return _p; }

inline void soap_delete__ns1__DownloadObjects(struct soap *soap, _ns1__DownloadObjects *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__DownloadObjects(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1__QueryObjectsResponse
#define SOAP_TYPE__ns1__QueryObjectsResponse (43)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__QueryObjectsResponse(struct soap*, const char*, int, const _ns1__QueryObjectsResponse *, const char*);
SOAP_FMAC3 _ns1__QueryObjectsResponse * SOAP_FMAC4 soap_in__ns1__QueryObjectsResponse(struct soap*, const char*, _ns1__QueryObjectsResponse *, const char*);

#ifndef soap_write__ns1__QueryObjectsResponse
#define soap_write__ns1__QueryObjectsResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:QueryObjectsResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__QueryObjectsResponse * SOAP_FMAC4 soap_get__ns1__QueryObjectsResponse(struct soap*, _ns1__QueryObjectsResponse *, const char*, const char*);

#ifndef soap_read__ns1__QueryObjectsResponse
#define soap_read__ns1__QueryObjectsResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__QueryObjectsResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _ns1__QueryObjectsResponse * SOAP_FMAC2 soap_instantiate__ns1__QueryObjectsResponse(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__QueryObjectsResponse * soap_new__ns1__QueryObjectsResponse(struct soap *soap, int n = -1) { return soap_instantiate__ns1__QueryObjectsResponse(soap, n, NULL, NULL, NULL); }

inline _ns1__QueryObjectsResponse * soap_new_req__ns1__QueryObjectsResponse(struct soap *soap) { _ns1__QueryObjectsResponse *_p = soap_instantiate__ns1__QueryObjectsResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _ns1__QueryObjectsResponse * soap_new_set__ns1__QueryObjectsResponse(struct soap *soap, xsd__base64Binary *QueryObjectsResult) { _ns1__QueryObjectsResponse *_p = soap_instantiate__ns1__QueryObjectsResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1__QueryObjectsResponse::QueryObjectsResult = QueryObjectsResult; } return _p; }

inline void soap_delete__ns1__QueryObjectsResponse(struct soap *soap, _ns1__QueryObjectsResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__QueryObjectsResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1__QueryObjects
#define SOAP_TYPE__ns1__QueryObjects (42)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__QueryObjects(struct soap*, const char*, int, const _ns1__QueryObjects *, const char*);
SOAP_FMAC3 _ns1__QueryObjects * SOAP_FMAC4 soap_in__ns1__QueryObjects(struct soap*, const char*, _ns1__QueryObjects *, const char*);

#ifndef soap_write__ns1__QueryObjects
#define soap_write__ns1__QueryObjects(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:QueryObjects", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__QueryObjects * SOAP_FMAC4 soap_get__ns1__QueryObjects(struct soap*, _ns1__QueryObjects *, const char*, const char*);

#ifndef soap_read__ns1__QueryObjects
#define soap_read__ns1__QueryObjects(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__QueryObjects(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _ns1__QueryObjects * SOAP_FMAC2 soap_instantiate__ns1__QueryObjects(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__QueryObjects * soap_new__ns1__QueryObjects(struct soap *soap, int n = -1) { return soap_instantiate__ns1__QueryObjects(soap, n, NULL, NULL, NULL); }

inline _ns1__QueryObjects * soap_new_req__ns1__QueryObjects(struct soap *soap, int sessionId) { _ns1__QueryObjects *_p = soap_instantiate__ns1__QueryObjects(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1__QueryObjects::sessionId = sessionId; } return _p; }

inline _ns1__QueryObjects * soap_new_set__ns1__QueryObjects(struct soap *soap, int sessionId, char *clsName, char *xmlScope) { _ns1__QueryObjects *_p = soap_instantiate__ns1__QueryObjects(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1__QueryObjects::sessionId = sessionId; _p->_ns1__QueryObjects::clsName = clsName; _p->_ns1__QueryObjects::xmlScope = xmlScope; } return _p; }

inline void soap_delete__ns1__QueryObjects(struct soap *soap, _ns1__QueryObjects *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__QueryObjects(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1__GetFileHeaderResponse
#define SOAP_TYPE__ns1__GetFileHeaderResponse (41)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__GetFileHeaderResponse(struct soap*, const char*, int, const _ns1__GetFileHeaderResponse *, const char*);
SOAP_FMAC3 _ns1__GetFileHeaderResponse * SOAP_FMAC4 soap_in__ns1__GetFileHeaderResponse(struct soap*, const char*, _ns1__GetFileHeaderResponse *, const char*);

#ifndef soap_write__ns1__GetFileHeaderResponse
#define soap_write__ns1__GetFileHeaderResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:GetFileHeaderResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__GetFileHeaderResponse * SOAP_FMAC4 soap_get__ns1__GetFileHeaderResponse(struct soap*, _ns1__GetFileHeaderResponse *, const char*, const char*);

#ifndef soap_read__ns1__GetFileHeaderResponse
#define soap_read__ns1__GetFileHeaderResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__GetFileHeaderResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _ns1__GetFileHeaderResponse * SOAP_FMAC2 soap_instantiate__ns1__GetFileHeaderResponse(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__GetFileHeaderResponse * soap_new__ns1__GetFileHeaderResponse(struct soap *soap, int n = -1) { return soap_instantiate__ns1__GetFileHeaderResponse(soap, n, NULL, NULL, NULL); }

inline _ns1__GetFileHeaderResponse * soap_new_req__ns1__GetFileHeaderResponse(struct soap *soap) { _ns1__GetFileHeaderResponse *_p = soap_instantiate__ns1__GetFileHeaderResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _ns1__GetFileHeaderResponse * soap_new_set__ns1__GetFileHeaderResponse(struct soap *soap, ns1__FileHeader *GetFileHeaderResult) { _ns1__GetFileHeaderResponse *_p = soap_instantiate__ns1__GetFileHeaderResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1__GetFileHeaderResponse::GetFileHeaderResult = GetFileHeaderResult; } return _p; }

inline void soap_delete__ns1__GetFileHeaderResponse(struct soap *soap, _ns1__GetFileHeaderResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__GetFileHeaderResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1__GetFileHeader
#define SOAP_TYPE__ns1__GetFileHeader (40)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__GetFileHeader(struct soap*, const char*, int, const _ns1__GetFileHeader *, const char*);
SOAP_FMAC3 _ns1__GetFileHeader * SOAP_FMAC4 soap_in__ns1__GetFileHeader(struct soap*, const char*, _ns1__GetFileHeader *, const char*);

#ifndef soap_write__ns1__GetFileHeader
#define soap_write__ns1__GetFileHeader(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:GetFileHeader", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__GetFileHeader * SOAP_FMAC4 soap_get__ns1__GetFileHeader(struct soap*, _ns1__GetFileHeader *, const char*, const char*);

#ifndef soap_read__ns1__GetFileHeader
#define soap_read__ns1__GetFileHeader(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__GetFileHeader(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _ns1__GetFileHeader * SOAP_FMAC2 soap_instantiate__ns1__GetFileHeader(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__GetFileHeader * soap_new__ns1__GetFileHeader(struct soap *soap, int n = -1) { return soap_instantiate__ns1__GetFileHeader(soap, n, NULL, NULL, NULL); }

inline _ns1__GetFileHeader * soap_new_req__ns1__GetFileHeader(struct soap *soap, int downLoadItemId) { _ns1__GetFileHeader *_p = soap_instantiate__ns1__GetFileHeader(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1__GetFileHeader::downLoadItemId = downLoadItemId; } return _p; }

inline _ns1__GetFileHeader * soap_new_set__ns1__GetFileHeader(struct soap *soap, int downLoadItemId) { _ns1__GetFileHeader *_p = soap_instantiate__ns1__GetFileHeader(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1__GetFileHeader::downLoadItemId = downLoadItemId; } return _p; }

inline void soap_delete__ns1__GetFileHeader(struct soap *soap, _ns1__GetFileHeader *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__GetFileHeader(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1__QueryDownLoadItemArrByProductIdResponse
#define SOAP_TYPE__ns1__QueryDownLoadItemArrByProductIdResponse (39)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__QueryDownLoadItemArrByProductIdResponse(struct soap*, const char*, int, const _ns1__QueryDownLoadItemArrByProductIdResponse *, const char*);
SOAP_FMAC3 _ns1__QueryDownLoadItemArrByProductIdResponse * SOAP_FMAC4 soap_in__ns1__QueryDownLoadItemArrByProductIdResponse(struct soap*, const char*, _ns1__QueryDownLoadItemArrByProductIdResponse *, const char*);

#ifndef soap_write__ns1__QueryDownLoadItemArrByProductIdResponse
#define soap_write__ns1__QueryDownLoadItemArrByProductIdResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:QueryDownLoadItemArrByProductIdResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__QueryDownLoadItemArrByProductIdResponse * SOAP_FMAC4 soap_get__ns1__QueryDownLoadItemArrByProductIdResponse(struct soap*, _ns1__QueryDownLoadItemArrByProductIdResponse *, const char*, const char*);

#ifndef soap_read__ns1__QueryDownLoadItemArrByProductIdResponse
#define soap_read__ns1__QueryDownLoadItemArrByProductIdResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__QueryDownLoadItemArrByProductIdResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _ns1__QueryDownLoadItemArrByProductIdResponse * SOAP_FMAC2 soap_instantiate__ns1__QueryDownLoadItemArrByProductIdResponse(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__QueryDownLoadItemArrByProductIdResponse * soap_new__ns1__QueryDownLoadItemArrByProductIdResponse(struct soap *soap, int n = -1) { return soap_instantiate__ns1__QueryDownLoadItemArrByProductIdResponse(soap, n, NULL, NULL, NULL); }

inline _ns1__QueryDownLoadItemArrByProductIdResponse * soap_new_req__ns1__QueryDownLoadItemArrByProductIdResponse(struct soap *soap) { _ns1__QueryDownLoadItemArrByProductIdResponse *_p = soap_instantiate__ns1__QueryDownLoadItemArrByProductIdResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _ns1__QueryDownLoadItemArrByProductIdResponse * soap_new_set__ns1__QueryDownLoadItemArrByProductIdResponse(struct soap *soap, ns1__ArrayOfDownLoadItem *QueryDownLoadItemArrByProductIdResult) { _ns1__QueryDownLoadItemArrByProductIdResponse *_p = soap_instantiate__ns1__QueryDownLoadItemArrByProductIdResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1__QueryDownLoadItemArrByProductIdResponse::QueryDownLoadItemArrByProductIdResult = QueryDownLoadItemArrByProductIdResult; } return _p; }

inline void soap_delete__ns1__QueryDownLoadItemArrByProductIdResponse(struct soap *soap, _ns1__QueryDownLoadItemArrByProductIdResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__QueryDownLoadItemArrByProductIdResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1__QueryDownLoadItemArrByProductId
#define SOAP_TYPE__ns1__QueryDownLoadItemArrByProductId (38)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__QueryDownLoadItemArrByProductId(struct soap*, const char*, int, const _ns1__QueryDownLoadItemArrByProductId *, const char*);
SOAP_FMAC3 _ns1__QueryDownLoadItemArrByProductId * SOAP_FMAC4 soap_in__ns1__QueryDownLoadItemArrByProductId(struct soap*, const char*, _ns1__QueryDownLoadItemArrByProductId *, const char*);

#ifndef soap_write__ns1__QueryDownLoadItemArrByProductId
#define soap_write__ns1__QueryDownLoadItemArrByProductId(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:QueryDownLoadItemArrByProductId", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__QueryDownLoadItemArrByProductId * SOAP_FMAC4 soap_get__ns1__QueryDownLoadItemArrByProductId(struct soap*, _ns1__QueryDownLoadItemArrByProductId *, const char*, const char*);

#ifndef soap_read__ns1__QueryDownLoadItemArrByProductId
#define soap_read__ns1__QueryDownLoadItemArrByProductId(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__QueryDownLoadItemArrByProductId(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _ns1__QueryDownLoadItemArrByProductId * SOAP_FMAC2 soap_instantiate__ns1__QueryDownLoadItemArrByProductId(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__QueryDownLoadItemArrByProductId * soap_new__ns1__QueryDownLoadItemArrByProductId(struct soap *soap, int n = -1) { return soap_instantiate__ns1__QueryDownLoadItemArrByProductId(soap, n, NULL, NULL, NULL); }

inline _ns1__QueryDownLoadItemArrByProductId * soap_new_req__ns1__QueryDownLoadItemArrByProductId(struct soap *soap, int productId) { _ns1__QueryDownLoadItemArrByProductId *_p = soap_instantiate__ns1__QueryDownLoadItemArrByProductId(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1__QueryDownLoadItemArrByProductId::productId = productId; } return _p; }

inline _ns1__QueryDownLoadItemArrByProductId * soap_new_set__ns1__QueryDownLoadItemArrByProductId(struct soap *soap, char *dogNo, int productId) { _ns1__QueryDownLoadItemArrByProductId *_p = soap_instantiate__ns1__QueryDownLoadItemArrByProductId(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1__QueryDownLoadItemArrByProductId::dogNo = dogNo; _p->_ns1__QueryDownLoadItemArrByProductId::productId = productId; } return _p; }

inline void soap_delete__ns1__QueryDownLoadItemArrByProductId(struct soap *soap, _ns1__QueryDownLoadItemArrByProductId *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__QueryDownLoadItemArrByProductId(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1__GetDogAccessHistoryResponse
#define SOAP_TYPE__ns1__GetDogAccessHistoryResponse (37)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__GetDogAccessHistoryResponse(struct soap*, const char*, int, const _ns1__GetDogAccessHistoryResponse *, const char*);
SOAP_FMAC3 _ns1__GetDogAccessHistoryResponse * SOAP_FMAC4 soap_in__ns1__GetDogAccessHistoryResponse(struct soap*, const char*, _ns1__GetDogAccessHistoryResponse *, const char*);

#ifndef soap_write__ns1__GetDogAccessHistoryResponse
#define soap_write__ns1__GetDogAccessHistoryResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:GetDogAccessHistoryResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__GetDogAccessHistoryResponse * SOAP_FMAC4 soap_get__ns1__GetDogAccessHistoryResponse(struct soap*, _ns1__GetDogAccessHistoryResponse *, const char*, const char*);

#ifndef soap_read__ns1__GetDogAccessHistoryResponse
#define soap_read__ns1__GetDogAccessHistoryResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__GetDogAccessHistoryResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _ns1__GetDogAccessHistoryResponse * SOAP_FMAC2 soap_instantiate__ns1__GetDogAccessHistoryResponse(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__GetDogAccessHistoryResponse * soap_new__ns1__GetDogAccessHistoryResponse(struct soap *soap, int n = -1) { return soap_instantiate__ns1__GetDogAccessHistoryResponse(soap, n, NULL, NULL, NULL); }

inline _ns1__GetDogAccessHistoryResponse * soap_new_req__ns1__GetDogAccessHistoryResponse(struct soap *soap) { _ns1__GetDogAccessHistoryResponse *_p = soap_instantiate__ns1__GetDogAccessHistoryResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _ns1__GetDogAccessHistoryResponse * soap_new_set__ns1__GetDogAccessHistoryResponse(struct soap *soap, ns1__DogAccessHistory *GetDogAccessHistoryResult) { _ns1__GetDogAccessHistoryResponse *_p = soap_instantiate__ns1__GetDogAccessHistoryResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1__GetDogAccessHistoryResponse::GetDogAccessHistoryResult = GetDogAccessHistoryResult; } return _p; }

inline void soap_delete__ns1__GetDogAccessHistoryResponse(struct soap *soap, _ns1__GetDogAccessHistoryResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__GetDogAccessHistoryResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1__GetDogAccessHistory
#define SOAP_TYPE__ns1__GetDogAccessHistory (36)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__GetDogAccessHistory(struct soap*, const char*, int, const _ns1__GetDogAccessHistory *, const char*);
SOAP_FMAC3 _ns1__GetDogAccessHistory * SOAP_FMAC4 soap_in__ns1__GetDogAccessHistory(struct soap*, const char*, _ns1__GetDogAccessHistory *, const char*);

#ifndef soap_write__ns1__GetDogAccessHistory
#define soap_write__ns1__GetDogAccessHistory(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:GetDogAccessHistory", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__GetDogAccessHistory * SOAP_FMAC4 soap_get__ns1__GetDogAccessHistory(struct soap*, _ns1__GetDogAccessHistory *, const char*, const char*);

#ifndef soap_read__ns1__GetDogAccessHistory
#define soap_read__ns1__GetDogAccessHistory(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__GetDogAccessHistory(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _ns1__GetDogAccessHistory * SOAP_FMAC2 soap_instantiate__ns1__GetDogAccessHistory(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__GetDogAccessHistory * soap_new__ns1__GetDogAccessHistory(struct soap *soap, int n = -1) { return soap_instantiate__ns1__GetDogAccessHistory(soap, n, NULL, NULL, NULL); }

inline _ns1__GetDogAccessHistory * soap_new_req__ns1__GetDogAccessHistory(struct soap *soap) { _ns1__GetDogAccessHistory *_p = soap_instantiate__ns1__GetDogAccessHistory(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _ns1__GetDogAccessHistory * soap_new_set__ns1__GetDogAccessHistory(struct soap *soap) { _ns1__GetDogAccessHistory *_p = soap_instantiate__ns1__GetDogAccessHistory(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline void soap_delete__ns1__GetDogAccessHistory(struct soap *soap, _ns1__GetDogAccessHistory *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__GetDogAccessHistory(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1__GetVersionReleaseNotesResponse
#define SOAP_TYPE__ns1__GetVersionReleaseNotesResponse (35)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__GetVersionReleaseNotesResponse(struct soap*, const char*, int, const _ns1__GetVersionReleaseNotesResponse *, const char*);
SOAP_FMAC3 _ns1__GetVersionReleaseNotesResponse * SOAP_FMAC4 soap_in__ns1__GetVersionReleaseNotesResponse(struct soap*, const char*, _ns1__GetVersionReleaseNotesResponse *, const char*);

#ifndef soap_write__ns1__GetVersionReleaseNotesResponse
#define soap_write__ns1__GetVersionReleaseNotesResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:GetVersionReleaseNotesResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__GetVersionReleaseNotesResponse * SOAP_FMAC4 soap_get__ns1__GetVersionReleaseNotesResponse(struct soap*, _ns1__GetVersionReleaseNotesResponse *, const char*, const char*);

#ifndef soap_read__ns1__GetVersionReleaseNotesResponse
#define soap_read__ns1__GetVersionReleaseNotesResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__GetVersionReleaseNotesResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _ns1__GetVersionReleaseNotesResponse * SOAP_FMAC2 soap_instantiate__ns1__GetVersionReleaseNotesResponse(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__GetVersionReleaseNotesResponse * soap_new__ns1__GetVersionReleaseNotesResponse(struct soap *soap, int n = -1) { return soap_instantiate__ns1__GetVersionReleaseNotesResponse(soap, n, NULL, NULL, NULL); }

inline _ns1__GetVersionReleaseNotesResponse * soap_new_req__ns1__GetVersionReleaseNotesResponse(struct soap *soap) { _ns1__GetVersionReleaseNotesResponse *_p = soap_instantiate__ns1__GetVersionReleaseNotesResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _ns1__GetVersionReleaseNotesResponse * soap_new_set__ns1__GetVersionReleaseNotesResponse(struct soap *soap, ns1__ArrayOfVersionRevision *GetVersionReleaseNotesResult) { _ns1__GetVersionReleaseNotesResponse *_p = soap_instantiate__ns1__GetVersionReleaseNotesResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1__GetVersionReleaseNotesResponse::GetVersionReleaseNotesResult = GetVersionReleaseNotesResult; } return _p; }

inline void soap_delete__ns1__GetVersionReleaseNotesResponse(struct soap *soap, _ns1__GetVersionReleaseNotesResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__GetVersionReleaseNotesResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1__GetVersionReleaseNotes
#define SOAP_TYPE__ns1__GetVersionReleaseNotes (34)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__GetVersionReleaseNotes(struct soap*, const char*, int, const _ns1__GetVersionReleaseNotes *, const char*);
SOAP_FMAC3 _ns1__GetVersionReleaseNotes * SOAP_FMAC4 soap_in__ns1__GetVersionReleaseNotes(struct soap*, const char*, _ns1__GetVersionReleaseNotes *, const char*);

#ifndef soap_write__ns1__GetVersionReleaseNotes
#define soap_write__ns1__GetVersionReleaseNotes(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:GetVersionReleaseNotes", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__GetVersionReleaseNotes * SOAP_FMAC4 soap_get__ns1__GetVersionReleaseNotes(struct soap*, _ns1__GetVersionReleaseNotes *, const char*, const char*);

#ifndef soap_read__ns1__GetVersionReleaseNotes
#define soap_read__ns1__GetVersionReleaseNotes(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__GetVersionReleaseNotes(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _ns1__GetVersionReleaseNotes * SOAP_FMAC2 soap_instantiate__ns1__GetVersionReleaseNotes(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__GetVersionReleaseNotes * soap_new__ns1__GetVersionReleaseNotes(struct soap *soap, int n = -1) { return soap_instantiate__ns1__GetVersionReleaseNotes(soap, n, NULL, NULL, NULL); }

inline _ns1__GetVersionReleaseNotes * soap_new_req__ns1__GetVersionReleaseNotes(struct soap *soap, unsigned int product_USCOREid, unsigned int uCurVersion) { _ns1__GetVersionReleaseNotes *_p = soap_instantiate__ns1__GetVersionReleaseNotes(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1__GetVersionReleaseNotes::product_USCOREid = product_USCOREid; _p->_ns1__GetVersionReleaseNotes::uCurVersion = uCurVersion; } return _p; }

inline _ns1__GetVersionReleaseNotes * soap_new_set__ns1__GetVersionReleaseNotes(struct soap *soap, unsigned int product_USCOREid, unsigned int uCurVersion) { _ns1__GetVersionReleaseNotes *_p = soap_instantiate__ns1__GetVersionReleaseNotes(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1__GetVersionReleaseNotes::product_USCOREid = product_USCOREid; _p->_ns1__GetVersionReleaseNotes::uCurVersion = uCurVersion; } return _p; }

inline void soap_delete__ns1__GetVersionReleaseNotes(struct soap *soap, _ns1__GetVersionReleaseNotes *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__GetVersionReleaseNotes(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1__CompareVersionResponse
#define SOAP_TYPE__ns1__CompareVersionResponse (33)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__CompareVersionResponse(struct soap*, const char*, int, const _ns1__CompareVersionResponse *, const char*);
SOAP_FMAC3 _ns1__CompareVersionResponse * SOAP_FMAC4 soap_in__ns1__CompareVersionResponse(struct soap*, const char*, _ns1__CompareVersionResponse *, const char*);

#ifndef soap_write__ns1__CompareVersionResponse
#define soap_write__ns1__CompareVersionResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:CompareVersionResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__CompareVersionResponse * SOAP_FMAC4 soap_get__ns1__CompareVersionResponse(struct soap*, _ns1__CompareVersionResponse *, const char*, const char*);

#ifndef soap_read__ns1__CompareVersionResponse
#define soap_read__ns1__CompareVersionResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__CompareVersionResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _ns1__CompareVersionResponse * SOAP_FMAC2 soap_instantiate__ns1__CompareVersionResponse(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__CompareVersionResponse * soap_new__ns1__CompareVersionResponse(struct soap *soap, int n = -1) { return soap_instantiate__ns1__CompareVersionResponse(soap, n, NULL, NULL, NULL); }

inline _ns1__CompareVersionResponse * soap_new_req__ns1__CompareVersionResponse(struct soap *soap) { _ns1__CompareVersionResponse *_p = soap_instantiate__ns1__CompareVersionResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _ns1__CompareVersionResponse * soap_new_set__ns1__CompareVersionResponse(struct soap *soap, ns1__ArrayOfVersionRevision *CompareVersionResult) { _ns1__CompareVersionResponse *_p = soap_instantiate__ns1__CompareVersionResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1__CompareVersionResponse::CompareVersionResult = CompareVersionResult; } return _p; }

inline void soap_delete__ns1__CompareVersionResponse(struct soap *soap, _ns1__CompareVersionResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__CompareVersionResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1__CompareVersion
#define SOAP_TYPE__ns1__CompareVersion (32)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__CompareVersion(struct soap*, const char*, int, const _ns1__CompareVersion *, const char*);
SOAP_FMAC3 _ns1__CompareVersion * SOAP_FMAC4 soap_in__ns1__CompareVersion(struct soap*, const char*, _ns1__CompareVersion *, const char*);

#ifndef soap_write__ns1__CompareVersion
#define soap_write__ns1__CompareVersion(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:CompareVersion", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__CompareVersion * SOAP_FMAC4 soap_get__ns1__CompareVersion(struct soap*, _ns1__CompareVersion *, const char*, const char*);

#ifndef soap_read__ns1__CompareVersion
#define soap_read__ns1__CompareVersion(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__CompareVersion(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _ns1__CompareVersion * SOAP_FMAC2 soap_instantiate__ns1__CompareVersion(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__CompareVersion * soap_new__ns1__CompareVersion(struct soap *soap, int n = -1) { return soap_instantiate__ns1__CompareVersion(soap, n, NULL, NULL, NULL); }

inline _ns1__CompareVersion * soap_new_req__ns1__CompareVersion(struct soap *soap, int userId, unsigned int product_USCOREid, unsigned int uCurVersion, unsigned int uUpdateVersion, bool bLoadOnHasNew) { _ns1__CompareVersion *_p = soap_instantiate__ns1__CompareVersion(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1__CompareVersion::userId = userId; _p->_ns1__CompareVersion::product_USCOREid = product_USCOREid; _p->_ns1__CompareVersion::uCurVersion = uCurVersion; _p->_ns1__CompareVersion::uUpdateVersion = uUpdateVersion; _p->_ns1__CompareVersion::bLoadOnHasNew = bLoadOnHasNew; } return _p; }

inline _ns1__CompareVersion * soap_new_set__ns1__CompareVersion(struct soap *soap, int userId, unsigned int product_USCOREid, unsigned int uCurVersion, unsigned int uUpdateVersion, bool bLoadOnHasNew) { _ns1__CompareVersion *_p = soap_instantiate__ns1__CompareVersion(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1__CompareVersion::userId = userId; _p->_ns1__CompareVersion::product_USCOREid = product_USCOREid; _p->_ns1__CompareVersion::uCurVersion = uCurVersion; _p->_ns1__CompareVersion::uUpdateVersion = uUpdateVersion; _p->_ns1__CompareVersion::bLoadOnHasNew = bLoadOnHasNew; } return _p; }

inline void soap_delete__ns1__CompareVersion(struct soap *soap, _ns1__CompareVersion *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__CompareVersion(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1__SetRevisionReadFlagResponse
#define SOAP_TYPE__ns1__SetRevisionReadFlagResponse (31)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__SetRevisionReadFlagResponse(struct soap*, const char*, int, const _ns1__SetRevisionReadFlagResponse *, const char*);
SOAP_FMAC3 _ns1__SetRevisionReadFlagResponse * SOAP_FMAC4 soap_in__ns1__SetRevisionReadFlagResponse(struct soap*, const char*, _ns1__SetRevisionReadFlagResponse *, const char*);

#ifndef soap_write__ns1__SetRevisionReadFlagResponse
#define soap_write__ns1__SetRevisionReadFlagResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:SetRevisionReadFlagResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__SetRevisionReadFlagResponse * SOAP_FMAC4 soap_get__ns1__SetRevisionReadFlagResponse(struct soap*, _ns1__SetRevisionReadFlagResponse *, const char*, const char*);

#ifndef soap_read__ns1__SetRevisionReadFlagResponse
#define soap_read__ns1__SetRevisionReadFlagResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__SetRevisionReadFlagResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _ns1__SetRevisionReadFlagResponse * SOAP_FMAC2 soap_instantiate__ns1__SetRevisionReadFlagResponse(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__SetRevisionReadFlagResponse * soap_new__ns1__SetRevisionReadFlagResponse(struct soap *soap, int n = -1) { return soap_instantiate__ns1__SetRevisionReadFlagResponse(soap, n, NULL, NULL, NULL); }

inline _ns1__SetRevisionReadFlagResponse * soap_new_req__ns1__SetRevisionReadFlagResponse(struct soap *soap) { _ns1__SetRevisionReadFlagResponse *_p = soap_instantiate__ns1__SetRevisionReadFlagResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _ns1__SetRevisionReadFlagResponse * soap_new_set__ns1__SetRevisionReadFlagResponse(struct soap *soap) { _ns1__SetRevisionReadFlagResponse *_p = soap_instantiate__ns1__SetRevisionReadFlagResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline void soap_delete__ns1__SetRevisionReadFlagResponse(struct soap *soap, _ns1__SetRevisionReadFlagResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__SetRevisionReadFlagResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1__SetRevisionReadFlag
#define SOAP_TYPE__ns1__SetRevisionReadFlag (30)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__SetRevisionReadFlag(struct soap*, const char*, int, const _ns1__SetRevisionReadFlag *, const char*);
SOAP_FMAC3 _ns1__SetRevisionReadFlag * SOAP_FMAC4 soap_in__ns1__SetRevisionReadFlag(struct soap*, const char*, _ns1__SetRevisionReadFlag *, const char*);

#ifndef soap_write__ns1__SetRevisionReadFlag
#define soap_write__ns1__SetRevisionReadFlag(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:SetRevisionReadFlag", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__SetRevisionReadFlag * SOAP_FMAC4 soap_get__ns1__SetRevisionReadFlag(struct soap*, _ns1__SetRevisionReadFlag *, const char*, const char*);

#ifndef soap_read__ns1__SetRevisionReadFlag
#define soap_read__ns1__SetRevisionReadFlag(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__SetRevisionReadFlag(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _ns1__SetRevisionReadFlag * SOAP_FMAC2 soap_instantiate__ns1__SetRevisionReadFlag(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__SetRevisionReadFlag * soap_new__ns1__SetRevisionReadFlag(struct soap *soap, int n = -1) { return soap_instantiate__ns1__SetRevisionReadFlag(soap, n, NULL, NULL, NULL); }

inline _ns1__SetRevisionReadFlag * soap_new_req__ns1__SetRevisionReadFlag(struct soap *soap, int userId) { _ns1__SetRevisionReadFlag *_p = soap_instantiate__ns1__SetRevisionReadFlag(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1__SetRevisionReadFlag::userId = userId; } return _p; }

inline _ns1__SetRevisionReadFlag * soap_new_set__ns1__SetRevisionReadFlag(struct soap *soap, int userId, ns1__ArrayOfInt *revisionIdArr) { _ns1__SetRevisionReadFlag *_p = soap_instantiate__ns1__SetRevisionReadFlag(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1__SetRevisionReadFlag::userId = userId; _p->_ns1__SetRevisionReadFlag::revisionIdArr = revisionIdArr; } return _p; }

inline void soap_delete__ns1__SetRevisionReadFlag(struct soap *soap, _ns1__SetRevisionReadFlag *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__SetRevisionReadFlag(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1__GetUpdateVerByCurVerResponse
#define SOAP_TYPE__ns1__GetUpdateVerByCurVerResponse (29)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__GetUpdateVerByCurVerResponse(struct soap*, const char*, int, const _ns1__GetUpdateVerByCurVerResponse *, const char*);
SOAP_FMAC3 _ns1__GetUpdateVerByCurVerResponse * SOAP_FMAC4 soap_in__ns1__GetUpdateVerByCurVerResponse(struct soap*, const char*, _ns1__GetUpdateVerByCurVerResponse *, const char*);

#ifndef soap_write__ns1__GetUpdateVerByCurVerResponse
#define soap_write__ns1__GetUpdateVerByCurVerResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:GetUpdateVerByCurVerResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__GetUpdateVerByCurVerResponse * SOAP_FMAC4 soap_get__ns1__GetUpdateVerByCurVerResponse(struct soap*, _ns1__GetUpdateVerByCurVerResponse *, const char*, const char*);

#ifndef soap_read__ns1__GetUpdateVerByCurVerResponse
#define soap_read__ns1__GetUpdateVerByCurVerResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__GetUpdateVerByCurVerResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _ns1__GetUpdateVerByCurVerResponse * SOAP_FMAC2 soap_instantiate__ns1__GetUpdateVerByCurVerResponse(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__GetUpdateVerByCurVerResponse * soap_new__ns1__GetUpdateVerByCurVerResponse(struct soap *soap, int n = -1) { return soap_instantiate__ns1__GetUpdateVerByCurVerResponse(soap, n, NULL, NULL, NULL); }

inline _ns1__GetUpdateVerByCurVerResponse * soap_new_req__ns1__GetUpdateVerByCurVerResponse(struct soap *soap) { _ns1__GetUpdateVerByCurVerResponse *_p = soap_instantiate__ns1__GetUpdateVerByCurVerResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _ns1__GetUpdateVerByCurVerResponse * soap_new_set__ns1__GetUpdateVerByCurVerResponse(struct soap *soap, ns1__ArrayOfProductVersion *GetUpdateVerByCurVerResult) { _ns1__GetUpdateVerByCurVerResponse *_p = soap_instantiate__ns1__GetUpdateVerByCurVerResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1__GetUpdateVerByCurVerResponse::GetUpdateVerByCurVerResult = GetUpdateVerByCurVerResult; } return _p; }

inline void soap_delete__ns1__GetUpdateVerByCurVerResponse(struct soap *soap, _ns1__GetUpdateVerByCurVerResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__GetUpdateVerByCurVerResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1__GetUpdateVerByCurVer
#define SOAP_TYPE__ns1__GetUpdateVerByCurVer (28)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__GetUpdateVerByCurVer(struct soap*, const char*, int, const _ns1__GetUpdateVerByCurVer *, const char*);
SOAP_FMAC3 _ns1__GetUpdateVerByCurVer * SOAP_FMAC4 soap_in__ns1__GetUpdateVerByCurVer(struct soap*, const char*, _ns1__GetUpdateVerByCurVer *, const char*);

#ifndef soap_write__ns1__GetUpdateVerByCurVer
#define soap_write__ns1__GetUpdateVerByCurVer(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:GetUpdateVerByCurVer", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__GetUpdateVerByCurVer * SOAP_FMAC4 soap_get__ns1__GetUpdateVerByCurVer(struct soap*, _ns1__GetUpdateVerByCurVer *, const char*, const char*);

#ifndef soap_read__ns1__GetUpdateVerByCurVer
#define soap_read__ns1__GetUpdateVerByCurVer(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__GetUpdateVerByCurVer(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _ns1__GetUpdateVerByCurVer * SOAP_FMAC2 soap_instantiate__ns1__GetUpdateVerByCurVer(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__GetUpdateVerByCurVer * soap_new__ns1__GetUpdateVerByCurVer(struct soap *soap, int n = -1) { return soap_instantiate__ns1__GetUpdateVerByCurVer(soap, n, NULL, NULL, NULL); }

inline _ns1__GetUpdateVerByCurVer * soap_new_req__ns1__GetUpdateVerByCurVer(struct soap *soap, unsigned int userId, unsigned int product_USCOREid, unsigned int uCurVersion) { _ns1__GetUpdateVerByCurVer *_p = soap_instantiate__ns1__GetUpdateVerByCurVer(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1__GetUpdateVerByCurVer::userId = userId; _p->_ns1__GetUpdateVerByCurVer::product_USCOREid = product_USCOREid; _p->_ns1__GetUpdateVerByCurVer::uCurVersion = uCurVersion; } return _p; }

inline _ns1__GetUpdateVerByCurVer * soap_new_set__ns1__GetUpdateVerByCurVer(struct soap *soap, unsigned int userId, unsigned int product_USCOREid, unsigned int uCurVersion) { _ns1__GetUpdateVerByCurVer *_p = soap_instantiate__ns1__GetUpdateVerByCurVer(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1__GetUpdateVerByCurVer::userId = userId; _p->_ns1__GetUpdateVerByCurVer::product_USCOREid = product_USCOREid; _p->_ns1__GetUpdateVerByCurVer::uCurVersion = uCurVersion; } return _p; }

inline void soap_delete__ns1__GetUpdateVerByCurVer(struct soap *soap, _ns1__GetUpdateVerByCurVer *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__GetUpdateVerByCurVer(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1__LoginByByteArrResponse
#define SOAP_TYPE__ns1__LoginByByteArrResponse (27)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__LoginByByteArrResponse(struct soap*, const char*, int, const _ns1__LoginByByteArrResponse *, const char*);
SOAP_FMAC3 _ns1__LoginByByteArrResponse * SOAP_FMAC4 soap_in__ns1__LoginByByteArrResponse(struct soap*, const char*, _ns1__LoginByByteArrResponse *, const char*);

#ifndef soap_write__ns1__LoginByByteArrResponse
#define soap_write__ns1__LoginByByteArrResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:LoginByByteArrResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__LoginByByteArrResponse * SOAP_FMAC4 soap_get__ns1__LoginByByteArrResponse(struct soap*, _ns1__LoginByByteArrResponse *, const char*, const char*);

#ifndef soap_read__ns1__LoginByByteArrResponse
#define soap_read__ns1__LoginByByteArrResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__LoginByByteArrResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _ns1__LoginByByteArrResponse * SOAP_FMAC2 soap_instantiate__ns1__LoginByByteArrResponse(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__LoginByByteArrResponse * soap_new__ns1__LoginByByteArrResponse(struct soap *soap, int n = -1) { return soap_instantiate__ns1__LoginByByteArrResponse(soap, n, NULL, NULL, NULL); }

inline _ns1__LoginByByteArrResponse * soap_new_req__ns1__LoginByByteArrResponse(struct soap *soap, unsigned int LoginByByteArrResult) { _ns1__LoginByByteArrResponse *_p = soap_instantiate__ns1__LoginByByteArrResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1__LoginByByteArrResponse::LoginByByteArrResult = LoginByByteArrResult; } return _p; }

inline _ns1__LoginByByteArrResponse * soap_new_set__ns1__LoginByByteArrResponse(struct soap *soap, unsigned int LoginByByteArrResult) { _ns1__LoginByByteArrResponse *_p = soap_instantiate__ns1__LoginByByteArrResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1__LoginByByteArrResponse::LoginByByteArrResult = LoginByByteArrResult; } return _p; }

inline void soap_delete__ns1__LoginByByteArrResponse(struct soap *soap, _ns1__LoginByByteArrResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__LoginByByteArrResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1__LoginByByteArr
#define SOAP_TYPE__ns1__LoginByByteArr (26)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__LoginByByteArr(struct soap*, const char*, int, const _ns1__LoginByByteArr *, const char*);
SOAP_FMAC3 _ns1__LoginByByteArr * SOAP_FMAC4 soap_in__ns1__LoginByByteArr(struct soap*, const char*, _ns1__LoginByByteArr *, const char*);

#ifndef soap_write__ns1__LoginByByteArr
#define soap_write__ns1__LoginByByteArr(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:LoginByByteArr", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__LoginByByteArr * SOAP_FMAC4 soap_get__ns1__LoginByByteArr(struct soap*, _ns1__LoginByByteArr *, const char*, const char*);

#ifndef soap_read__ns1__LoginByByteArr
#define soap_read__ns1__LoginByByteArr(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__LoginByByteArr(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _ns1__LoginByByteArr * SOAP_FMAC2 soap_instantiate__ns1__LoginByByteArr(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__LoginByByteArr * soap_new__ns1__LoginByByteArr(struct soap *soap, int n = -1) { return soap_instantiate__ns1__LoginByByteArr(soap, n, NULL, NULL, NULL); }

inline _ns1__LoginByByteArr * soap_new_req__ns1__LoginByByteArr(struct soap *soap) { _ns1__LoginByByteArr *_p = soap_instantiate__ns1__LoginByByteArr(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _ns1__LoginByByteArr * soap_new_set__ns1__LoginByByteArr(struct soap *soap, xsd__base64Binary *userInfo) { _ns1__LoginByByteArr *_p = soap_instantiate__ns1__LoginByByteArr(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1__LoginByByteArr::userInfo = userInfo; } return _p; }

inline void soap_delete__ns1__LoginByByteArr(struct soap *soap, _ns1__LoginByByteArr *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__LoginByByteArr(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1__LoginResponse
#define SOAP_TYPE__ns1__LoginResponse (25)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__LoginResponse(struct soap*, const char*, int, const _ns1__LoginResponse *, const char*);
SOAP_FMAC3 _ns1__LoginResponse * SOAP_FMAC4 soap_in__ns1__LoginResponse(struct soap*, const char*, _ns1__LoginResponse *, const char*);

#ifndef soap_write__ns1__LoginResponse
#define soap_write__ns1__LoginResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:LoginResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__LoginResponse * SOAP_FMAC4 soap_get__ns1__LoginResponse(struct soap*, _ns1__LoginResponse *, const char*, const char*);

#ifndef soap_read__ns1__LoginResponse
#define soap_read__ns1__LoginResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__LoginResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _ns1__LoginResponse * SOAP_FMAC2 soap_instantiate__ns1__LoginResponse(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__LoginResponse * soap_new__ns1__LoginResponse(struct soap *soap, int n = -1) { return soap_instantiate__ns1__LoginResponse(soap, n, NULL, NULL, NULL); }

inline _ns1__LoginResponse * soap_new_req__ns1__LoginResponse(struct soap *soap, unsigned int LoginResult) { _ns1__LoginResponse *_p = soap_instantiate__ns1__LoginResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1__LoginResponse::LoginResult = LoginResult; } return _p; }

inline _ns1__LoginResponse * soap_new_set__ns1__LoginResponse(struct soap *soap, unsigned int LoginResult) { _ns1__LoginResponse *_p = soap_instantiate__ns1__LoginResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1__LoginResponse::LoginResult = LoginResult; } return _p; }

inline void soap_delete__ns1__LoginResponse(struct soap *soap, _ns1__LoginResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__LoginResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1__Login
#define SOAP_TYPE__ns1__Login (24)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__Login(struct soap*, const char*, int, const _ns1__Login *, const char*);
SOAP_FMAC3 _ns1__Login * SOAP_FMAC4 soap_in__ns1__Login(struct soap*, const char*, _ns1__Login *, const char*);

#ifndef soap_write__ns1__Login
#define soap_write__ns1__Login(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:Login", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__Login * SOAP_FMAC4 soap_get__ns1__Login(struct soap*, _ns1__Login *, const char*, const char*);

#ifndef soap_read__ns1__Login
#define soap_read__ns1__Login(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__Login(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _ns1__Login * SOAP_FMAC2 soap_instantiate__ns1__Login(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__Login * soap_new__ns1__Login(struct soap *soap, int n = -1) { return soap_instantiate__ns1__Login(soap, n, NULL, NULL, NULL); }

inline _ns1__Login * soap_new_req__ns1__Login(struct soap *soap, unsigned int dogSerial) { _ns1__Login *_p = soap_instantiate__ns1__Login(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1__Login::dogSerial = dogSerial; } return _p; }

inline _ns1__Login * soap_new_set__ns1__Login(struct soap *soap, xsd__base64Binary *computerMac, xsd__base64Binary *computerIp, char *computerName, unsigned int dogSerial) { _ns1__Login *_p = soap_instantiate__ns1__Login(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1__Login::computerMac = computerMac; _p->_ns1__Login::computerIp = computerIp; _p->_ns1__Login::computerName = computerName; _p->_ns1__Login::dogSerial = dogSerial; } return _p; }

inline void soap_delete__ns1__Login(struct soap *soap, _ns1__Login *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__Login(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns1__FileHeader
#define SOAP_TYPE_ns1__FileHeader (23)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__FileHeader(struct soap*, const char*, int, const ns1__FileHeader *, const char*);
SOAP_FMAC3 ns1__FileHeader * SOAP_FMAC4 soap_in_ns1__FileHeader(struct soap*, const char*, ns1__FileHeader *, const char*);

#ifndef soap_write_ns1__FileHeader
#define soap_write_ns1__FileHeader(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:FileHeader", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns1__FileHeader * SOAP_FMAC4 soap_get_ns1__FileHeader(struct soap*, ns1__FileHeader *, const char*, const char*);

#ifndef soap_read_ns1__FileHeader
#define soap_read_ns1__FileHeader(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__FileHeader(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 ns1__FileHeader * SOAP_FMAC2 soap_instantiate_ns1__FileHeader(struct soap*, int, const char*, const char*, size_t*);

inline ns1__FileHeader * soap_new_ns1__FileHeader(struct soap *soap, int n = -1) { return soap_instantiate_ns1__FileHeader(soap, n, NULL, NULL, NULL); }

inline ns1__FileHeader * soap_new_req_ns1__FileHeader(struct soap *soap, int fileType, int hostId, int ownerId, time_t occurDateValue, int serialNo, int id1) { ns1__FileHeader *_p = soap_instantiate_ns1__FileHeader(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns1__FileHeader::fileType = fileType; _p->ns1__FileHeader::hostId = hostId; _p->ns1__FileHeader::ownerId = ownerId; _p->ns1__FileHeader::occurDateValue = occurDateValue; _p->ns1__FileHeader::serialNo = serialNo; _p->ns1__ObjectV::id = id1; } return _p; }

inline ns1__FileHeader * soap_new_set_ns1__FileHeader(struct soap *soap, char *filePath, int fileType, char *fileName, char *fileNameServer, int hostId, int ownerId, xsd__base64Binary *matter, char *description, time_t occurDateValue, int serialNo, int id1, char *tag1) { ns1__FileHeader *_p = soap_instantiate_ns1__FileHeader(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns1__FileHeader::filePath = filePath; _p->ns1__FileHeader::fileType = fileType; _p->ns1__FileHeader::fileName = fileName; _p->ns1__FileHeader::fileNameServer = fileNameServer; _p->ns1__FileHeader::hostId = hostId; _p->ns1__FileHeader::ownerId = ownerId; _p->ns1__FileHeader::matter = matter; _p->ns1__FileHeader::description = description; _p->ns1__FileHeader::occurDateValue = occurDateValue; _p->ns1__FileHeader::serialNo = serialNo; _p->ns1__ObjectV::id = id1; _p->ns1__ObjectV::tag = tag1; } return _p; }

inline void soap_delete_ns1__FileHeader(struct soap *soap, ns1__FileHeader *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__FileHeader(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns1__DownLoadItem
#define SOAP_TYPE_ns1__DownLoadItem (22)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__DownLoadItem(struct soap*, const char*, int, const ns1__DownLoadItem *, const char*);
SOAP_FMAC3 ns1__DownLoadItem * SOAP_FMAC4 soap_in_ns1__DownLoadItem(struct soap*, const char*, ns1__DownLoadItem *, const char*);

#ifndef soap_write_ns1__DownLoadItem
#define soap_write_ns1__DownLoadItem(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:DownLoadItem", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns1__DownLoadItem * SOAP_FMAC4 soap_get_ns1__DownLoadItem(struct soap*, ns1__DownLoadItem *, const char*, const char*);

#ifndef soap_read_ns1__DownLoadItem
#define soap_read_ns1__DownLoadItem(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__DownLoadItem(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 ns1__DownLoadItem * SOAP_FMAC2 soap_instantiate_ns1__DownLoadItem(struct soap*, int, const char*, const char*, size_t*);

inline ns1__DownLoadItem * soap_new_ns1__DownLoadItem(struct soap *soap, int n = -1) { return soap_instantiate_ns1__DownLoadItem(soap, n, NULL, NULL, NULL); }

inline ns1__DownLoadItem * soap_new_req_ns1__DownLoadItem(struct soap *soap, time_t updateDate, int serialno, int productId, int id1) { ns1__DownLoadItem *_p = soap_instantiate_ns1__DownLoadItem(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns1__DownLoadItem::updateDate = updateDate; _p->ns1__DownLoadItem::serialno = serialno; _p->ns1__DownLoadItem::productId = productId; _p->ns1__ObjectV::id = id1; } return _p; }

inline ns1__DownLoadItem * soap_new_set_ns1__DownLoadItem(struct soap *soap, char *title, time_t updateDate, char *notes, int serialno, char *occurDateValue, char *fileName, int productId, int id1, char *tag1) { ns1__DownLoadItem *_p = soap_instantiate_ns1__DownLoadItem(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns1__DownLoadItem::title = title; _p->ns1__DownLoadItem::updateDate = updateDate; _p->ns1__DownLoadItem::notes = notes; _p->ns1__DownLoadItem::serialno = serialno; _p->ns1__DownLoadItem::occurDateValue = occurDateValue; _p->ns1__DownLoadItem::fileName = fileName; _p->ns1__DownLoadItem::productId = productId; _p->ns1__ObjectV::id = id1; _p->ns1__ObjectV::tag = tag1; } return _p; }

inline void soap_delete_ns1__DownLoadItem(struct soap *soap, ns1__DownLoadItem *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__DownLoadItem(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns1__ArrayOfDownLoadItem
#define SOAP_TYPE_ns1__ArrayOfDownLoadItem (21)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__ArrayOfDownLoadItem(struct soap*, const char*, int, const ns1__ArrayOfDownLoadItem *, const char*);
SOAP_FMAC3 ns1__ArrayOfDownLoadItem * SOAP_FMAC4 soap_in_ns1__ArrayOfDownLoadItem(struct soap*, const char*, ns1__ArrayOfDownLoadItem *, const char*);

#ifndef soap_write_ns1__ArrayOfDownLoadItem
#define soap_write_ns1__ArrayOfDownLoadItem(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:ArrayOfDownLoadItem", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns1__ArrayOfDownLoadItem * SOAP_FMAC4 soap_get_ns1__ArrayOfDownLoadItem(struct soap*, ns1__ArrayOfDownLoadItem *, const char*, const char*);

#ifndef soap_read_ns1__ArrayOfDownLoadItem
#define soap_read_ns1__ArrayOfDownLoadItem(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__ArrayOfDownLoadItem(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 ns1__ArrayOfDownLoadItem * SOAP_FMAC2 soap_instantiate_ns1__ArrayOfDownLoadItem(struct soap*, int, const char*, const char*, size_t*);

inline ns1__ArrayOfDownLoadItem * soap_new_ns1__ArrayOfDownLoadItem(struct soap *soap, int n = -1) { return soap_instantiate_ns1__ArrayOfDownLoadItem(soap, n, NULL, NULL, NULL); }

inline ns1__ArrayOfDownLoadItem * soap_new_req_ns1__ArrayOfDownLoadItem(struct soap *soap, int __sizeDownLoadItem, ns1__DownLoadItem **DownLoadItem) { ns1__ArrayOfDownLoadItem *_p = soap_instantiate_ns1__ArrayOfDownLoadItem(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns1__ArrayOfDownLoadItem::__sizeDownLoadItem = __sizeDownLoadItem; _p->ns1__ArrayOfDownLoadItem::DownLoadItem = DownLoadItem; } return _p; }

inline ns1__ArrayOfDownLoadItem * soap_new_set_ns1__ArrayOfDownLoadItem(struct soap *soap, int __sizeDownLoadItem, ns1__DownLoadItem **DownLoadItem) { ns1__ArrayOfDownLoadItem *_p = soap_instantiate_ns1__ArrayOfDownLoadItem(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns1__ArrayOfDownLoadItem::__sizeDownLoadItem = __sizeDownLoadItem; _p->ns1__ArrayOfDownLoadItem::DownLoadItem = DownLoadItem; } return _p; }

inline void soap_delete_ns1__ArrayOfDownLoadItem(struct soap *soap, ns1__ArrayOfDownLoadItem *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__ArrayOfDownLoadItem(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns1__ObjectV
#define SOAP_TYPE_ns1__ObjectV (20)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__ObjectV(struct soap*, const char*, int, const ns1__ObjectV *, const char*);
SOAP_FMAC3 ns1__ObjectV * SOAP_FMAC4 soap_in_ns1__ObjectV(struct soap*, const char*, ns1__ObjectV *, const char*);

#ifndef soap_write_ns1__ObjectV
#define soap_write_ns1__ObjectV(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:ObjectV", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns1__ObjectV * SOAP_FMAC4 soap_get_ns1__ObjectV(struct soap*, ns1__ObjectV *, const char*, const char*);

#ifndef soap_read_ns1__ObjectV
#define soap_read_ns1__ObjectV(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__ObjectV(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 ns1__ObjectV * SOAP_FMAC2 soap_instantiate_ns1__ObjectV(struct soap*, int, const char*, const char*, size_t*);

inline ns1__ObjectV * soap_new_ns1__ObjectV(struct soap *soap, int n = -1) { return soap_instantiate_ns1__ObjectV(soap, n, NULL, NULL, NULL); }

inline ns1__ObjectV * soap_new_req_ns1__ObjectV(struct soap *soap, int id) { ns1__ObjectV *_p = soap_instantiate_ns1__ObjectV(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns1__ObjectV::id = id; } return _p; }

inline ns1__ObjectV * soap_new_set_ns1__ObjectV(struct soap *soap, int id, char *tag) { ns1__ObjectV *_p = soap_instantiate_ns1__ObjectV(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns1__ObjectV::id = id; _p->ns1__ObjectV::tag = tag; } return _p; }

inline void soap_delete_ns1__ObjectV(struct soap *soap, ns1__ObjectV *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__ObjectV(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns1__DogAccessHistory
#define SOAP_TYPE_ns1__DogAccessHistory (19)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__DogAccessHistory(struct soap*, const char*, int, const ns1__DogAccessHistory *, const char*);
SOAP_FMAC3 ns1__DogAccessHistory * SOAP_FMAC4 soap_in_ns1__DogAccessHistory(struct soap*, const char*, ns1__DogAccessHistory *, const char*);

#ifndef soap_write_ns1__DogAccessHistory
#define soap_write_ns1__DogAccessHistory(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:DogAccessHistory", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns1__DogAccessHistory * SOAP_FMAC4 soap_get_ns1__DogAccessHistory(struct soap*, ns1__DogAccessHistory *, const char*, const char*);

#ifndef soap_read_ns1__DogAccessHistory
#define soap_read_ns1__DogAccessHistory(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__DogAccessHistory(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 ns1__DogAccessHistory * SOAP_FMAC2 soap_instantiate_ns1__DogAccessHistory(struct soap*, int, const char*, const char*, size_t*);

inline ns1__DogAccessHistory * soap_new_ns1__DogAccessHistory(struct soap *soap, int n = -1) { return soap_instantiate_ns1__DogAccessHistory(soap, n, NULL, NULL, NULL); }

inline ns1__DogAccessHistory * soap_new_req_ns1__DogAccessHistory(struct soap *soap, int endUserId, int productId, int cycleSerial, int accessType, int accessOccurDate, int id1) { ns1__DogAccessHistory *_p = soap_instantiate_ns1__DogAccessHistory(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns1__DogAccessHistory::endUserId = endUserId; _p->ns1__DogAccessHistory::productId = productId; _p->ns1__DogAccessHistory::cycleSerial = cycleSerial; _p->ns1__DogAccessHistory::accessType = accessType; _p->ns1__DogAccessHistory::accessOccurDate = accessOccurDate; _p->ns1__ObjectV::id = id1; } return _p; }

inline ns1__DogAccessHistory * soap_new_set_ns1__DogAccessHistory(struct soap *soap, char *dogserial, int endUserId, int productId, int cycleSerial, int accessType, int accessOccurDate, int id1, char *tag1) { ns1__DogAccessHistory *_p = soap_instantiate_ns1__DogAccessHistory(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns1__DogAccessHistory::dogserial = dogserial; _p->ns1__DogAccessHistory::endUserId = endUserId; _p->ns1__DogAccessHistory::productId = productId; _p->ns1__DogAccessHistory::cycleSerial = cycleSerial; _p->ns1__DogAccessHistory::accessType = accessType; _p->ns1__DogAccessHistory::accessOccurDate = accessOccurDate; _p->ns1__ObjectV::id = id1; _p->ns1__ObjectV::tag = tag1; } return _p; }

inline void soap_delete_ns1__DogAccessHistory(struct soap *soap, ns1__DogAccessHistory *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__DogAccessHistory(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns1__VersionRevision
#define SOAP_TYPE_ns1__VersionRevision (18)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__VersionRevision(struct soap*, const char*, int, const ns1__VersionRevision *, const char*);
SOAP_FMAC3 ns1__VersionRevision * SOAP_FMAC4 soap_in_ns1__VersionRevision(struct soap*, const char*, ns1__VersionRevision *, const char*);

#ifndef soap_write_ns1__VersionRevision
#define soap_write_ns1__VersionRevision(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:VersionRevision", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns1__VersionRevision * SOAP_FMAC4 soap_get_ns1__VersionRevision(struct soap*, ns1__VersionRevision *, const char*, const char*);

#ifndef soap_read_ns1__VersionRevision
#define soap_read_ns1__VersionRevision(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__VersionRevision(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 ns1__VersionRevision * SOAP_FMAC2 soap_instantiate_ns1__VersionRevision(struct soap*, int, const char*, const char*, size_t*);

inline ns1__VersionRevision * soap_new_ns1__VersionRevision(struct soap *soap, int n = -1) { return soap_instantiate_ns1__VersionRevision(soap, n, NULL, NULL, NULL); }

inline ns1__VersionRevision * soap_new_req_ns1__VersionRevision(struct soap *soap, unsigned int Id, unsigned int productId, char revisionType, unsigned char important, bool readed) { ns1__VersionRevision *_p = soap_instantiate_ns1__VersionRevision(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns1__VersionRevision::Id = Id; _p->ns1__VersionRevision::productId = productId; _p->ns1__VersionRevision::revisionType = revisionType; _p->ns1__VersionRevision::important = important; _p->ns1__VersionRevision::readed = readed; } return _p; }

inline ns1__VersionRevision * soap_new_set_ns1__VersionRevision(struct soap *soap, unsigned int Id, unsigned int productId, char revisionType, unsigned char important, bool readed, char *title, char *contents) { ns1__VersionRevision *_p = soap_instantiate_ns1__VersionRevision(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns1__VersionRevision::Id = Id; _p->ns1__VersionRevision::productId = productId; _p->ns1__VersionRevision::revisionType = revisionType; _p->ns1__VersionRevision::important = important; _p->ns1__VersionRevision::readed = readed; _p->ns1__VersionRevision::title = title; _p->ns1__VersionRevision::contents = contents; } return _p; }

inline void soap_delete_ns1__VersionRevision(struct soap *soap, ns1__VersionRevision *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__VersionRevision(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns1__ArrayOfVersionRevision
#define SOAP_TYPE_ns1__ArrayOfVersionRevision (17)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__ArrayOfVersionRevision(struct soap*, const char*, int, const ns1__ArrayOfVersionRevision *, const char*);
SOAP_FMAC3 ns1__ArrayOfVersionRevision * SOAP_FMAC4 soap_in_ns1__ArrayOfVersionRevision(struct soap*, const char*, ns1__ArrayOfVersionRevision *, const char*);

#ifndef soap_write_ns1__ArrayOfVersionRevision
#define soap_write_ns1__ArrayOfVersionRevision(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:ArrayOfVersionRevision", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns1__ArrayOfVersionRevision * SOAP_FMAC4 soap_get_ns1__ArrayOfVersionRevision(struct soap*, ns1__ArrayOfVersionRevision *, const char*, const char*);

#ifndef soap_read_ns1__ArrayOfVersionRevision
#define soap_read_ns1__ArrayOfVersionRevision(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__ArrayOfVersionRevision(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 ns1__ArrayOfVersionRevision * SOAP_FMAC2 soap_instantiate_ns1__ArrayOfVersionRevision(struct soap*, int, const char*, const char*, size_t*);

inline ns1__ArrayOfVersionRevision * soap_new_ns1__ArrayOfVersionRevision(struct soap *soap, int n = -1) { return soap_instantiate_ns1__ArrayOfVersionRevision(soap, n, NULL, NULL, NULL); }

inline ns1__ArrayOfVersionRevision * soap_new_req_ns1__ArrayOfVersionRevision(struct soap *soap, int __sizeVersionRevision, ns1__VersionRevision **VersionRevision) { ns1__ArrayOfVersionRevision *_p = soap_instantiate_ns1__ArrayOfVersionRevision(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns1__ArrayOfVersionRevision::__sizeVersionRevision = __sizeVersionRevision; _p->ns1__ArrayOfVersionRevision::VersionRevision = VersionRevision; } return _p; }

inline ns1__ArrayOfVersionRevision * soap_new_set_ns1__ArrayOfVersionRevision(struct soap *soap, int __sizeVersionRevision, ns1__VersionRevision **VersionRevision) { ns1__ArrayOfVersionRevision *_p = soap_instantiate_ns1__ArrayOfVersionRevision(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns1__ArrayOfVersionRevision::__sizeVersionRevision = __sizeVersionRevision; _p->ns1__ArrayOfVersionRevision::VersionRevision = VersionRevision; } return _p; }

inline void soap_delete_ns1__ArrayOfVersionRevision(struct soap *soap, ns1__ArrayOfVersionRevision *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__ArrayOfVersionRevision(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns1__ArrayOfInt
#define SOAP_TYPE_ns1__ArrayOfInt (16)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__ArrayOfInt(struct soap*, const char*, int, const ns1__ArrayOfInt *, const char*);
SOAP_FMAC3 ns1__ArrayOfInt * SOAP_FMAC4 soap_in_ns1__ArrayOfInt(struct soap*, const char*, ns1__ArrayOfInt *, const char*);

#ifndef soap_write_ns1__ArrayOfInt
#define soap_write_ns1__ArrayOfInt(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:ArrayOfInt", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns1__ArrayOfInt * SOAP_FMAC4 soap_get_ns1__ArrayOfInt(struct soap*, ns1__ArrayOfInt *, const char*, const char*);

#ifndef soap_read_ns1__ArrayOfInt
#define soap_read_ns1__ArrayOfInt(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__ArrayOfInt(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 ns1__ArrayOfInt * SOAP_FMAC2 soap_instantiate_ns1__ArrayOfInt(struct soap*, int, const char*, const char*, size_t*);

inline ns1__ArrayOfInt * soap_new_ns1__ArrayOfInt(struct soap *soap, int n = -1) { return soap_instantiate_ns1__ArrayOfInt(soap, n, NULL, NULL, NULL); }

inline ns1__ArrayOfInt * soap_new_req_ns1__ArrayOfInt(struct soap *soap, int __sizeint_, int *int_) { ns1__ArrayOfInt *_p = soap_instantiate_ns1__ArrayOfInt(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns1__ArrayOfInt::__sizeint_ = __sizeint_; _p->ns1__ArrayOfInt::int_ = int_; } return _p; }

inline ns1__ArrayOfInt * soap_new_set_ns1__ArrayOfInt(struct soap *soap, int __sizeint_, int *int_) { ns1__ArrayOfInt *_p = soap_instantiate_ns1__ArrayOfInt(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns1__ArrayOfInt::__sizeint_ = __sizeint_; _p->ns1__ArrayOfInt::int_ = int_; } return _p; }

inline void soap_delete_ns1__ArrayOfInt(struct soap *soap, ns1__ArrayOfInt *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__ArrayOfInt(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns1__ProductVersion
#define SOAP_TYPE_ns1__ProductVersion (15)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__ProductVersion(struct soap*, const char*, int, const ns1__ProductVersion *, const char*);
SOAP_FMAC3 ns1__ProductVersion * SOAP_FMAC4 soap_in_ns1__ProductVersion(struct soap*, const char*, ns1__ProductVersion *, const char*);

#ifndef soap_write_ns1__ProductVersion
#define soap_write_ns1__ProductVersion(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:ProductVersion", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns1__ProductVersion * SOAP_FMAC4 soap_get_ns1__ProductVersion(struct soap*, ns1__ProductVersion *, const char*, const char*);

#ifndef soap_read_ns1__ProductVersion
#define soap_read_ns1__ProductVersion(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__ProductVersion(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 ns1__ProductVersion * SOAP_FMAC2 soap_instantiate_ns1__ProductVersion(struct soap*, int, const char*, const char*, size_t*);

inline ns1__ProductVersion * soap_new_ns1__ProductVersion(struct soap *soap, int n = -1) { return soap_instantiate_ns1__ProductVersion(soap, n, NULL, NULL, NULL); }

inline ns1__ProductVersion * soap_new_req_ns1__ProductVersion(struct soap *soap, int id, unsigned int productId, unsigned int version, time_t releaseDate) { ns1__ProductVersion *_p = soap_instantiate_ns1__ProductVersion(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns1__ProductVersion::id = id; _p->ns1__ProductVersion::productId = productId; _p->ns1__ProductVersion::version = version; _p->ns1__ProductVersion::releaseDate = releaseDate; } return _p; }

inline ns1__ProductVersion * soap_new_set_ns1__ProductVersion(struct soap *soap, int id, unsigned int productId, unsigned int version, time_t releaseDate) { ns1__ProductVersion *_p = soap_instantiate_ns1__ProductVersion(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns1__ProductVersion::id = id; _p->ns1__ProductVersion::productId = productId; _p->ns1__ProductVersion::version = version; _p->ns1__ProductVersion::releaseDate = releaseDate; } return _p; }

inline void soap_delete_ns1__ProductVersion(struct soap *soap, ns1__ProductVersion *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__ProductVersion(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns1__ArrayOfProductVersion
#define SOAP_TYPE_ns1__ArrayOfProductVersion (14)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__ArrayOfProductVersion(struct soap*, const char*, int, const ns1__ArrayOfProductVersion *, const char*);
SOAP_FMAC3 ns1__ArrayOfProductVersion * SOAP_FMAC4 soap_in_ns1__ArrayOfProductVersion(struct soap*, const char*, ns1__ArrayOfProductVersion *, const char*);

#ifndef soap_write_ns1__ArrayOfProductVersion
#define soap_write_ns1__ArrayOfProductVersion(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:ArrayOfProductVersion", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns1__ArrayOfProductVersion * SOAP_FMAC4 soap_get_ns1__ArrayOfProductVersion(struct soap*, ns1__ArrayOfProductVersion *, const char*, const char*);

#ifndef soap_read_ns1__ArrayOfProductVersion
#define soap_read_ns1__ArrayOfProductVersion(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__ArrayOfProductVersion(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 ns1__ArrayOfProductVersion * SOAP_FMAC2 soap_instantiate_ns1__ArrayOfProductVersion(struct soap*, int, const char*, const char*, size_t*);

inline ns1__ArrayOfProductVersion * soap_new_ns1__ArrayOfProductVersion(struct soap *soap, int n = -1) { return soap_instantiate_ns1__ArrayOfProductVersion(soap, n, NULL, NULL, NULL); }

inline ns1__ArrayOfProductVersion * soap_new_req_ns1__ArrayOfProductVersion(struct soap *soap, int __sizeProductVersion, ns1__ProductVersion **ProductVersion) { ns1__ArrayOfProductVersion *_p = soap_instantiate_ns1__ArrayOfProductVersion(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns1__ArrayOfProductVersion::__sizeProductVersion = __sizeProductVersion; _p->ns1__ArrayOfProductVersion::ProductVersion = ProductVersion; } return _p; }

inline ns1__ArrayOfProductVersion * soap_new_set_ns1__ArrayOfProductVersion(struct soap *soap, int __sizeProductVersion, ns1__ProductVersion **ProductVersion) { ns1__ArrayOfProductVersion *_p = soap_instantiate_ns1__ArrayOfProductVersion(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns1__ArrayOfProductVersion::__sizeProductVersion = __sizeProductVersion; _p->ns1__ArrayOfProductVersion::ProductVersion = ProductVersion; } return _p; }

inline void soap_delete_ns1__ArrayOfProductVersion(struct soap *soap, ns1__ArrayOfProductVersion *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__ArrayOfProductVersion(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_xsd__base64Binary
#define SOAP_TYPE_xsd__base64Binary (7)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_xsd__base64Binary(struct soap*, const char*, int, const xsd__base64Binary *, const char*);
SOAP_FMAC3 xsd__base64Binary * SOAP_FMAC4 soap_in_xsd__base64Binary(struct soap*, const char*, xsd__base64Binary *, const char*);

#ifndef soap_write_xsd__base64Binary
#define soap_write_xsd__base64Binary(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "xsd:base64Binary", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 xsd__base64Binary * SOAP_FMAC4 soap_get_xsd__base64Binary(struct soap*, xsd__base64Binary *, const char*, const char*);

#ifndef soap_read_xsd__base64Binary
#define soap_read_xsd__base64Binary(soap, data) ( soap_begin_recv(soap) || !soap_get_xsd__base64Binary(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 xsd__base64Binary * SOAP_FMAC2 soap_instantiate_xsd__base64Binary(struct soap*, int, const char*, const char*, size_t*);

inline xsd__base64Binary * soap_new_xsd__base64Binary(struct soap *soap, int n = -1) { return soap_instantiate_xsd__base64Binary(soap, n, NULL, NULL, NULL); }

inline xsd__base64Binary * soap_new_req_xsd__base64Binary(struct soap *soap) { xsd__base64Binary *_p = soap_instantiate_xsd__base64Binary(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline xsd__base64Binary * soap_new_set_xsd__base64Binary(struct soap *soap, unsigned char *__ptr, int __size, char *id, char *type, char *options) { xsd__base64Binary *_p = soap_instantiate_xsd__base64Binary(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->xsd__base64Binary::__ptr = __ptr; _p->xsd__base64Binary::__size = __size; _p->xsd__base64Binary::id = id; _p->xsd__base64Binary::type = type; _p->xsd__base64Binary::options = options; } return _p; }

inline void soap_delete_xsd__base64Binary(struct soap *soap, xsd__base64Binary *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_xsd__base64Binary(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Fault
#define SOAP_TYPE_SOAP_ENV__Fault (143)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Fault(struct soap*, struct SOAP_ENV__Fault *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Fault(struct soap*, const struct SOAP_ENV__Fault *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Fault(struct soap*, const char*, int, const struct SOAP_ENV__Fault *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Fault * SOAP_FMAC4 soap_in_SOAP_ENV__Fault(struct soap*, const char*, struct SOAP_ENV__Fault *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Fault(struct soap*, const struct SOAP_ENV__Fault *, const char*, const char*);

#ifndef soap_write_SOAP_ENV__Fault
#define soap_write_SOAP_ENV__Fault(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Fault(soap, data),0) || soap_put_SOAP_ENV__Fault(soap, data, "SOAP-ENV:Fault", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Fault * SOAP_FMAC4 soap_get_SOAP_ENV__Fault(struct soap*, struct SOAP_ENV__Fault *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Fault
#define soap_read_SOAP_ENV__Fault(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Fault(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct SOAP_ENV__Fault * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Fault(struct soap*, int, const char*, const char*, size_t*);

inline struct SOAP_ENV__Fault * soap_new_SOAP_ENV__Fault(struct soap *soap, int n = -1) { return soap_instantiate_SOAP_ENV__Fault(soap, n, NULL, NULL, NULL); }

inline struct SOAP_ENV__Fault * soap_new_req_SOAP_ENV__Fault(struct soap *soap) { struct SOAP_ENV__Fault *_p = soap_instantiate_SOAP_ENV__Fault(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Fault(soap, _p); } return _p; }

inline struct SOAP_ENV__Fault * soap_new_set_SOAP_ENV__Fault(struct soap *soap, char *faultcode, char *faultstring, char *faultactor, struct SOAP_ENV__Detail *detail, struct SOAP_ENV__Code *SOAP_ENV__Code, struct SOAP_ENV__Reason *SOAP_ENV__Reason, char *SOAP_ENV__Node, char *SOAP_ENV__Role, struct SOAP_ENV__Detail *SOAP_ENV__Detail) { struct SOAP_ENV__Fault *_p = soap_instantiate_SOAP_ENV__Fault(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Fault(soap, _p); _p->faultcode = faultcode; _p->faultstring = faultstring; _p->faultactor = faultactor; _p->detail = detail; _p->SOAP_ENV__Code = SOAP_ENV__Code; _p->SOAP_ENV__Reason = SOAP_ENV__Reason; _p->SOAP_ENV__Node = SOAP_ENV__Node; _p->SOAP_ENV__Role = SOAP_ENV__Role; _p->SOAP_ENV__Detail = SOAP_ENV__Detail; } return _p; }

inline void soap_delete_SOAP_ENV__Fault(struct soap *soap, struct SOAP_ENV__Fault *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Fault(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Reason
#define SOAP_TYPE_SOAP_ENV__Reason (142)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Reason(struct soap*, const struct SOAP_ENV__Reason *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Reason(struct soap*, const char*, int, const struct SOAP_ENV__Reason *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Reason * SOAP_FMAC4 soap_in_SOAP_ENV__Reason(struct soap*, const char*, struct SOAP_ENV__Reason *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Reason(struct soap*, const struct SOAP_ENV__Reason *, const char*, const char*);

#ifndef soap_write_SOAP_ENV__Reason
#define soap_write_SOAP_ENV__Reason(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Reason(soap, data),0) || soap_put_SOAP_ENV__Reason(soap, data, "SOAP-ENV:Reason", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Reason * SOAP_FMAC4 soap_get_SOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Reason
#define soap_read_SOAP_ENV__Reason(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Reason(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct SOAP_ENV__Reason * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Reason(struct soap*, int, const char*, const char*, size_t*);

inline struct SOAP_ENV__Reason * soap_new_SOAP_ENV__Reason(struct soap *soap, int n = -1) { return soap_instantiate_SOAP_ENV__Reason(soap, n, NULL, NULL, NULL); }

inline struct SOAP_ENV__Reason * soap_new_req_SOAP_ENV__Reason(struct soap *soap) { struct SOAP_ENV__Reason *_p = soap_instantiate_SOAP_ENV__Reason(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Reason(soap, _p); } return _p; }

inline struct SOAP_ENV__Reason * soap_new_set_SOAP_ENV__Reason(struct soap *soap, char *SOAP_ENV__Text) { struct SOAP_ENV__Reason *_p = soap_instantiate_SOAP_ENV__Reason(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Reason(soap, _p); _p->SOAP_ENV__Text = SOAP_ENV__Text; } return _p; }

inline void soap_delete_SOAP_ENV__Reason(struct soap *soap, struct SOAP_ENV__Reason *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Reason(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Detail
#define SOAP_TYPE_SOAP_ENV__Detail (139)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Detail(struct soap*, const struct SOAP_ENV__Detail *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Detail(struct soap*, const char*, int, const struct SOAP_ENV__Detail *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Detail * SOAP_FMAC4 soap_in_SOAP_ENV__Detail(struct soap*, const char*, struct SOAP_ENV__Detail *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Detail(struct soap*, const struct SOAP_ENV__Detail *, const char*, const char*);

#ifndef soap_write_SOAP_ENV__Detail
#define soap_write_SOAP_ENV__Detail(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Detail(soap, data),0) || soap_put_SOAP_ENV__Detail(soap, data, "SOAP-ENV:Detail", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Detail * SOAP_FMAC4 soap_get_SOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Detail
#define soap_read_SOAP_ENV__Detail(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Detail(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct SOAP_ENV__Detail * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Detail(struct soap*, int, const char*, const char*, size_t*);

inline struct SOAP_ENV__Detail * soap_new_SOAP_ENV__Detail(struct soap *soap, int n = -1) { return soap_instantiate_SOAP_ENV__Detail(soap, n, NULL, NULL, NULL); }

inline struct SOAP_ENV__Detail * soap_new_req_SOAP_ENV__Detail(struct soap *soap, int __type, void *fault) { struct SOAP_ENV__Detail *_p = soap_instantiate_SOAP_ENV__Detail(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Detail(soap, _p); _p->__type = __type; _p->fault = fault; } return _p; }

inline struct SOAP_ENV__Detail * soap_new_set_SOAP_ENV__Detail(struct soap *soap, char *__any, int __type, void *fault) { struct SOAP_ENV__Detail *_p = soap_instantiate_SOAP_ENV__Detail(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Detail(soap, _p); _p->__any = __any; _p->__type = __type; _p->fault = fault; } return _p; }

inline void soap_delete_SOAP_ENV__Detail(struct soap *soap, struct SOAP_ENV__Detail *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Detail(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Code
#define SOAP_TYPE_SOAP_ENV__Code (137)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Code(struct soap*, const struct SOAP_ENV__Code *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Code(struct soap*, const char*, int, const struct SOAP_ENV__Code *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Code * SOAP_FMAC4 soap_in_SOAP_ENV__Code(struct soap*, const char*, struct SOAP_ENV__Code *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Code(struct soap*, const struct SOAP_ENV__Code *, const char*, const char*);

#ifndef soap_write_SOAP_ENV__Code
#define soap_write_SOAP_ENV__Code(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Code(soap, data),0) || soap_put_SOAP_ENV__Code(soap, data, "SOAP-ENV:Code", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Code * SOAP_FMAC4 soap_get_SOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Code
#define soap_read_SOAP_ENV__Code(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Code(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct SOAP_ENV__Code * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Code(struct soap*, int, const char*, const char*, size_t*);

inline struct SOAP_ENV__Code * soap_new_SOAP_ENV__Code(struct soap *soap, int n = -1) { return soap_instantiate_SOAP_ENV__Code(soap, n, NULL, NULL, NULL); }

inline struct SOAP_ENV__Code * soap_new_req_SOAP_ENV__Code(struct soap *soap) { struct SOAP_ENV__Code *_p = soap_instantiate_SOAP_ENV__Code(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Code(soap, _p); } return _p; }

inline struct SOAP_ENV__Code * soap_new_set_SOAP_ENV__Code(struct soap *soap, char *SOAP_ENV__Value, struct SOAP_ENV__Code *SOAP_ENV__Subcode) { struct SOAP_ENV__Code *_p = soap_instantiate_SOAP_ENV__Code(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Code(soap, _p); _p->SOAP_ENV__Value = SOAP_ENV__Value; _p->SOAP_ENV__Subcode = SOAP_ENV__Subcode; } return _p; }

inline void soap_delete_SOAP_ENV__Code(struct soap *soap, struct SOAP_ENV__Code *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Code(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Header
#define SOAP_TYPE_SOAP_ENV__Header (136)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Header(struct soap*, struct SOAP_ENV__Header *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Header(struct soap*, const struct SOAP_ENV__Header *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Header(struct soap*, const char*, int, const struct SOAP_ENV__Header *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Header * SOAP_FMAC4 soap_in_SOAP_ENV__Header(struct soap*, const char*, struct SOAP_ENV__Header *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Header(struct soap*, const struct SOAP_ENV__Header *, const char*, const char*);

#ifndef soap_write_SOAP_ENV__Header
#define soap_write_SOAP_ENV__Header(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Header(soap, data),0) || soap_put_SOAP_ENV__Header(soap, data, "SOAP-ENV:Header", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Header * SOAP_FMAC4 soap_get_SOAP_ENV__Header(struct soap*, struct SOAP_ENV__Header *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Header
#define soap_read_SOAP_ENV__Header(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Header(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct SOAP_ENV__Header * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Header(struct soap*, int, const char*, const char*, size_t*);

inline struct SOAP_ENV__Header * soap_new_SOAP_ENV__Header(struct soap *soap, int n = -1) { return soap_instantiate_SOAP_ENV__Header(soap, n, NULL, NULL, NULL); }

inline struct SOAP_ENV__Header * soap_new_req_SOAP_ENV__Header(struct soap *soap) { struct SOAP_ENV__Header *_p = soap_instantiate_SOAP_ENV__Header(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Header(soap, _p); } return _p; }

inline struct SOAP_ENV__Header * soap_new_set_SOAP_ENV__Header(struct soap *soap) { struct SOAP_ENV__Header *_p = soap_instantiate_SOAP_ENV__Header(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Header(soap, _p); } return _p; }

inline void soap_delete_SOAP_ENV__Header(struct soap *soap, struct SOAP_ENV__Header *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Header(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef SOAP_TYPE___ns1__SaveOrUpdateObjects_
#define SOAP_TYPE___ns1__SaveOrUpdateObjects_ (135)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__SaveOrUpdateObjects_(struct soap*, struct __ns1__SaveOrUpdateObjects_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__SaveOrUpdateObjects_(struct soap*, const struct __ns1__SaveOrUpdateObjects_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__SaveOrUpdateObjects_(struct soap*, const char*, int, const struct __ns1__SaveOrUpdateObjects_ *, const char*);
SOAP_FMAC3 struct __ns1__SaveOrUpdateObjects_ * SOAP_FMAC4 soap_in___ns1__SaveOrUpdateObjects_(struct soap*, const char*, struct __ns1__SaveOrUpdateObjects_ *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__SaveOrUpdateObjects_(struct soap*, const struct __ns1__SaveOrUpdateObjects_ *, const char*, const char*);

#ifndef soap_write___ns1__SaveOrUpdateObjects_
#define soap_write___ns1__SaveOrUpdateObjects_(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__SaveOrUpdateObjects_(soap, data),0) || soap_put___ns1__SaveOrUpdateObjects_(soap, data, "-ns1:SaveOrUpdateObjects", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__SaveOrUpdateObjects_ * SOAP_FMAC4 soap_get___ns1__SaveOrUpdateObjects_(struct soap*, struct __ns1__SaveOrUpdateObjects_ *, const char*, const char*);

#ifndef soap_read___ns1__SaveOrUpdateObjects_
#define soap_read___ns1__SaveOrUpdateObjects_(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__SaveOrUpdateObjects_(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns1__SaveOrUpdateObjects_ * SOAP_FMAC2 soap_instantiate___ns1__SaveOrUpdateObjects_(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__SaveOrUpdateObjects_ * soap_new___ns1__SaveOrUpdateObjects_(struct soap *soap, int n = -1) { return soap_instantiate___ns1__SaveOrUpdateObjects_(soap, n, NULL, NULL, NULL); }

inline struct __ns1__SaveOrUpdateObjects_ * soap_new_req___ns1__SaveOrUpdateObjects_(struct soap *soap) { struct __ns1__SaveOrUpdateObjects_ *_p = soap_instantiate___ns1__SaveOrUpdateObjects_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__SaveOrUpdateObjects_(soap, _p); } return _p; }

inline struct __ns1__SaveOrUpdateObjects_ * soap_new_set___ns1__SaveOrUpdateObjects_(struct soap *soap, _ns1__SaveOrUpdateObjects *ns1__SaveOrUpdateObjects) { struct __ns1__SaveOrUpdateObjects_ *_p = soap_instantiate___ns1__SaveOrUpdateObjects_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__SaveOrUpdateObjects_(soap, _p); _p->ns1__SaveOrUpdateObjects = ns1__SaveOrUpdateObjects; } return _p; }

inline void soap_delete___ns1__SaveOrUpdateObjects_(struct soap *soap, struct __ns1__SaveOrUpdateObjects_ *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__SaveOrUpdateObjects_(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__DownloadObjects_
#define SOAP_TYPE___ns1__DownloadObjects_ (133)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__DownloadObjects_(struct soap*, struct __ns1__DownloadObjects_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__DownloadObjects_(struct soap*, const struct __ns1__DownloadObjects_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__DownloadObjects_(struct soap*, const char*, int, const struct __ns1__DownloadObjects_ *, const char*);
SOAP_FMAC3 struct __ns1__DownloadObjects_ * SOAP_FMAC4 soap_in___ns1__DownloadObjects_(struct soap*, const char*, struct __ns1__DownloadObjects_ *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__DownloadObjects_(struct soap*, const struct __ns1__DownloadObjects_ *, const char*, const char*);

#ifndef soap_write___ns1__DownloadObjects_
#define soap_write___ns1__DownloadObjects_(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__DownloadObjects_(soap, data),0) || soap_put___ns1__DownloadObjects_(soap, data, "-ns1:DownloadObjects", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__DownloadObjects_ * SOAP_FMAC4 soap_get___ns1__DownloadObjects_(struct soap*, struct __ns1__DownloadObjects_ *, const char*, const char*);

#ifndef soap_read___ns1__DownloadObjects_
#define soap_read___ns1__DownloadObjects_(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__DownloadObjects_(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns1__DownloadObjects_ * SOAP_FMAC2 soap_instantiate___ns1__DownloadObjects_(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__DownloadObjects_ * soap_new___ns1__DownloadObjects_(struct soap *soap, int n = -1) { return soap_instantiate___ns1__DownloadObjects_(soap, n, NULL, NULL, NULL); }

inline struct __ns1__DownloadObjects_ * soap_new_req___ns1__DownloadObjects_(struct soap *soap) { struct __ns1__DownloadObjects_ *_p = soap_instantiate___ns1__DownloadObjects_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__DownloadObjects_(soap, _p); } return _p; }

inline struct __ns1__DownloadObjects_ * soap_new_set___ns1__DownloadObjects_(struct soap *soap, _ns1__DownloadObjects *ns1__DownloadObjects) { struct __ns1__DownloadObjects_ *_p = soap_instantiate___ns1__DownloadObjects_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__DownloadObjects_(soap, _p); _p->ns1__DownloadObjects = ns1__DownloadObjects; } return _p; }

inline void soap_delete___ns1__DownloadObjects_(struct soap *soap, struct __ns1__DownloadObjects_ *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__DownloadObjects_(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__QueryObjects_
#define SOAP_TYPE___ns1__QueryObjects_ (131)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__QueryObjects_(struct soap*, struct __ns1__QueryObjects_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__QueryObjects_(struct soap*, const struct __ns1__QueryObjects_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__QueryObjects_(struct soap*, const char*, int, const struct __ns1__QueryObjects_ *, const char*);
SOAP_FMAC3 struct __ns1__QueryObjects_ * SOAP_FMAC4 soap_in___ns1__QueryObjects_(struct soap*, const char*, struct __ns1__QueryObjects_ *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__QueryObjects_(struct soap*, const struct __ns1__QueryObjects_ *, const char*, const char*);

#ifndef soap_write___ns1__QueryObjects_
#define soap_write___ns1__QueryObjects_(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__QueryObjects_(soap, data),0) || soap_put___ns1__QueryObjects_(soap, data, "-ns1:QueryObjects", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__QueryObjects_ * SOAP_FMAC4 soap_get___ns1__QueryObjects_(struct soap*, struct __ns1__QueryObjects_ *, const char*, const char*);

#ifndef soap_read___ns1__QueryObjects_
#define soap_read___ns1__QueryObjects_(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__QueryObjects_(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns1__QueryObjects_ * SOAP_FMAC2 soap_instantiate___ns1__QueryObjects_(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__QueryObjects_ * soap_new___ns1__QueryObjects_(struct soap *soap, int n = -1) { return soap_instantiate___ns1__QueryObjects_(soap, n, NULL, NULL, NULL); }

inline struct __ns1__QueryObjects_ * soap_new_req___ns1__QueryObjects_(struct soap *soap) { struct __ns1__QueryObjects_ *_p = soap_instantiate___ns1__QueryObjects_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__QueryObjects_(soap, _p); } return _p; }

inline struct __ns1__QueryObjects_ * soap_new_set___ns1__QueryObjects_(struct soap *soap, _ns1__QueryObjects *ns1__QueryObjects) { struct __ns1__QueryObjects_ *_p = soap_instantiate___ns1__QueryObjects_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__QueryObjects_(soap, _p); _p->ns1__QueryObjects = ns1__QueryObjects; } return _p; }

inline void soap_delete___ns1__QueryObjects_(struct soap *soap, struct __ns1__QueryObjects_ *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__QueryObjects_(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__GetFileHeader_
#define SOAP_TYPE___ns1__GetFileHeader_ (129)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__GetFileHeader_(struct soap*, struct __ns1__GetFileHeader_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__GetFileHeader_(struct soap*, const struct __ns1__GetFileHeader_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__GetFileHeader_(struct soap*, const char*, int, const struct __ns1__GetFileHeader_ *, const char*);
SOAP_FMAC3 struct __ns1__GetFileHeader_ * SOAP_FMAC4 soap_in___ns1__GetFileHeader_(struct soap*, const char*, struct __ns1__GetFileHeader_ *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__GetFileHeader_(struct soap*, const struct __ns1__GetFileHeader_ *, const char*, const char*);

#ifndef soap_write___ns1__GetFileHeader_
#define soap_write___ns1__GetFileHeader_(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__GetFileHeader_(soap, data),0) || soap_put___ns1__GetFileHeader_(soap, data, "-ns1:GetFileHeader", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__GetFileHeader_ * SOAP_FMAC4 soap_get___ns1__GetFileHeader_(struct soap*, struct __ns1__GetFileHeader_ *, const char*, const char*);

#ifndef soap_read___ns1__GetFileHeader_
#define soap_read___ns1__GetFileHeader_(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__GetFileHeader_(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns1__GetFileHeader_ * SOAP_FMAC2 soap_instantiate___ns1__GetFileHeader_(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__GetFileHeader_ * soap_new___ns1__GetFileHeader_(struct soap *soap, int n = -1) { return soap_instantiate___ns1__GetFileHeader_(soap, n, NULL, NULL, NULL); }

inline struct __ns1__GetFileHeader_ * soap_new_req___ns1__GetFileHeader_(struct soap *soap) { struct __ns1__GetFileHeader_ *_p = soap_instantiate___ns1__GetFileHeader_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__GetFileHeader_(soap, _p); } return _p; }

inline struct __ns1__GetFileHeader_ * soap_new_set___ns1__GetFileHeader_(struct soap *soap, _ns1__GetFileHeader *ns1__GetFileHeader) { struct __ns1__GetFileHeader_ *_p = soap_instantiate___ns1__GetFileHeader_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__GetFileHeader_(soap, _p); _p->ns1__GetFileHeader = ns1__GetFileHeader; } return _p; }

inline void soap_delete___ns1__GetFileHeader_(struct soap *soap, struct __ns1__GetFileHeader_ *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__GetFileHeader_(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__QueryDownLoadItemArrByProductId_
#define SOAP_TYPE___ns1__QueryDownLoadItemArrByProductId_ (127)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__QueryDownLoadItemArrByProductId_(struct soap*, struct __ns1__QueryDownLoadItemArrByProductId_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__QueryDownLoadItemArrByProductId_(struct soap*, const struct __ns1__QueryDownLoadItemArrByProductId_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__QueryDownLoadItemArrByProductId_(struct soap*, const char*, int, const struct __ns1__QueryDownLoadItemArrByProductId_ *, const char*);
SOAP_FMAC3 struct __ns1__QueryDownLoadItemArrByProductId_ * SOAP_FMAC4 soap_in___ns1__QueryDownLoadItemArrByProductId_(struct soap*, const char*, struct __ns1__QueryDownLoadItemArrByProductId_ *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__QueryDownLoadItemArrByProductId_(struct soap*, const struct __ns1__QueryDownLoadItemArrByProductId_ *, const char*, const char*);

#ifndef soap_write___ns1__QueryDownLoadItemArrByProductId_
#define soap_write___ns1__QueryDownLoadItemArrByProductId_(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__QueryDownLoadItemArrByProductId_(soap, data),0) || soap_put___ns1__QueryDownLoadItemArrByProductId_(soap, data, "-ns1:QueryDownLoadItemArrByProductId", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__QueryDownLoadItemArrByProductId_ * SOAP_FMAC4 soap_get___ns1__QueryDownLoadItemArrByProductId_(struct soap*, struct __ns1__QueryDownLoadItemArrByProductId_ *, const char*, const char*);

#ifndef soap_read___ns1__QueryDownLoadItemArrByProductId_
#define soap_read___ns1__QueryDownLoadItemArrByProductId_(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__QueryDownLoadItemArrByProductId_(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns1__QueryDownLoadItemArrByProductId_ * SOAP_FMAC2 soap_instantiate___ns1__QueryDownLoadItemArrByProductId_(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__QueryDownLoadItemArrByProductId_ * soap_new___ns1__QueryDownLoadItemArrByProductId_(struct soap *soap, int n = -1) { return soap_instantiate___ns1__QueryDownLoadItemArrByProductId_(soap, n, NULL, NULL, NULL); }

inline struct __ns1__QueryDownLoadItemArrByProductId_ * soap_new_req___ns1__QueryDownLoadItemArrByProductId_(struct soap *soap) { struct __ns1__QueryDownLoadItemArrByProductId_ *_p = soap_instantiate___ns1__QueryDownLoadItemArrByProductId_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__QueryDownLoadItemArrByProductId_(soap, _p); } return _p; }

inline struct __ns1__QueryDownLoadItemArrByProductId_ * soap_new_set___ns1__QueryDownLoadItemArrByProductId_(struct soap *soap, _ns1__QueryDownLoadItemArrByProductId *ns1__QueryDownLoadItemArrByProductId) { struct __ns1__QueryDownLoadItemArrByProductId_ *_p = soap_instantiate___ns1__QueryDownLoadItemArrByProductId_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__QueryDownLoadItemArrByProductId_(soap, _p); _p->ns1__QueryDownLoadItemArrByProductId = ns1__QueryDownLoadItemArrByProductId; } return _p; }

inline void soap_delete___ns1__QueryDownLoadItemArrByProductId_(struct soap *soap, struct __ns1__QueryDownLoadItemArrByProductId_ *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__QueryDownLoadItemArrByProductId_(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__GetDogAccessHistory_
#define SOAP_TYPE___ns1__GetDogAccessHistory_ (125)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__GetDogAccessHistory_(struct soap*, struct __ns1__GetDogAccessHistory_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__GetDogAccessHistory_(struct soap*, const struct __ns1__GetDogAccessHistory_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__GetDogAccessHistory_(struct soap*, const char*, int, const struct __ns1__GetDogAccessHistory_ *, const char*);
SOAP_FMAC3 struct __ns1__GetDogAccessHistory_ * SOAP_FMAC4 soap_in___ns1__GetDogAccessHistory_(struct soap*, const char*, struct __ns1__GetDogAccessHistory_ *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__GetDogAccessHistory_(struct soap*, const struct __ns1__GetDogAccessHistory_ *, const char*, const char*);

#ifndef soap_write___ns1__GetDogAccessHistory_
#define soap_write___ns1__GetDogAccessHistory_(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__GetDogAccessHistory_(soap, data),0) || soap_put___ns1__GetDogAccessHistory_(soap, data, "-ns1:GetDogAccessHistory", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__GetDogAccessHistory_ * SOAP_FMAC4 soap_get___ns1__GetDogAccessHistory_(struct soap*, struct __ns1__GetDogAccessHistory_ *, const char*, const char*);

#ifndef soap_read___ns1__GetDogAccessHistory_
#define soap_read___ns1__GetDogAccessHistory_(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__GetDogAccessHistory_(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns1__GetDogAccessHistory_ * SOAP_FMAC2 soap_instantiate___ns1__GetDogAccessHistory_(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__GetDogAccessHistory_ * soap_new___ns1__GetDogAccessHistory_(struct soap *soap, int n = -1) { return soap_instantiate___ns1__GetDogAccessHistory_(soap, n, NULL, NULL, NULL); }

inline struct __ns1__GetDogAccessHistory_ * soap_new_req___ns1__GetDogAccessHistory_(struct soap *soap) { struct __ns1__GetDogAccessHistory_ *_p = soap_instantiate___ns1__GetDogAccessHistory_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__GetDogAccessHistory_(soap, _p); } return _p; }

inline struct __ns1__GetDogAccessHistory_ * soap_new_set___ns1__GetDogAccessHistory_(struct soap *soap, _ns1__GetDogAccessHistory *ns1__GetDogAccessHistory) { struct __ns1__GetDogAccessHistory_ *_p = soap_instantiate___ns1__GetDogAccessHistory_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__GetDogAccessHistory_(soap, _p); _p->ns1__GetDogAccessHistory = ns1__GetDogAccessHistory; } return _p; }

inline void soap_delete___ns1__GetDogAccessHistory_(struct soap *soap, struct __ns1__GetDogAccessHistory_ *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__GetDogAccessHistory_(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__GetVersionReleaseNotes_
#define SOAP_TYPE___ns1__GetVersionReleaseNotes_ (123)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__GetVersionReleaseNotes_(struct soap*, struct __ns1__GetVersionReleaseNotes_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__GetVersionReleaseNotes_(struct soap*, const struct __ns1__GetVersionReleaseNotes_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__GetVersionReleaseNotes_(struct soap*, const char*, int, const struct __ns1__GetVersionReleaseNotes_ *, const char*);
SOAP_FMAC3 struct __ns1__GetVersionReleaseNotes_ * SOAP_FMAC4 soap_in___ns1__GetVersionReleaseNotes_(struct soap*, const char*, struct __ns1__GetVersionReleaseNotes_ *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__GetVersionReleaseNotes_(struct soap*, const struct __ns1__GetVersionReleaseNotes_ *, const char*, const char*);

#ifndef soap_write___ns1__GetVersionReleaseNotes_
#define soap_write___ns1__GetVersionReleaseNotes_(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__GetVersionReleaseNotes_(soap, data),0) || soap_put___ns1__GetVersionReleaseNotes_(soap, data, "-ns1:GetVersionReleaseNotes", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__GetVersionReleaseNotes_ * SOAP_FMAC4 soap_get___ns1__GetVersionReleaseNotes_(struct soap*, struct __ns1__GetVersionReleaseNotes_ *, const char*, const char*);

#ifndef soap_read___ns1__GetVersionReleaseNotes_
#define soap_read___ns1__GetVersionReleaseNotes_(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__GetVersionReleaseNotes_(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns1__GetVersionReleaseNotes_ * SOAP_FMAC2 soap_instantiate___ns1__GetVersionReleaseNotes_(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__GetVersionReleaseNotes_ * soap_new___ns1__GetVersionReleaseNotes_(struct soap *soap, int n = -1) { return soap_instantiate___ns1__GetVersionReleaseNotes_(soap, n, NULL, NULL, NULL); }

inline struct __ns1__GetVersionReleaseNotes_ * soap_new_req___ns1__GetVersionReleaseNotes_(struct soap *soap) { struct __ns1__GetVersionReleaseNotes_ *_p = soap_instantiate___ns1__GetVersionReleaseNotes_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__GetVersionReleaseNotes_(soap, _p); } return _p; }

inline struct __ns1__GetVersionReleaseNotes_ * soap_new_set___ns1__GetVersionReleaseNotes_(struct soap *soap, _ns1__GetVersionReleaseNotes *ns1__GetVersionReleaseNotes) { struct __ns1__GetVersionReleaseNotes_ *_p = soap_instantiate___ns1__GetVersionReleaseNotes_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__GetVersionReleaseNotes_(soap, _p); _p->ns1__GetVersionReleaseNotes = ns1__GetVersionReleaseNotes; } return _p; }

inline void soap_delete___ns1__GetVersionReleaseNotes_(struct soap *soap, struct __ns1__GetVersionReleaseNotes_ *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__GetVersionReleaseNotes_(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__CompareVersion_
#define SOAP_TYPE___ns1__CompareVersion_ (121)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__CompareVersion_(struct soap*, struct __ns1__CompareVersion_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__CompareVersion_(struct soap*, const struct __ns1__CompareVersion_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__CompareVersion_(struct soap*, const char*, int, const struct __ns1__CompareVersion_ *, const char*);
SOAP_FMAC3 struct __ns1__CompareVersion_ * SOAP_FMAC4 soap_in___ns1__CompareVersion_(struct soap*, const char*, struct __ns1__CompareVersion_ *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__CompareVersion_(struct soap*, const struct __ns1__CompareVersion_ *, const char*, const char*);

#ifndef soap_write___ns1__CompareVersion_
#define soap_write___ns1__CompareVersion_(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__CompareVersion_(soap, data),0) || soap_put___ns1__CompareVersion_(soap, data, "-ns1:CompareVersion", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__CompareVersion_ * SOAP_FMAC4 soap_get___ns1__CompareVersion_(struct soap*, struct __ns1__CompareVersion_ *, const char*, const char*);

#ifndef soap_read___ns1__CompareVersion_
#define soap_read___ns1__CompareVersion_(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__CompareVersion_(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns1__CompareVersion_ * SOAP_FMAC2 soap_instantiate___ns1__CompareVersion_(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__CompareVersion_ * soap_new___ns1__CompareVersion_(struct soap *soap, int n = -1) { return soap_instantiate___ns1__CompareVersion_(soap, n, NULL, NULL, NULL); }

inline struct __ns1__CompareVersion_ * soap_new_req___ns1__CompareVersion_(struct soap *soap) { struct __ns1__CompareVersion_ *_p = soap_instantiate___ns1__CompareVersion_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__CompareVersion_(soap, _p); } return _p; }

inline struct __ns1__CompareVersion_ * soap_new_set___ns1__CompareVersion_(struct soap *soap, _ns1__CompareVersion *ns1__CompareVersion) { struct __ns1__CompareVersion_ *_p = soap_instantiate___ns1__CompareVersion_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__CompareVersion_(soap, _p); _p->ns1__CompareVersion = ns1__CompareVersion; } return _p; }

inline void soap_delete___ns1__CompareVersion_(struct soap *soap, struct __ns1__CompareVersion_ *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__CompareVersion_(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__SetRevisionReadFlag_
#define SOAP_TYPE___ns1__SetRevisionReadFlag_ (119)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__SetRevisionReadFlag_(struct soap*, struct __ns1__SetRevisionReadFlag_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__SetRevisionReadFlag_(struct soap*, const struct __ns1__SetRevisionReadFlag_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__SetRevisionReadFlag_(struct soap*, const char*, int, const struct __ns1__SetRevisionReadFlag_ *, const char*);
SOAP_FMAC3 struct __ns1__SetRevisionReadFlag_ * SOAP_FMAC4 soap_in___ns1__SetRevisionReadFlag_(struct soap*, const char*, struct __ns1__SetRevisionReadFlag_ *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__SetRevisionReadFlag_(struct soap*, const struct __ns1__SetRevisionReadFlag_ *, const char*, const char*);

#ifndef soap_write___ns1__SetRevisionReadFlag_
#define soap_write___ns1__SetRevisionReadFlag_(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__SetRevisionReadFlag_(soap, data),0) || soap_put___ns1__SetRevisionReadFlag_(soap, data, "-ns1:SetRevisionReadFlag", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__SetRevisionReadFlag_ * SOAP_FMAC4 soap_get___ns1__SetRevisionReadFlag_(struct soap*, struct __ns1__SetRevisionReadFlag_ *, const char*, const char*);

#ifndef soap_read___ns1__SetRevisionReadFlag_
#define soap_read___ns1__SetRevisionReadFlag_(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__SetRevisionReadFlag_(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns1__SetRevisionReadFlag_ * SOAP_FMAC2 soap_instantiate___ns1__SetRevisionReadFlag_(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__SetRevisionReadFlag_ * soap_new___ns1__SetRevisionReadFlag_(struct soap *soap, int n = -1) { return soap_instantiate___ns1__SetRevisionReadFlag_(soap, n, NULL, NULL, NULL); }

inline struct __ns1__SetRevisionReadFlag_ * soap_new_req___ns1__SetRevisionReadFlag_(struct soap *soap) { struct __ns1__SetRevisionReadFlag_ *_p = soap_instantiate___ns1__SetRevisionReadFlag_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__SetRevisionReadFlag_(soap, _p); } return _p; }

inline struct __ns1__SetRevisionReadFlag_ * soap_new_set___ns1__SetRevisionReadFlag_(struct soap *soap, _ns1__SetRevisionReadFlag *ns1__SetRevisionReadFlag) { struct __ns1__SetRevisionReadFlag_ *_p = soap_instantiate___ns1__SetRevisionReadFlag_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__SetRevisionReadFlag_(soap, _p); _p->ns1__SetRevisionReadFlag = ns1__SetRevisionReadFlag; } return _p; }

inline void soap_delete___ns1__SetRevisionReadFlag_(struct soap *soap, struct __ns1__SetRevisionReadFlag_ *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__SetRevisionReadFlag_(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__GetUpdateVerByCurVer_
#define SOAP_TYPE___ns1__GetUpdateVerByCurVer_ (117)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__GetUpdateVerByCurVer_(struct soap*, struct __ns1__GetUpdateVerByCurVer_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__GetUpdateVerByCurVer_(struct soap*, const struct __ns1__GetUpdateVerByCurVer_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__GetUpdateVerByCurVer_(struct soap*, const char*, int, const struct __ns1__GetUpdateVerByCurVer_ *, const char*);
SOAP_FMAC3 struct __ns1__GetUpdateVerByCurVer_ * SOAP_FMAC4 soap_in___ns1__GetUpdateVerByCurVer_(struct soap*, const char*, struct __ns1__GetUpdateVerByCurVer_ *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__GetUpdateVerByCurVer_(struct soap*, const struct __ns1__GetUpdateVerByCurVer_ *, const char*, const char*);

#ifndef soap_write___ns1__GetUpdateVerByCurVer_
#define soap_write___ns1__GetUpdateVerByCurVer_(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__GetUpdateVerByCurVer_(soap, data),0) || soap_put___ns1__GetUpdateVerByCurVer_(soap, data, "-ns1:GetUpdateVerByCurVer", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__GetUpdateVerByCurVer_ * SOAP_FMAC4 soap_get___ns1__GetUpdateVerByCurVer_(struct soap*, struct __ns1__GetUpdateVerByCurVer_ *, const char*, const char*);

#ifndef soap_read___ns1__GetUpdateVerByCurVer_
#define soap_read___ns1__GetUpdateVerByCurVer_(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__GetUpdateVerByCurVer_(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns1__GetUpdateVerByCurVer_ * SOAP_FMAC2 soap_instantiate___ns1__GetUpdateVerByCurVer_(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__GetUpdateVerByCurVer_ * soap_new___ns1__GetUpdateVerByCurVer_(struct soap *soap, int n = -1) { return soap_instantiate___ns1__GetUpdateVerByCurVer_(soap, n, NULL, NULL, NULL); }

inline struct __ns1__GetUpdateVerByCurVer_ * soap_new_req___ns1__GetUpdateVerByCurVer_(struct soap *soap) { struct __ns1__GetUpdateVerByCurVer_ *_p = soap_instantiate___ns1__GetUpdateVerByCurVer_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__GetUpdateVerByCurVer_(soap, _p); } return _p; }

inline struct __ns1__GetUpdateVerByCurVer_ * soap_new_set___ns1__GetUpdateVerByCurVer_(struct soap *soap, _ns1__GetUpdateVerByCurVer *ns1__GetUpdateVerByCurVer) { struct __ns1__GetUpdateVerByCurVer_ *_p = soap_instantiate___ns1__GetUpdateVerByCurVer_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__GetUpdateVerByCurVer_(soap, _p); _p->ns1__GetUpdateVerByCurVer = ns1__GetUpdateVerByCurVer; } return _p; }

inline void soap_delete___ns1__GetUpdateVerByCurVer_(struct soap *soap, struct __ns1__GetUpdateVerByCurVer_ *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__GetUpdateVerByCurVer_(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__LoginByByteArr_
#define SOAP_TYPE___ns1__LoginByByteArr_ (115)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__LoginByByteArr_(struct soap*, struct __ns1__LoginByByteArr_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__LoginByByteArr_(struct soap*, const struct __ns1__LoginByByteArr_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__LoginByByteArr_(struct soap*, const char*, int, const struct __ns1__LoginByByteArr_ *, const char*);
SOAP_FMAC3 struct __ns1__LoginByByteArr_ * SOAP_FMAC4 soap_in___ns1__LoginByByteArr_(struct soap*, const char*, struct __ns1__LoginByByteArr_ *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__LoginByByteArr_(struct soap*, const struct __ns1__LoginByByteArr_ *, const char*, const char*);

#ifndef soap_write___ns1__LoginByByteArr_
#define soap_write___ns1__LoginByByteArr_(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__LoginByByteArr_(soap, data),0) || soap_put___ns1__LoginByByteArr_(soap, data, "-ns1:LoginByByteArr", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__LoginByByteArr_ * SOAP_FMAC4 soap_get___ns1__LoginByByteArr_(struct soap*, struct __ns1__LoginByByteArr_ *, const char*, const char*);

#ifndef soap_read___ns1__LoginByByteArr_
#define soap_read___ns1__LoginByByteArr_(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__LoginByByteArr_(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns1__LoginByByteArr_ * SOAP_FMAC2 soap_instantiate___ns1__LoginByByteArr_(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__LoginByByteArr_ * soap_new___ns1__LoginByByteArr_(struct soap *soap, int n = -1) { return soap_instantiate___ns1__LoginByByteArr_(soap, n, NULL, NULL, NULL); }

inline struct __ns1__LoginByByteArr_ * soap_new_req___ns1__LoginByByteArr_(struct soap *soap) { struct __ns1__LoginByByteArr_ *_p = soap_instantiate___ns1__LoginByByteArr_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__LoginByByteArr_(soap, _p); } return _p; }

inline struct __ns1__LoginByByteArr_ * soap_new_set___ns1__LoginByByteArr_(struct soap *soap, _ns1__LoginByByteArr *ns1__LoginByByteArr) { struct __ns1__LoginByByteArr_ *_p = soap_instantiate___ns1__LoginByByteArr_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__LoginByByteArr_(soap, _p); _p->ns1__LoginByByteArr = ns1__LoginByByteArr; } return _p; }

inline void soap_delete___ns1__LoginByByteArr_(struct soap *soap, struct __ns1__LoginByByteArr_ *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__LoginByByteArr_(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__Login_
#define SOAP_TYPE___ns1__Login_ (113)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__Login_(struct soap*, struct __ns1__Login_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__Login_(struct soap*, const struct __ns1__Login_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__Login_(struct soap*, const char*, int, const struct __ns1__Login_ *, const char*);
SOAP_FMAC3 struct __ns1__Login_ * SOAP_FMAC4 soap_in___ns1__Login_(struct soap*, const char*, struct __ns1__Login_ *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__Login_(struct soap*, const struct __ns1__Login_ *, const char*, const char*);

#ifndef soap_write___ns1__Login_
#define soap_write___ns1__Login_(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__Login_(soap, data),0) || soap_put___ns1__Login_(soap, data, "-ns1:Login", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__Login_ * SOAP_FMAC4 soap_get___ns1__Login_(struct soap*, struct __ns1__Login_ *, const char*, const char*);

#ifndef soap_read___ns1__Login_
#define soap_read___ns1__Login_(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__Login_(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns1__Login_ * SOAP_FMAC2 soap_instantiate___ns1__Login_(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__Login_ * soap_new___ns1__Login_(struct soap *soap, int n = -1) { return soap_instantiate___ns1__Login_(soap, n, NULL, NULL, NULL); }

inline struct __ns1__Login_ * soap_new_req___ns1__Login_(struct soap *soap) { struct __ns1__Login_ *_p = soap_instantiate___ns1__Login_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__Login_(soap, _p); } return _p; }

inline struct __ns1__Login_ * soap_new_set___ns1__Login_(struct soap *soap, _ns1__Login *ns1__Login) { struct __ns1__Login_ *_p = soap_instantiate___ns1__Login_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__Login_(soap, _p); _p->ns1__Login = ns1__Login; } return _p; }

inline void soap_delete___ns1__Login_(struct soap *soap, struct __ns1__Login_ *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__Login_(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__SaveOrUpdateObjects
#define SOAP_TYPE___ns1__SaveOrUpdateObjects (111)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__SaveOrUpdateObjects(struct soap*, struct __ns1__SaveOrUpdateObjects *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__SaveOrUpdateObjects(struct soap*, const struct __ns1__SaveOrUpdateObjects *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__SaveOrUpdateObjects(struct soap*, const char*, int, const struct __ns1__SaveOrUpdateObjects *, const char*);
SOAP_FMAC3 struct __ns1__SaveOrUpdateObjects * SOAP_FMAC4 soap_in___ns1__SaveOrUpdateObjects(struct soap*, const char*, struct __ns1__SaveOrUpdateObjects *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__SaveOrUpdateObjects(struct soap*, const struct __ns1__SaveOrUpdateObjects *, const char*, const char*);

#ifndef soap_write___ns1__SaveOrUpdateObjects
#define soap_write___ns1__SaveOrUpdateObjects(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__SaveOrUpdateObjects(soap, data),0) || soap_put___ns1__SaveOrUpdateObjects(soap, data, "-ns1:SaveOrUpdateObjects", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__SaveOrUpdateObjects * SOAP_FMAC4 soap_get___ns1__SaveOrUpdateObjects(struct soap*, struct __ns1__SaveOrUpdateObjects *, const char*, const char*);

#ifndef soap_read___ns1__SaveOrUpdateObjects
#define soap_read___ns1__SaveOrUpdateObjects(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__SaveOrUpdateObjects(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns1__SaveOrUpdateObjects * SOAP_FMAC2 soap_instantiate___ns1__SaveOrUpdateObjects(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__SaveOrUpdateObjects * soap_new___ns1__SaveOrUpdateObjects(struct soap *soap, int n = -1) { return soap_instantiate___ns1__SaveOrUpdateObjects(soap, n, NULL, NULL, NULL); }

inline struct __ns1__SaveOrUpdateObjects * soap_new_req___ns1__SaveOrUpdateObjects(struct soap *soap) { struct __ns1__SaveOrUpdateObjects *_p = soap_instantiate___ns1__SaveOrUpdateObjects(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__SaveOrUpdateObjects(soap, _p); } return _p; }

inline struct __ns1__SaveOrUpdateObjects * soap_new_set___ns1__SaveOrUpdateObjects(struct soap *soap, _ns1__SaveOrUpdateObjects *ns1__SaveOrUpdateObjects) { struct __ns1__SaveOrUpdateObjects *_p = soap_instantiate___ns1__SaveOrUpdateObjects(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__SaveOrUpdateObjects(soap, _p); _p->ns1__SaveOrUpdateObjects = ns1__SaveOrUpdateObjects; } return _p; }

inline void soap_delete___ns1__SaveOrUpdateObjects(struct soap *soap, struct __ns1__SaveOrUpdateObjects *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__SaveOrUpdateObjects(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__DownloadObjects
#define SOAP_TYPE___ns1__DownloadObjects (107)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__DownloadObjects(struct soap*, struct __ns1__DownloadObjects *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__DownloadObjects(struct soap*, const struct __ns1__DownloadObjects *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__DownloadObjects(struct soap*, const char*, int, const struct __ns1__DownloadObjects *, const char*);
SOAP_FMAC3 struct __ns1__DownloadObjects * SOAP_FMAC4 soap_in___ns1__DownloadObjects(struct soap*, const char*, struct __ns1__DownloadObjects *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__DownloadObjects(struct soap*, const struct __ns1__DownloadObjects *, const char*, const char*);

#ifndef soap_write___ns1__DownloadObjects
#define soap_write___ns1__DownloadObjects(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__DownloadObjects(soap, data),0) || soap_put___ns1__DownloadObjects(soap, data, "-ns1:DownloadObjects", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__DownloadObjects * SOAP_FMAC4 soap_get___ns1__DownloadObjects(struct soap*, struct __ns1__DownloadObjects *, const char*, const char*);

#ifndef soap_read___ns1__DownloadObjects
#define soap_read___ns1__DownloadObjects(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__DownloadObjects(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns1__DownloadObjects * SOAP_FMAC2 soap_instantiate___ns1__DownloadObjects(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__DownloadObjects * soap_new___ns1__DownloadObjects(struct soap *soap, int n = -1) { return soap_instantiate___ns1__DownloadObjects(soap, n, NULL, NULL, NULL); }

inline struct __ns1__DownloadObjects * soap_new_req___ns1__DownloadObjects(struct soap *soap) { struct __ns1__DownloadObjects *_p = soap_instantiate___ns1__DownloadObjects(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__DownloadObjects(soap, _p); } return _p; }

inline struct __ns1__DownloadObjects * soap_new_set___ns1__DownloadObjects(struct soap *soap, _ns1__DownloadObjects *ns1__DownloadObjects) { struct __ns1__DownloadObjects *_p = soap_instantiate___ns1__DownloadObjects(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__DownloadObjects(soap, _p); _p->ns1__DownloadObjects = ns1__DownloadObjects; } return _p; }

inline void soap_delete___ns1__DownloadObjects(struct soap *soap, struct __ns1__DownloadObjects *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__DownloadObjects(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__QueryObjects
#define SOAP_TYPE___ns1__QueryObjects (103)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__QueryObjects(struct soap*, struct __ns1__QueryObjects *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__QueryObjects(struct soap*, const struct __ns1__QueryObjects *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__QueryObjects(struct soap*, const char*, int, const struct __ns1__QueryObjects *, const char*);
SOAP_FMAC3 struct __ns1__QueryObjects * SOAP_FMAC4 soap_in___ns1__QueryObjects(struct soap*, const char*, struct __ns1__QueryObjects *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__QueryObjects(struct soap*, const struct __ns1__QueryObjects *, const char*, const char*);

#ifndef soap_write___ns1__QueryObjects
#define soap_write___ns1__QueryObjects(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__QueryObjects(soap, data),0) || soap_put___ns1__QueryObjects(soap, data, "-ns1:QueryObjects", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__QueryObjects * SOAP_FMAC4 soap_get___ns1__QueryObjects(struct soap*, struct __ns1__QueryObjects *, const char*, const char*);

#ifndef soap_read___ns1__QueryObjects
#define soap_read___ns1__QueryObjects(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__QueryObjects(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns1__QueryObjects * SOAP_FMAC2 soap_instantiate___ns1__QueryObjects(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__QueryObjects * soap_new___ns1__QueryObjects(struct soap *soap, int n = -1) { return soap_instantiate___ns1__QueryObjects(soap, n, NULL, NULL, NULL); }

inline struct __ns1__QueryObjects * soap_new_req___ns1__QueryObjects(struct soap *soap) { struct __ns1__QueryObjects *_p = soap_instantiate___ns1__QueryObjects(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__QueryObjects(soap, _p); } return _p; }

inline struct __ns1__QueryObjects * soap_new_set___ns1__QueryObjects(struct soap *soap, _ns1__QueryObjects *ns1__QueryObjects) { struct __ns1__QueryObjects *_p = soap_instantiate___ns1__QueryObjects(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__QueryObjects(soap, _p); _p->ns1__QueryObjects = ns1__QueryObjects; } return _p; }

inline void soap_delete___ns1__QueryObjects(struct soap *soap, struct __ns1__QueryObjects *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__QueryObjects(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__GetFileHeader
#define SOAP_TYPE___ns1__GetFileHeader (99)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__GetFileHeader(struct soap*, struct __ns1__GetFileHeader *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__GetFileHeader(struct soap*, const struct __ns1__GetFileHeader *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__GetFileHeader(struct soap*, const char*, int, const struct __ns1__GetFileHeader *, const char*);
SOAP_FMAC3 struct __ns1__GetFileHeader * SOAP_FMAC4 soap_in___ns1__GetFileHeader(struct soap*, const char*, struct __ns1__GetFileHeader *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__GetFileHeader(struct soap*, const struct __ns1__GetFileHeader *, const char*, const char*);

#ifndef soap_write___ns1__GetFileHeader
#define soap_write___ns1__GetFileHeader(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__GetFileHeader(soap, data),0) || soap_put___ns1__GetFileHeader(soap, data, "-ns1:GetFileHeader", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__GetFileHeader * SOAP_FMAC4 soap_get___ns1__GetFileHeader(struct soap*, struct __ns1__GetFileHeader *, const char*, const char*);

#ifndef soap_read___ns1__GetFileHeader
#define soap_read___ns1__GetFileHeader(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__GetFileHeader(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns1__GetFileHeader * SOAP_FMAC2 soap_instantiate___ns1__GetFileHeader(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__GetFileHeader * soap_new___ns1__GetFileHeader(struct soap *soap, int n = -1) { return soap_instantiate___ns1__GetFileHeader(soap, n, NULL, NULL, NULL); }

inline struct __ns1__GetFileHeader * soap_new_req___ns1__GetFileHeader(struct soap *soap) { struct __ns1__GetFileHeader *_p = soap_instantiate___ns1__GetFileHeader(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__GetFileHeader(soap, _p); } return _p; }

inline struct __ns1__GetFileHeader * soap_new_set___ns1__GetFileHeader(struct soap *soap, _ns1__GetFileHeader *ns1__GetFileHeader) { struct __ns1__GetFileHeader *_p = soap_instantiate___ns1__GetFileHeader(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__GetFileHeader(soap, _p); _p->ns1__GetFileHeader = ns1__GetFileHeader; } return _p; }

inline void soap_delete___ns1__GetFileHeader(struct soap *soap, struct __ns1__GetFileHeader *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__GetFileHeader(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__QueryDownLoadItemArrByProductId
#define SOAP_TYPE___ns1__QueryDownLoadItemArrByProductId (95)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__QueryDownLoadItemArrByProductId(struct soap*, struct __ns1__QueryDownLoadItemArrByProductId *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__QueryDownLoadItemArrByProductId(struct soap*, const struct __ns1__QueryDownLoadItemArrByProductId *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__QueryDownLoadItemArrByProductId(struct soap*, const char*, int, const struct __ns1__QueryDownLoadItemArrByProductId *, const char*);
SOAP_FMAC3 struct __ns1__QueryDownLoadItemArrByProductId * SOAP_FMAC4 soap_in___ns1__QueryDownLoadItemArrByProductId(struct soap*, const char*, struct __ns1__QueryDownLoadItemArrByProductId *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__QueryDownLoadItemArrByProductId(struct soap*, const struct __ns1__QueryDownLoadItemArrByProductId *, const char*, const char*);

#ifndef soap_write___ns1__QueryDownLoadItemArrByProductId
#define soap_write___ns1__QueryDownLoadItemArrByProductId(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__QueryDownLoadItemArrByProductId(soap, data),0) || soap_put___ns1__QueryDownLoadItemArrByProductId(soap, data, "-ns1:QueryDownLoadItemArrByProductId", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__QueryDownLoadItemArrByProductId * SOAP_FMAC4 soap_get___ns1__QueryDownLoadItemArrByProductId(struct soap*, struct __ns1__QueryDownLoadItemArrByProductId *, const char*, const char*);

#ifndef soap_read___ns1__QueryDownLoadItemArrByProductId
#define soap_read___ns1__QueryDownLoadItemArrByProductId(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__QueryDownLoadItemArrByProductId(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns1__QueryDownLoadItemArrByProductId * SOAP_FMAC2 soap_instantiate___ns1__QueryDownLoadItemArrByProductId(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__QueryDownLoadItemArrByProductId * soap_new___ns1__QueryDownLoadItemArrByProductId(struct soap *soap, int n = -1) { return soap_instantiate___ns1__QueryDownLoadItemArrByProductId(soap, n, NULL, NULL, NULL); }

inline struct __ns1__QueryDownLoadItemArrByProductId * soap_new_req___ns1__QueryDownLoadItemArrByProductId(struct soap *soap) { struct __ns1__QueryDownLoadItemArrByProductId *_p = soap_instantiate___ns1__QueryDownLoadItemArrByProductId(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__QueryDownLoadItemArrByProductId(soap, _p); } return _p; }

inline struct __ns1__QueryDownLoadItemArrByProductId * soap_new_set___ns1__QueryDownLoadItemArrByProductId(struct soap *soap, _ns1__QueryDownLoadItemArrByProductId *ns1__QueryDownLoadItemArrByProductId) { struct __ns1__QueryDownLoadItemArrByProductId *_p = soap_instantiate___ns1__QueryDownLoadItemArrByProductId(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__QueryDownLoadItemArrByProductId(soap, _p); _p->ns1__QueryDownLoadItemArrByProductId = ns1__QueryDownLoadItemArrByProductId; } return _p; }

inline void soap_delete___ns1__QueryDownLoadItemArrByProductId(struct soap *soap, struct __ns1__QueryDownLoadItemArrByProductId *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__QueryDownLoadItemArrByProductId(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__GetDogAccessHistory
#define SOAP_TYPE___ns1__GetDogAccessHistory (91)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__GetDogAccessHistory(struct soap*, struct __ns1__GetDogAccessHistory *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__GetDogAccessHistory(struct soap*, const struct __ns1__GetDogAccessHistory *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__GetDogAccessHistory(struct soap*, const char*, int, const struct __ns1__GetDogAccessHistory *, const char*);
SOAP_FMAC3 struct __ns1__GetDogAccessHistory * SOAP_FMAC4 soap_in___ns1__GetDogAccessHistory(struct soap*, const char*, struct __ns1__GetDogAccessHistory *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__GetDogAccessHistory(struct soap*, const struct __ns1__GetDogAccessHistory *, const char*, const char*);

#ifndef soap_write___ns1__GetDogAccessHistory
#define soap_write___ns1__GetDogAccessHistory(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__GetDogAccessHistory(soap, data),0) || soap_put___ns1__GetDogAccessHistory(soap, data, "-ns1:GetDogAccessHistory", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__GetDogAccessHistory * SOAP_FMAC4 soap_get___ns1__GetDogAccessHistory(struct soap*, struct __ns1__GetDogAccessHistory *, const char*, const char*);

#ifndef soap_read___ns1__GetDogAccessHistory
#define soap_read___ns1__GetDogAccessHistory(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__GetDogAccessHistory(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns1__GetDogAccessHistory * SOAP_FMAC2 soap_instantiate___ns1__GetDogAccessHistory(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__GetDogAccessHistory * soap_new___ns1__GetDogAccessHistory(struct soap *soap, int n = -1) { return soap_instantiate___ns1__GetDogAccessHistory(soap, n, NULL, NULL, NULL); }

inline struct __ns1__GetDogAccessHistory * soap_new_req___ns1__GetDogAccessHistory(struct soap *soap) { struct __ns1__GetDogAccessHistory *_p = soap_instantiate___ns1__GetDogAccessHistory(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__GetDogAccessHistory(soap, _p); } return _p; }

inline struct __ns1__GetDogAccessHistory * soap_new_set___ns1__GetDogAccessHistory(struct soap *soap, _ns1__GetDogAccessHistory *ns1__GetDogAccessHistory) { struct __ns1__GetDogAccessHistory *_p = soap_instantiate___ns1__GetDogAccessHistory(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__GetDogAccessHistory(soap, _p); _p->ns1__GetDogAccessHistory = ns1__GetDogAccessHistory; } return _p; }

inline void soap_delete___ns1__GetDogAccessHistory(struct soap *soap, struct __ns1__GetDogAccessHistory *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__GetDogAccessHistory(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__GetVersionReleaseNotes
#define SOAP_TYPE___ns1__GetVersionReleaseNotes (87)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__GetVersionReleaseNotes(struct soap*, struct __ns1__GetVersionReleaseNotes *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__GetVersionReleaseNotes(struct soap*, const struct __ns1__GetVersionReleaseNotes *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__GetVersionReleaseNotes(struct soap*, const char*, int, const struct __ns1__GetVersionReleaseNotes *, const char*);
SOAP_FMAC3 struct __ns1__GetVersionReleaseNotes * SOAP_FMAC4 soap_in___ns1__GetVersionReleaseNotes(struct soap*, const char*, struct __ns1__GetVersionReleaseNotes *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__GetVersionReleaseNotes(struct soap*, const struct __ns1__GetVersionReleaseNotes *, const char*, const char*);

#ifndef soap_write___ns1__GetVersionReleaseNotes
#define soap_write___ns1__GetVersionReleaseNotes(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__GetVersionReleaseNotes(soap, data),0) || soap_put___ns1__GetVersionReleaseNotes(soap, data, "-ns1:GetVersionReleaseNotes", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__GetVersionReleaseNotes * SOAP_FMAC4 soap_get___ns1__GetVersionReleaseNotes(struct soap*, struct __ns1__GetVersionReleaseNotes *, const char*, const char*);

#ifndef soap_read___ns1__GetVersionReleaseNotes
#define soap_read___ns1__GetVersionReleaseNotes(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__GetVersionReleaseNotes(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns1__GetVersionReleaseNotes * SOAP_FMAC2 soap_instantiate___ns1__GetVersionReleaseNotes(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__GetVersionReleaseNotes * soap_new___ns1__GetVersionReleaseNotes(struct soap *soap, int n = -1) { return soap_instantiate___ns1__GetVersionReleaseNotes(soap, n, NULL, NULL, NULL); }

inline struct __ns1__GetVersionReleaseNotes * soap_new_req___ns1__GetVersionReleaseNotes(struct soap *soap) { struct __ns1__GetVersionReleaseNotes *_p = soap_instantiate___ns1__GetVersionReleaseNotes(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__GetVersionReleaseNotes(soap, _p); } return _p; }

inline struct __ns1__GetVersionReleaseNotes * soap_new_set___ns1__GetVersionReleaseNotes(struct soap *soap, _ns1__GetVersionReleaseNotes *ns1__GetVersionReleaseNotes) { struct __ns1__GetVersionReleaseNotes *_p = soap_instantiate___ns1__GetVersionReleaseNotes(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__GetVersionReleaseNotes(soap, _p); _p->ns1__GetVersionReleaseNotes = ns1__GetVersionReleaseNotes; } return _p; }

inline void soap_delete___ns1__GetVersionReleaseNotes(struct soap *soap, struct __ns1__GetVersionReleaseNotes *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__GetVersionReleaseNotes(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__CompareVersion
#define SOAP_TYPE___ns1__CompareVersion (83)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__CompareVersion(struct soap*, struct __ns1__CompareVersion *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__CompareVersion(struct soap*, const struct __ns1__CompareVersion *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__CompareVersion(struct soap*, const char*, int, const struct __ns1__CompareVersion *, const char*);
SOAP_FMAC3 struct __ns1__CompareVersion * SOAP_FMAC4 soap_in___ns1__CompareVersion(struct soap*, const char*, struct __ns1__CompareVersion *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__CompareVersion(struct soap*, const struct __ns1__CompareVersion *, const char*, const char*);

#ifndef soap_write___ns1__CompareVersion
#define soap_write___ns1__CompareVersion(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__CompareVersion(soap, data),0) || soap_put___ns1__CompareVersion(soap, data, "-ns1:CompareVersion", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__CompareVersion * SOAP_FMAC4 soap_get___ns1__CompareVersion(struct soap*, struct __ns1__CompareVersion *, const char*, const char*);

#ifndef soap_read___ns1__CompareVersion
#define soap_read___ns1__CompareVersion(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__CompareVersion(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns1__CompareVersion * SOAP_FMAC2 soap_instantiate___ns1__CompareVersion(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__CompareVersion * soap_new___ns1__CompareVersion(struct soap *soap, int n = -1) { return soap_instantiate___ns1__CompareVersion(soap, n, NULL, NULL, NULL); }

inline struct __ns1__CompareVersion * soap_new_req___ns1__CompareVersion(struct soap *soap) { struct __ns1__CompareVersion *_p = soap_instantiate___ns1__CompareVersion(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__CompareVersion(soap, _p); } return _p; }

inline struct __ns1__CompareVersion * soap_new_set___ns1__CompareVersion(struct soap *soap, _ns1__CompareVersion *ns1__CompareVersion) { struct __ns1__CompareVersion *_p = soap_instantiate___ns1__CompareVersion(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__CompareVersion(soap, _p); _p->ns1__CompareVersion = ns1__CompareVersion; } return _p; }

inline void soap_delete___ns1__CompareVersion(struct soap *soap, struct __ns1__CompareVersion *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__CompareVersion(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__SetRevisionReadFlag
#define SOAP_TYPE___ns1__SetRevisionReadFlag (79)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__SetRevisionReadFlag(struct soap*, struct __ns1__SetRevisionReadFlag *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__SetRevisionReadFlag(struct soap*, const struct __ns1__SetRevisionReadFlag *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__SetRevisionReadFlag(struct soap*, const char*, int, const struct __ns1__SetRevisionReadFlag *, const char*);
SOAP_FMAC3 struct __ns1__SetRevisionReadFlag * SOAP_FMAC4 soap_in___ns1__SetRevisionReadFlag(struct soap*, const char*, struct __ns1__SetRevisionReadFlag *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__SetRevisionReadFlag(struct soap*, const struct __ns1__SetRevisionReadFlag *, const char*, const char*);

#ifndef soap_write___ns1__SetRevisionReadFlag
#define soap_write___ns1__SetRevisionReadFlag(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__SetRevisionReadFlag(soap, data),0) || soap_put___ns1__SetRevisionReadFlag(soap, data, "-ns1:SetRevisionReadFlag", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__SetRevisionReadFlag * SOAP_FMAC4 soap_get___ns1__SetRevisionReadFlag(struct soap*, struct __ns1__SetRevisionReadFlag *, const char*, const char*);

#ifndef soap_read___ns1__SetRevisionReadFlag
#define soap_read___ns1__SetRevisionReadFlag(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__SetRevisionReadFlag(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns1__SetRevisionReadFlag * SOAP_FMAC2 soap_instantiate___ns1__SetRevisionReadFlag(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__SetRevisionReadFlag * soap_new___ns1__SetRevisionReadFlag(struct soap *soap, int n = -1) { return soap_instantiate___ns1__SetRevisionReadFlag(soap, n, NULL, NULL, NULL); }

inline struct __ns1__SetRevisionReadFlag * soap_new_req___ns1__SetRevisionReadFlag(struct soap *soap) { struct __ns1__SetRevisionReadFlag *_p = soap_instantiate___ns1__SetRevisionReadFlag(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__SetRevisionReadFlag(soap, _p); } return _p; }

inline struct __ns1__SetRevisionReadFlag * soap_new_set___ns1__SetRevisionReadFlag(struct soap *soap, _ns1__SetRevisionReadFlag *ns1__SetRevisionReadFlag) { struct __ns1__SetRevisionReadFlag *_p = soap_instantiate___ns1__SetRevisionReadFlag(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__SetRevisionReadFlag(soap, _p); _p->ns1__SetRevisionReadFlag = ns1__SetRevisionReadFlag; } return _p; }

inline void soap_delete___ns1__SetRevisionReadFlag(struct soap *soap, struct __ns1__SetRevisionReadFlag *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__SetRevisionReadFlag(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__GetUpdateVerByCurVer
#define SOAP_TYPE___ns1__GetUpdateVerByCurVer (75)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__GetUpdateVerByCurVer(struct soap*, struct __ns1__GetUpdateVerByCurVer *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__GetUpdateVerByCurVer(struct soap*, const struct __ns1__GetUpdateVerByCurVer *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__GetUpdateVerByCurVer(struct soap*, const char*, int, const struct __ns1__GetUpdateVerByCurVer *, const char*);
SOAP_FMAC3 struct __ns1__GetUpdateVerByCurVer * SOAP_FMAC4 soap_in___ns1__GetUpdateVerByCurVer(struct soap*, const char*, struct __ns1__GetUpdateVerByCurVer *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__GetUpdateVerByCurVer(struct soap*, const struct __ns1__GetUpdateVerByCurVer *, const char*, const char*);

#ifndef soap_write___ns1__GetUpdateVerByCurVer
#define soap_write___ns1__GetUpdateVerByCurVer(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__GetUpdateVerByCurVer(soap, data),0) || soap_put___ns1__GetUpdateVerByCurVer(soap, data, "-ns1:GetUpdateVerByCurVer", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__GetUpdateVerByCurVer * SOAP_FMAC4 soap_get___ns1__GetUpdateVerByCurVer(struct soap*, struct __ns1__GetUpdateVerByCurVer *, const char*, const char*);

#ifndef soap_read___ns1__GetUpdateVerByCurVer
#define soap_read___ns1__GetUpdateVerByCurVer(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__GetUpdateVerByCurVer(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns1__GetUpdateVerByCurVer * SOAP_FMAC2 soap_instantiate___ns1__GetUpdateVerByCurVer(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__GetUpdateVerByCurVer * soap_new___ns1__GetUpdateVerByCurVer(struct soap *soap, int n = -1) { return soap_instantiate___ns1__GetUpdateVerByCurVer(soap, n, NULL, NULL, NULL); }

inline struct __ns1__GetUpdateVerByCurVer * soap_new_req___ns1__GetUpdateVerByCurVer(struct soap *soap) { struct __ns1__GetUpdateVerByCurVer *_p = soap_instantiate___ns1__GetUpdateVerByCurVer(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__GetUpdateVerByCurVer(soap, _p); } return _p; }

inline struct __ns1__GetUpdateVerByCurVer * soap_new_set___ns1__GetUpdateVerByCurVer(struct soap *soap, _ns1__GetUpdateVerByCurVer *ns1__GetUpdateVerByCurVer) { struct __ns1__GetUpdateVerByCurVer *_p = soap_instantiate___ns1__GetUpdateVerByCurVer(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__GetUpdateVerByCurVer(soap, _p); _p->ns1__GetUpdateVerByCurVer = ns1__GetUpdateVerByCurVer; } return _p; }

inline void soap_delete___ns1__GetUpdateVerByCurVer(struct soap *soap, struct __ns1__GetUpdateVerByCurVer *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__GetUpdateVerByCurVer(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__LoginByByteArr
#define SOAP_TYPE___ns1__LoginByByteArr (71)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__LoginByByteArr(struct soap*, struct __ns1__LoginByByteArr *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__LoginByByteArr(struct soap*, const struct __ns1__LoginByByteArr *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__LoginByByteArr(struct soap*, const char*, int, const struct __ns1__LoginByByteArr *, const char*);
SOAP_FMAC3 struct __ns1__LoginByByteArr * SOAP_FMAC4 soap_in___ns1__LoginByByteArr(struct soap*, const char*, struct __ns1__LoginByByteArr *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__LoginByByteArr(struct soap*, const struct __ns1__LoginByByteArr *, const char*, const char*);

#ifndef soap_write___ns1__LoginByByteArr
#define soap_write___ns1__LoginByByteArr(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__LoginByByteArr(soap, data),0) || soap_put___ns1__LoginByByteArr(soap, data, "-ns1:LoginByByteArr", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__LoginByByteArr * SOAP_FMAC4 soap_get___ns1__LoginByByteArr(struct soap*, struct __ns1__LoginByByteArr *, const char*, const char*);

#ifndef soap_read___ns1__LoginByByteArr
#define soap_read___ns1__LoginByByteArr(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__LoginByByteArr(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns1__LoginByByteArr * SOAP_FMAC2 soap_instantiate___ns1__LoginByByteArr(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__LoginByByteArr * soap_new___ns1__LoginByByteArr(struct soap *soap, int n = -1) { return soap_instantiate___ns1__LoginByByteArr(soap, n, NULL, NULL, NULL); }

inline struct __ns1__LoginByByteArr * soap_new_req___ns1__LoginByByteArr(struct soap *soap) { struct __ns1__LoginByByteArr *_p = soap_instantiate___ns1__LoginByByteArr(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__LoginByByteArr(soap, _p); } return _p; }

inline struct __ns1__LoginByByteArr * soap_new_set___ns1__LoginByByteArr(struct soap *soap, _ns1__LoginByByteArr *ns1__LoginByByteArr) { struct __ns1__LoginByByteArr *_p = soap_instantiate___ns1__LoginByByteArr(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__LoginByByteArr(soap, _p); _p->ns1__LoginByByteArr = ns1__LoginByByteArr; } return _p; }

inline void soap_delete___ns1__LoginByByteArr(struct soap *soap, struct __ns1__LoginByByteArr *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__LoginByByteArr(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__Login
#define SOAP_TYPE___ns1__Login (67)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__Login(struct soap*, struct __ns1__Login *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__Login(struct soap*, const struct __ns1__Login *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__Login(struct soap*, const char*, int, const struct __ns1__Login *, const char*);
SOAP_FMAC3 struct __ns1__Login * SOAP_FMAC4 soap_in___ns1__Login(struct soap*, const char*, struct __ns1__Login *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__Login(struct soap*, const struct __ns1__Login *, const char*, const char*);

#ifndef soap_write___ns1__Login
#define soap_write___ns1__Login(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__Login(soap, data),0) || soap_put___ns1__Login(soap, data, "-ns1:Login", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__Login * SOAP_FMAC4 soap_get___ns1__Login(struct soap*, struct __ns1__Login *, const char*, const char*);

#ifndef soap_read___ns1__Login
#define soap_read___ns1__Login(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__Login(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns1__Login * SOAP_FMAC2 soap_instantiate___ns1__Login(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__Login * soap_new___ns1__Login(struct soap *soap, int n = -1) { return soap_instantiate___ns1__Login(soap, n, NULL, NULL, NULL); }

inline struct __ns1__Login * soap_new_req___ns1__Login(struct soap *soap) { struct __ns1__Login *_p = soap_instantiate___ns1__Login(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__Login(soap, _p); } return _p; }

inline struct __ns1__Login * soap_new_set___ns1__Login(struct soap *soap, _ns1__Login *ns1__Login) { struct __ns1__Login *_p = soap_instantiate___ns1__Login(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__Login(soap, _p); _p->ns1__Login = ns1__Login; } return _p; }

inline void soap_delete___ns1__Login(struct soap *soap, struct __ns1__Login *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__Login(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_PointerToSOAP_ENV__Reason
#define SOAP_TYPE_PointerToSOAP_ENV__Reason (145)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Reason(struct soap*, const char *, int, struct SOAP_ENV__Reason *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Reason ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Reason(struct soap*, const char*, struct SOAP_ENV__Reason **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *const*, const char*, const char*);

#ifndef soap_write_PointerToSOAP_ENV__Reason
#define soap_write_PointerToSOAP_ENV__Reason(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerToSOAP_ENV__Reason(soap, data),0) || soap_put_PointerToSOAP_ENV__Reason(soap, data, "SOAP-ENV:Reason", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Reason ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason **, const char*, const char*);

#ifndef soap_read_PointerToSOAP_ENV__Reason
#define soap_read_PointerToSOAP_ENV__Reason(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToSOAP_ENV__Reason(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_PointerToSOAP_ENV__Detail
#define SOAP_TYPE_PointerToSOAP_ENV__Detail (144)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Detail(struct soap*, const char *, int, struct SOAP_ENV__Detail *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Detail ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Detail(struct soap*, const char*, struct SOAP_ENV__Detail **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *const*, const char*, const char*);

#ifndef soap_write_PointerToSOAP_ENV__Detail
#define soap_write_PointerToSOAP_ENV__Detail(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerToSOAP_ENV__Detail(soap, data),0) || soap_put_PointerToSOAP_ENV__Detail(soap, data, "SOAP-ENV:Detail", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Detail ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail **, const char*, const char*);

#ifndef soap_read_PointerToSOAP_ENV__Detail
#define soap_read_PointerToSOAP_ENV__Detail(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToSOAP_ENV__Detail(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_PointerToSOAP_ENV__Code
#define SOAP_TYPE_PointerToSOAP_ENV__Code (138)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Code(struct soap*, const char *, int, struct SOAP_ENV__Code *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Code ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Code(struct soap*, const char*, struct SOAP_ENV__Code **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *const*, const char*, const char*);

#ifndef soap_write_PointerToSOAP_ENV__Code
#define soap_write_PointerToSOAP_ENV__Code(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerToSOAP_ENV__Code(soap, data),0) || soap_put_PointerToSOAP_ENV__Code(soap, data, "SOAP-ENV:Code", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Code ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code **, const char*, const char*);

#ifndef soap_read_PointerToSOAP_ENV__Code
#define soap_read_PointerToSOAP_ENV__Code(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToSOAP_ENV__Code(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#endif

#ifndef SOAP_TYPE_PointerTo_ns1__SaveOrUpdateObjects
#define SOAP_TYPE_PointerTo_ns1__SaveOrUpdateObjects (108)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__SaveOrUpdateObjects(struct soap*, _ns1__SaveOrUpdateObjects *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__SaveOrUpdateObjects(struct soap*, const char *, int, _ns1__SaveOrUpdateObjects *const*, const char *);
SOAP_FMAC3 _ns1__SaveOrUpdateObjects ** SOAP_FMAC4 soap_in_PointerTo_ns1__SaveOrUpdateObjects(struct soap*, const char*, _ns1__SaveOrUpdateObjects **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__SaveOrUpdateObjects(struct soap*, _ns1__SaveOrUpdateObjects *const*, const char*, const char*);

#ifndef soap_write_PointerTo_ns1__SaveOrUpdateObjects
#define soap_write_PointerTo_ns1__SaveOrUpdateObjects(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_ns1__SaveOrUpdateObjects(soap, data),0) || soap_put_PointerTo_ns1__SaveOrUpdateObjects(soap, data, "ns1:SaveOrUpdateObjects", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__SaveOrUpdateObjects ** SOAP_FMAC4 soap_get_PointerTo_ns1__SaveOrUpdateObjects(struct soap*, _ns1__SaveOrUpdateObjects **, const char*, const char*);

#ifndef soap_read_PointerTo_ns1__SaveOrUpdateObjects
#define soap_read_PointerTo_ns1__SaveOrUpdateObjects(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1__SaveOrUpdateObjects(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_ns1__DownloadObjects
#define SOAP_TYPE_PointerTo_ns1__DownloadObjects (104)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__DownloadObjects(struct soap*, _ns1__DownloadObjects *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__DownloadObjects(struct soap*, const char *, int, _ns1__DownloadObjects *const*, const char *);
SOAP_FMAC3 _ns1__DownloadObjects ** SOAP_FMAC4 soap_in_PointerTo_ns1__DownloadObjects(struct soap*, const char*, _ns1__DownloadObjects **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__DownloadObjects(struct soap*, _ns1__DownloadObjects *const*, const char*, const char*);

#ifndef soap_write_PointerTo_ns1__DownloadObjects
#define soap_write_PointerTo_ns1__DownloadObjects(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_ns1__DownloadObjects(soap, data),0) || soap_put_PointerTo_ns1__DownloadObjects(soap, data, "ns1:DownloadObjects", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__DownloadObjects ** SOAP_FMAC4 soap_get_PointerTo_ns1__DownloadObjects(struct soap*, _ns1__DownloadObjects **, const char*, const char*);

#ifndef soap_read_PointerTo_ns1__DownloadObjects
#define soap_read_PointerTo_ns1__DownloadObjects(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1__DownloadObjects(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_ns1__QueryObjects
#define SOAP_TYPE_PointerTo_ns1__QueryObjects (100)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__QueryObjects(struct soap*, _ns1__QueryObjects *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__QueryObjects(struct soap*, const char *, int, _ns1__QueryObjects *const*, const char *);
SOAP_FMAC3 _ns1__QueryObjects ** SOAP_FMAC4 soap_in_PointerTo_ns1__QueryObjects(struct soap*, const char*, _ns1__QueryObjects **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__QueryObjects(struct soap*, _ns1__QueryObjects *const*, const char*, const char*);

#ifndef soap_write_PointerTo_ns1__QueryObjects
#define soap_write_PointerTo_ns1__QueryObjects(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_ns1__QueryObjects(soap, data),0) || soap_put_PointerTo_ns1__QueryObjects(soap, data, "ns1:QueryObjects", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__QueryObjects ** SOAP_FMAC4 soap_get_PointerTo_ns1__QueryObjects(struct soap*, _ns1__QueryObjects **, const char*, const char*);

#ifndef soap_read_PointerTo_ns1__QueryObjects
#define soap_read_PointerTo_ns1__QueryObjects(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1__QueryObjects(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_ns1__GetFileHeader
#define SOAP_TYPE_PointerTo_ns1__GetFileHeader (96)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__GetFileHeader(struct soap*, _ns1__GetFileHeader *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__GetFileHeader(struct soap*, const char *, int, _ns1__GetFileHeader *const*, const char *);
SOAP_FMAC3 _ns1__GetFileHeader ** SOAP_FMAC4 soap_in_PointerTo_ns1__GetFileHeader(struct soap*, const char*, _ns1__GetFileHeader **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__GetFileHeader(struct soap*, _ns1__GetFileHeader *const*, const char*, const char*);

#ifndef soap_write_PointerTo_ns1__GetFileHeader
#define soap_write_PointerTo_ns1__GetFileHeader(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_ns1__GetFileHeader(soap, data),0) || soap_put_PointerTo_ns1__GetFileHeader(soap, data, "ns1:GetFileHeader", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__GetFileHeader ** SOAP_FMAC4 soap_get_PointerTo_ns1__GetFileHeader(struct soap*, _ns1__GetFileHeader **, const char*, const char*);

#ifndef soap_read_PointerTo_ns1__GetFileHeader
#define soap_read_PointerTo_ns1__GetFileHeader(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1__GetFileHeader(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_ns1__QueryDownLoadItemArrByProductId
#define SOAP_TYPE_PointerTo_ns1__QueryDownLoadItemArrByProductId (92)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__QueryDownLoadItemArrByProductId(struct soap*, _ns1__QueryDownLoadItemArrByProductId *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__QueryDownLoadItemArrByProductId(struct soap*, const char *, int, _ns1__QueryDownLoadItemArrByProductId *const*, const char *);
SOAP_FMAC3 _ns1__QueryDownLoadItemArrByProductId ** SOAP_FMAC4 soap_in_PointerTo_ns1__QueryDownLoadItemArrByProductId(struct soap*, const char*, _ns1__QueryDownLoadItemArrByProductId **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__QueryDownLoadItemArrByProductId(struct soap*, _ns1__QueryDownLoadItemArrByProductId *const*, const char*, const char*);

#ifndef soap_write_PointerTo_ns1__QueryDownLoadItemArrByProductId
#define soap_write_PointerTo_ns1__QueryDownLoadItemArrByProductId(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_ns1__QueryDownLoadItemArrByProductId(soap, data),0) || soap_put_PointerTo_ns1__QueryDownLoadItemArrByProductId(soap, data, "ns1:QueryDownLoadItemArrByProductId", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__QueryDownLoadItemArrByProductId ** SOAP_FMAC4 soap_get_PointerTo_ns1__QueryDownLoadItemArrByProductId(struct soap*, _ns1__QueryDownLoadItemArrByProductId **, const char*, const char*);

#ifndef soap_read_PointerTo_ns1__QueryDownLoadItemArrByProductId
#define soap_read_PointerTo_ns1__QueryDownLoadItemArrByProductId(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1__QueryDownLoadItemArrByProductId(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_ns1__GetDogAccessHistory
#define SOAP_TYPE_PointerTo_ns1__GetDogAccessHistory (88)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__GetDogAccessHistory(struct soap*, _ns1__GetDogAccessHistory *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__GetDogAccessHistory(struct soap*, const char *, int, _ns1__GetDogAccessHistory *const*, const char *);
SOAP_FMAC3 _ns1__GetDogAccessHistory ** SOAP_FMAC4 soap_in_PointerTo_ns1__GetDogAccessHistory(struct soap*, const char*, _ns1__GetDogAccessHistory **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__GetDogAccessHistory(struct soap*, _ns1__GetDogAccessHistory *const*, const char*, const char*);

#ifndef soap_write_PointerTo_ns1__GetDogAccessHistory
#define soap_write_PointerTo_ns1__GetDogAccessHistory(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_ns1__GetDogAccessHistory(soap, data),0) || soap_put_PointerTo_ns1__GetDogAccessHistory(soap, data, "ns1:GetDogAccessHistory", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__GetDogAccessHistory ** SOAP_FMAC4 soap_get_PointerTo_ns1__GetDogAccessHistory(struct soap*, _ns1__GetDogAccessHistory **, const char*, const char*);

#ifndef soap_read_PointerTo_ns1__GetDogAccessHistory
#define soap_read_PointerTo_ns1__GetDogAccessHistory(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1__GetDogAccessHistory(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_ns1__GetVersionReleaseNotes
#define SOAP_TYPE_PointerTo_ns1__GetVersionReleaseNotes (84)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__GetVersionReleaseNotes(struct soap*, _ns1__GetVersionReleaseNotes *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__GetVersionReleaseNotes(struct soap*, const char *, int, _ns1__GetVersionReleaseNotes *const*, const char *);
SOAP_FMAC3 _ns1__GetVersionReleaseNotes ** SOAP_FMAC4 soap_in_PointerTo_ns1__GetVersionReleaseNotes(struct soap*, const char*, _ns1__GetVersionReleaseNotes **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__GetVersionReleaseNotes(struct soap*, _ns1__GetVersionReleaseNotes *const*, const char*, const char*);

#ifndef soap_write_PointerTo_ns1__GetVersionReleaseNotes
#define soap_write_PointerTo_ns1__GetVersionReleaseNotes(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_ns1__GetVersionReleaseNotes(soap, data),0) || soap_put_PointerTo_ns1__GetVersionReleaseNotes(soap, data, "ns1:GetVersionReleaseNotes", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__GetVersionReleaseNotes ** SOAP_FMAC4 soap_get_PointerTo_ns1__GetVersionReleaseNotes(struct soap*, _ns1__GetVersionReleaseNotes **, const char*, const char*);

#ifndef soap_read_PointerTo_ns1__GetVersionReleaseNotes
#define soap_read_PointerTo_ns1__GetVersionReleaseNotes(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1__GetVersionReleaseNotes(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_ns1__CompareVersion
#define SOAP_TYPE_PointerTo_ns1__CompareVersion (80)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__CompareVersion(struct soap*, _ns1__CompareVersion *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__CompareVersion(struct soap*, const char *, int, _ns1__CompareVersion *const*, const char *);
SOAP_FMAC3 _ns1__CompareVersion ** SOAP_FMAC4 soap_in_PointerTo_ns1__CompareVersion(struct soap*, const char*, _ns1__CompareVersion **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__CompareVersion(struct soap*, _ns1__CompareVersion *const*, const char*, const char*);

#ifndef soap_write_PointerTo_ns1__CompareVersion
#define soap_write_PointerTo_ns1__CompareVersion(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_ns1__CompareVersion(soap, data),0) || soap_put_PointerTo_ns1__CompareVersion(soap, data, "ns1:CompareVersion", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__CompareVersion ** SOAP_FMAC4 soap_get_PointerTo_ns1__CompareVersion(struct soap*, _ns1__CompareVersion **, const char*, const char*);

#ifndef soap_read_PointerTo_ns1__CompareVersion
#define soap_read_PointerTo_ns1__CompareVersion(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1__CompareVersion(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_ns1__SetRevisionReadFlag
#define SOAP_TYPE_PointerTo_ns1__SetRevisionReadFlag (76)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__SetRevisionReadFlag(struct soap*, _ns1__SetRevisionReadFlag *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__SetRevisionReadFlag(struct soap*, const char *, int, _ns1__SetRevisionReadFlag *const*, const char *);
SOAP_FMAC3 _ns1__SetRevisionReadFlag ** SOAP_FMAC4 soap_in_PointerTo_ns1__SetRevisionReadFlag(struct soap*, const char*, _ns1__SetRevisionReadFlag **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__SetRevisionReadFlag(struct soap*, _ns1__SetRevisionReadFlag *const*, const char*, const char*);

#ifndef soap_write_PointerTo_ns1__SetRevisionReadFlag
#define soap_write_PointerTo_ns1__SetRevisionReadFlag(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_ns1__SetRevisionReadFlag(soap, data),0) || soap_put_PointerTo_ns1__SetRevisionReadFlag(soap, data, "ns1:SetRevisionReadFlag", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__SetRevisionReadFlag ** SOAP_FMAC4 soap_get_PointerTo_ns1__SetRevisionReadFlag(struct soap*, _ns1__SetRevisionReadFlag **, const char*, const char*);

#ifndef soap_read_PointerTo_ns1__SetRevisionReadFlag
#define soap_read_PointerTo_ns1__SetRevisionReadFlag(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1__SetRevisionReadFlag(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_ns1__GetUpdateVerByCurVer
#define SOAP_TYPE_PointerTo_ns1__GetUpdateVerByCurVer (72)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__GetUpdateVerByCurVer(struct soap*, _ns1__GetUpdateVerByCurVer *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__GetUpdateVerByCurVer(struct soap*, const char *, int, _ns1__GetUpdateVerByCurVer *const*, const char *);
SOAP_FMAC3 _ns1__GetUpdateVerByCurVer ** SOAP_FMAC4 soap_in_PointerTo_ns1__GetUpdateVerByCurVer(struct soap*, const char*, _ns1__GetUpdateVerByCurVer **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__GetUpdateVerByCurVer(struct soap*, _ns1__GetUpdateVerByCurVer *const*, const char*, const char*);

#ifndef soap_write_PointerTo_ns1__GetUpdateVerByCurVer
#define soap_write_PointerTo_ns1__GetUpdateVerByCurVer(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_ns1__GetUpdateVerByCurVer(soap, data),0) || soap_put_PointerTo_ns1__GetUpdateVerByCurVer(soap, data, "ns1:GetUpdateVerByCurVer", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__GetUpdateVerByCurVer ** SOAP_FMAC4 soap_get_PointerTo_ns1__GetUpdateVerByCurVer(struct soap*, _ns1__GetUpdateVerByCurVer **, const char*, const char*);

#ifndef soap_read_PointerTo_ns1__GetUpdateVerByCurVer
#define soap_read_PointerTo_ns1__GetUpdateVerByCurVer(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1__GetUpdateVerByCurVer(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_ns1__LoginByByteArr
#define SOAP_TYPE_PointerTo_ns1__LoginByByteArr (68)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__LoginByByteArr(struct soap*, _ns1__LoginByByteArr *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__LoginByByteArr(struct soap*, const char *, int, _ns1__LoginByByteArr *const*, const char *);
SOAP_FMAC3 _ns1__LoginByByteArr ** SOAP_FMAC4 soap_in_PointerTo_ns1__LoginByByteArr(struct soap*, const char*, _ns1__LoginByByteArr **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__LoginByByteArr(struct soap*, _ns1__LoginByByteArr *const*, const char*, const char*);

#ifndef soap_write_PointerTo_ns1__LoginByByteArr
#define soap_write_PointerTo_ns1__LoginByByteArr(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_ns1__LoginByByteArr(soap, data),0) || soap_put_PointerTo_ns1__LoginByByteArr(soap, data, "ns1:LoginByByteArr", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__LoginByByteArr ** SOAP_FMAC4 soap_get_PointerTo_ns1__LoginByByteArr(struct soap*, _ns1__LoginByByteArr **, const char*, const char*);

#ifndef soap_read_PointerTo_ns1__LoginByByteArr
#define soap_read_PointerTo_ns1__LoginByByteArr(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1__LoginByByteArr(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_ns1__Login
#define SOAP_TYPE_PointerTo_ns1__Login (64)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__Login(struct soap*, _ns1__Login *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__Login(struct soap*, const char *, int, _ns1__Login *const*, const char *);
SOAP_FMAC3 _ns1__Login ** SOAP_FMAC4 soap_in_PointerTo_ns1__Login(struct soap*, const char*, _ns1__Login **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__Login(struct soap*, _ns1__Login *const*, const char*, const char*);

#ifndef soap_write_PointerTo_ns1__Login
#define soap_write_PointerTo_ns1__Login(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_ns1__Login(soap, data),0) || soap_put_PointerTo_ns1__Login(soap, data, "ns1:Login", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__Login ** SOAP_FMAC4 soap_get_PointerTo_ns1__Login(struct soap*, _ns1__Login **, const char*, const char*);

#ifndef soap_read_PointerTo_ns1__Login
#define soap_read_PointerTo_ns1__Login(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1__Login(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTons1__FileHeader
#define SOAP_TYPE_PointerTons1__FileHeader (63)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__FileHeader(struct soap*, ns1__FileHeader *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__FileHeader(struct soap*, const char *, int, ns1__FileHeader *const*, const char *);
SOAP_FMAC3 ns1__FileHeader ** SOAP_FMAC4 soap_in_PointerTons1__FileHeader(struct soap*, const char*, ns1__FileHeader **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__FileHeader(struct soap*, ns1__FileHeader *const*, const char*, const char*);

#ifndef soap_write_PointerTons1__FileHeader
#define soap_write_PointerTons1__FileHeader(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTons1__FileHeader(soap, data),0) || soap_put_PointerTons1__FileHeader(soap, data, "ns1:FileHeader", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns1__FileHeader ** SOAP_FMAC4 soap_get_PointerTons1__FileHeader(struct soap*, ns1__FileHeader **, const char*, const char*);

#ifndef soap_read_PointerTons1__FileHeader
#define soap_read_PointerTons1__FileHeader(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons1__FileHeader(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTons1__ArrayOfDownLoadItem
#define SOAP_TYPE_PointerTons1__ArrayOfDownLoadItem (62)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__ArrayOfDownLoadItem(struct soap*, ns1__ArrayOfDownLoadItem *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__ArrayOfDownLoadItem(struct soap*, const char *, int, ns1__ArrayOfDownLoadItem *const*, const char *);
SOAP_FMAC3 ns1__ArrayOfDownLoadItem ** SOAP_FMAC4 soap_in_PointerTons1__ArrayOfDownLoadItem(struct soap*, const char*, ns1__ArrayOfDownLoadItem **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__ArrayOfDownLoadItem(struct soap*, ns1__ArrayOfDownLoadItem *const*, const char*, const char*);

#ifndef soap_write_PointerTons1__ArrayOfDownLoadItem
#define soap_write_PointerTons1__ArrayOfDownLoadItem(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTons1__ArrayOfDownLoadItem(soap, data),0) || soap_put_PointerTons1__ArrayOfDownLoadItem(soap, data, "ns1:ArrayOfDownLoadItem", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns1__ArrayOfDownLoadItem ** SOAP_FMAC4 soap_get_PointerTons1__ArrayOfDownLoadItem(struct soap*, ns1__ArrayOfDownLoadItem **, const char*, const char*);

#ifndef soap_read_PointerTons1__ArrayOfDownLoadItem
#define soap_read_PointerTons1__ArrayOfDownLoadItem(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons1__ArrayOfDownLoadItem(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTons1__DogAccessHistory
#define SOAP_TYPE_PointerTons1__DogAccessHistory (61)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__DogAccessHistory(struct soap*, ns1__DogAccessHistory *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__DogAccessHistory(struct soap*, const char *, int, ns1__DogAccessHistory *const*, const char *);
SOAP_FMAC3 ns1__DogAccessHistory ** SOAP_FMAC4 soap_in_PointerTons1__DogAccessHistory(struct soap*, const char*, ns1__DogAccessHistory **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__DogAccessHistory(struct soap*, ns1__DogAccessHistory *const*, const char*, const char*);

#ifndef soap_write_PointerTons1__DogAccessHistory
#define soap_write_PointerTons1__DogAccessHistory(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTons1__DogAccessHistory(soap, data),0) || soap_put_PointerTons1__DogAccessHistory(soap, data, "ns1:DogAccessHistory", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns1__DogAccessHistory ** SOAP_FMAC4 soap_get_PointerTons1__DogAccessHistory(struct soap*, ns1__DogAccessHistory **, const char*, const char*);

#ifndef soap_read_PointerTons1__DogAccessHistory
#define soap_read_PointerTons1__DogAccessHistory(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons1__DogAccessHistory(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTons1__ArrayOfVersionRevision
#define SOAP_TYPE_PointerTons1__ArrayOfVersionRevision (60)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__ArrayOfVersionRevision(struct soap*, ns1__ArrayOfVersionRevision *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__ArrayOfVersionRevision(struct soap*, const char *, int, ns1__ArrayOfVersionRevision *const*, const char *);
SOAP_FMAC3 ns1__ArrayOfVersionRevision ** SOAP_FMAC4 soap_in_PointerTons1__ArrayOfVersionRevision(struct soap*, const char*, ns1__ArrayOfVersionRevision **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__ArrayOfVersionRevision(struct soap*, ns1__ArrayOfVersionRevision *const*, const char*, const char*);

#ifndef soap_write_PointerTons1__ArrayOfVersionRevision
#define soap_write_PointerTons1__ArrayOfVersionRevision(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTons1__ArrayOfVersionRevision(soap, data),0) || soap_put_PointerTons1__ArrayOfVersionRevision(soap, data, "ns1:ArrayOfVersionRevision", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns1__ArrayOfVersionRevision ** SOAP_FMAC4 soap_get_PointerTons1__ArrayOfVersionRevision(struct soap*, ns1__ArrayOfVersionRevision **, const char*, const char*);

#ifndef soap_read_PointerTons1__ArrayOfVersionRevision
#define soap_read_PointerTons1__ArrayOfVersionRevision(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons1__ArrayOfVersionRevision(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTons1__ArrayOfInt
#define SOAP_TYPE_PointerTons1__ArrayOfInt (59)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__ArrayOfInt(struct soap*, ns1__ArrayOfInt *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__ArrayOfInt(struct soap*, const char *, int, ns1__ArrayOfInt *const*, const char *);
SOAP_FMAC3 ns1__ArrayOfInt ** SOAP_FMAC4 soap_in_PointerTons1__ArrayOfInt(struct soap*, const char*, ns1__ArrayOfInt **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__ArrayOfInt(struct soap*, ns1__ArrayOfInt *const*, const char*, const char*);

#ifndef soap_write_PointerTons1__ArrayOfInt
#define soap_write_PointerTons1__ArrayOfInt(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTons1__ArrayOfInt(soap, data),0) || soap_put_PointerTons1__ArrayOfInt(soap, data, "ns1:ArrayOfInt", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns1__ArrayOfInt ** SOAP_FMAC4 soap_get_PointerTons1__ArrayOfInt(struct soap*, ns1__ArrayOfInt **, const char*, const char*);

#ifndef soap_read_PointerTons1__ArrayOfInt
#define soap_read_PointerTons1__ArrayOfInt(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons1__ArrayOfInt(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTons1__ArrayOfProductVersion
#define SOAP_TYPE_PointerTons1__ArrayOfProductVersion (58)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__ArrayOfProductVersion(struct soap*, ns1__ArrayOfProductVersion *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__ArrayOfProductVersion(struct soap*, const char *, int, ns1__ArrayOfProductVersion *const*, const char *);
SOAP_FMAC3 ns1__ArrayOfProductVersion ** SOAP_FMAC4 soap_in_PointerTons1__ArrayOfProductVersion(struct soap*, const char*, ns1__ArrayOfProductVersion **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__ArrayOfProductVersion(struct soap*, ns1__ArrayOfProductVersion *const*, const char*, const char*);

#ifndef soap_write_PointerTons1__ArrayOfProductVersion
#define soap_write_PointerTons1__ArrayOfProductVersion(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTons1__ArrayOfProductVersion(soap, data),0) || soap_put_PointerTons1__ArrayOfProductVersion(soap, data, "ns1:ArrayOfProductVersion", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns1__ArrayOfProductVersion ** SOAP_FMAC4 soap_get_PointerTons1__ArrayOfProductVersion(struct soap*, ns1__ArrayOfProductVersion **, const char*, const char*);

#ifndef soap_read_PointerTons1__ArrayOfProductVersion
#define soap_read_PointerTons1__ArrayOfProductVersion(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons1__ArrayOfProductVersion(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerToxsd__base64Binary
#define SOAP_TYPE_PointerToxsd__base64Binary (57)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToxsd__base64Binary(struct soap*, xsd__base64Binary *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToxsd__base64Binary(struct soap*, const char *, int, xsd__base64Binary *const*, const char *);
SOAP_FMAC3 xsd__base64Binary ** SOAP_FMAC4 soap_in_PointerToxsd__base64Binary(struct soap*, const char*, xsd__base64Binary **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToxsd__base64Binary(struct soap*, xsd__base64Binary *const*, const char*, const char*);

#ifndef soap_write_PointerToxsd__base64Binary
#define soap_write_PointerToxsd__base64Binary(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerToxsd__base64Binary(soap, data),0) || soap_put_PointerToxsd__base64Binary(soap, data, "xsd:base64Binary", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 xsd__base64Binary ** SOAP_FMAC4 soap_get_PointerToxsd__base64Binary(struct soap*, xsd__base64Binary **, const char*, const char*);

#ifndef soap_read_PointerToxsd__base64Binary
#define soap_read_PointerToxsd__base64Binary(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToxsd__base64Binary(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerToPointerTons1__DownLoadItem
#define SOAP_TYPE_PointerToPointerTons1__DownLoadItem (56)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToPointerTons1__DownLoadItem(struct soap*, ns1__DownLoadItem **const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToPointerTons1__DownLoadItem(struct soap*, const char *, int, ns1__DownLoadItem **const*, const char *);
SOAP_FMAC3 ns1__DownLoadItem *** SOAP_FMAC4 soap_in_PointerToPointerTons1__DownLoadItem(struct soap*, const char*, ns1__DownLoadItem ***, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToPointerTons1__DownLoadItem(struct soap*, ns1__DownLoadItem **const*, const char*, const char*);

#ifndef soap_write_PointerToPointerTons1__DownLoadItem
#define soap_write_PointerToPointerTons1__DownLoadItem(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerToPointerTons1__DownLoadItem(soap, data),0) || soap_put_PointerToPointerTons1__DownLoadItem(soap, data, "ns1:DownLoadItem", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns1__DownLoadItem *** SOAP_FMAC4 soap_get_PointerToPointerTons1__DownLoadItem(struct soap*, ns1__DownLoadItem ***, const char*, const char*);

#ifndef soap_read_PointerToPointerTons1__DownLoadItem
#define soap_read_PointerToPointerTons1__DownLoadItem(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToPointerTons1__DownLoadItem(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTons1__DownLoadItem
#define SOAP_TYPE_PointerTons1__DownLoadItem (55)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__DownLoadItem(struct soap*, ns1__DownLoadItem *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__DownLoadItem(struct soap*, const char *, int, ns1__DownLoadItem *const*, const char *);
SOAP_FMAC3 ns1__DownLoadItem ** SOAP_FMAC4 soap_in_PointerTons1__DownLoadItem(struct soap*, const char*, ns1__DownLoadItem **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__DownLoadItem(struct soap*, ns1__DownLoadItem *const*, const char*, const char*);

#ifndef soap_write_PointerTons1__DownLoadItem
#define soap_write_PointerTons1__DownLoadItem(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTons1__DownLoadItem(soap, data),0) || soap_put_PointerTons1__DownLoadItem(soap, data, "ns1:DownLoadItem", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns1__DownLoadItem ** SOAP_FMAC4 soap_get_PointerTons1__DownLoadItem(struct soap*, ns1__DownLoadItem **, const char*, const char*);

#ifndef soap_read_PointerTons1__DownLoadItem
#define soap_read_PointerTons1__DownLoadItem(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons1__DownLoadItem(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerToPointerTons1__VersionRevision
#define SOAP_TYPE_PointerToPointerTons1__VersionRevision (53)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToPointerTons1__VersionRevision(struct soap*, ns1__VersionRevision **const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToPointerTons1__VersionRevision(struct soap*, const char *, int, ns1__VersionRevision **const*, const char *);
SOAP_FMAC3 ns1__VersionRevision *** SOAP_FMAC4 soap_in_PointerToPointerTons1__VersionRevision(struct soap*, const char*, ns1__VersionRevision ***, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToPointerTons1__VersionRevision(struct soap*, ns1__VersionRevision **const*, const char*, const char*);

#ifndef soap_write_PointerToPointerTons1__VersionRevision
#define soap_write_PointerToPointerTons1__VersionRevision(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerToPointerTons1__VersionRevision(soap, data),0) || soap_put_PointerToPointerTons1__VersionRevision(soap, data, "ns1:VersionRevision", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns1__VersionRevision *** SOAP_FMAC4 soap_get_PointerToPointerTons1__VersionRevision(struct soap*, ns1__VersionRevision ***, const char*, const char*);

#ifndef soap_read_PointerToPointerTons1__VersionRevision
#define soap_read_PointerToPointerTons1__VersionRevision(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToPointerTons1__VersionRevision(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTons1__VersionRevision
#define SOAP_TYPE_PointerTons1__VersionRevision (52)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__VersionRevision(struct soap*, ns1__VersionRevision *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__VersionRevision(struct soap*, const char *, int, ns1__VersionRevision *const*, const char *);
SOAP_FMAC3 ns1__VersionRevision ** SOAP_FMAC4 soap_in_PointerTons1__VersionRevision(struct soap*, const char*, ns1__VersionRevision **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__VersionRevision(struct soap*, ns1__VersionRevision *const*, const char*, const char*);

#ifndef soap_write_PointerTons1__VersionRevision
#define soap_write_PointerTons1__VersionRevision(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTons1__VersionRevision(soap, data),0) || soap_put_PointerTons1__VersionRevision(soap, data, "ns1:VersionRevision", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns1__VersionRevision ** SOAP_FMAC4 soap_get_PointerTons1__VersionRevision(struct soap*, ns1__VersionRevision **, const char*, const char*);

#ifndef soap_read_PointerTons1__VersionRevision
#define soap_read_PointerTons1__VersionRevision(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons1__VersionRevision(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerToint
#define SOAP_TYPE_PointerToint (51)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToint(struct soap*, int *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToint(struct soap*, const char *, int, int *const*, const char *);
SOAP_FMAC3 int ** SOAP_FMAC4 soap_in_PointerToint(struct soap*, const char*, int **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToint(struct soap*, int *const*, const char*, const char*);

#ifndef soap_write_PointerToint
#define soap_write_PointerToint(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerToint(soap, data),0) || soap_put_PointerToint(soap, data, "int", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 int ** SOAP_FMAC4 soap_get_PointerToint(struct soap*, int **, const char*, const char*);

#ifndef soap_read_PointerToint
#define soap_read_PointerToint(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToint(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerToPointerTons1__ProductVersion
#define SOAP_TYPE_PointerToPointerTons1__ProductVersion (49)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToPointerTons1__ProductVersion(struct soap*, ns1__ProductVersion **const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToPointerTons1__ProductVersion(struct soap*, const char *, int, ns1__ProductVersion **const*, const char *);
SOAP_FMAC3 ns1__ProductVersion *** SOAP_FMAC4 soap_in_PointerToPointerTons1__ProductVersion(struct soap*, const char*, ns1__ProductVersion ***, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToPointerTons1__ProductVersion(struct soap*, ns1__ProductVersion **const*, const char*, const char*);

#ifndef soap_write_PointerToPointerTons1__ProductVersion
#define soap_write_PointerToPointerTons1__ProductVersion(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerToPointerTons1__ProductVersion(soap, data),0) || soap_put_PointerToPointerTons1__ProductVersion(soap, data, "ns1:ProductVersion", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns1__ProductVersion *** SOAP_FMAC4 soap_get_PointerToPointerTons1__ProductVersion(struct soap*, ns1__ProductVersion ***, const char*, const char*);

#ifndef soap_read_PointerToPointerTons1__ProductVersion
#define soap_read_PointerToPointerTons1__ProductVersion(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToPointerTons1__ProductVersion(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTons1__ProductVersion
#define SOAP_TYPE_PointerTons1__ProductVersion (48)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__ProductVersion(struct soap*, ns1__ProductVersion *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__ProductVersion(struct soap*, const char *, int, ns1__ProductVersion *const*, const char *);
SOAP_FMAC3 ns1__ProductVersion ** SOAP_FMAC4 soap_in_PointerTons1__ProductVersion(struct soap*, const char*, ns1__ProductVersion **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__ProductVersion(struct soap*, ns1__ProductVersion *const*, const char*, const char*);

#ifndef soap_write_PointerTons1__ProductVersion
#define soap_write_PointerTons1__ProductVersion(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTons1__ProductVersion(soap, data),0) || soap_put_PointerTons1__ProductVersion(soap, data, "ns1:ProductVersion", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns1__ProductVersion ** SOAP_FMAC4 soap_get_PointerTons1__ProductVersion(struct soap*, ns1__ProductVersion **, const char*, const char*);

#ifndef soap_read_PointerTons1__ProductVersion
#define soap_read_PointerTons1__ProductVersion(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons1__ProductVersion(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTounsignedByte
#define SOAP_TYPE_PointerTounsignedByte (10)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTounsignedByte(struct soap*, unsigned char *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTounsignedByte(struct soap*, const char *, int, unsigned char *const*, const char *);
SOAP_FMAC3 unsigned char ** SOAP_FMAC4 soap_in_PointerTounsignedByte(struct soap*, const char*, unsigned char **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTounsignedByte(struct soap*, unsigned char *const*, const char*, const char*);

#ifndef soap_write_PointerTounsignedByte
#define soap_write_PointerTounsignedByte(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTounsignedByte(soap, data),0) || soap_put_PointerTounsignedByte(soap, data, "unsignedByte", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 unsigned char ** SOAP_FMAC4 soap_get_PointerTounsignedByte(struct soap*, unsigned char **, const char*, const char*);

#ifndef soap_read_PointerTounsignedByte
#define soap_read_PointerTounsignedByte(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTounsignedByte(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__QName
#define SOAP_TYPE__QName (5)
#endif

#define soap_default__QName(soap, a) soap_default_string(soap, a)

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__QName(struct soap*, char *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__QName(struct soap*, const char*, int, char*const*, const char*);
SOAP_FMAC3 char * * SOAP_FMAC4 soap_in__QName(struct soap*, const char*, char **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__QName(struct soap*, char *const*, const char*, const char*);

#ifndef soap_write__QName
#define soap_write__QName(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__QName(soap, data),0) || soap_put__QName(soap, data, "byte", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 char ** SOAP_FMAC4 soap_get__QName(struct soap*, char **, const char*, const char*);

#ifndef soap_read__QName
#define soap_read__QName(soap, data) ( soap_begin_recv(soap) || !soap_get__QName(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_string
#define SOAP_TYPE_string (4)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_string(struct soap*, char **);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_string(struct soap*, char *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_string(struct soap*, const char*, int, char*const*, const char*);
SOAP_FMAC3 char * * SOAP_FMAC4 soap_in_string(struct soap*, const char*, char **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_string(struct soap*, char *const*, const char*, const char*);

#ifndef soap_write_string
#define soap_write_string(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_string(soap, data),0) || soap_put_string(soap, data, "byte", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 char ** SOAP_FMAC4 soap_get_string(struct soap*, char **, const char*, const char*);

#ifndef soap_read_string
#define soap_read_string(soap, data) ( soap_begin_recv(soap) || !soap_get_string(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#endif

/* End of soapH.h */
