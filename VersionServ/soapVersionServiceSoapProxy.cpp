/* soapVersionServiceSoapProxy.cpp
   Generated by gSOAP 2.8.19 from D:\Structure\VersionServTemp\VerServer.h

Copyright(C) 2000-2014, Robert van Engelen, Genivia Inc. All Rights Reserved.
The generated code is released under one of the following licenses:
GPL or Genivia's license for commercial use.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
*/

#include "soapVersionServiceSoapProxy.h"
#ifdef _SOAP_DEBUG_LOG_FILE_
#include "LogFile.h"
#include "XhCharString.h"
#endif

VersionServiceSoapProxy::VersionServiceSoapProxy()
{	VersionServiceSoapProxy_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
}

VersionServiceSoapProxy::VersionServiceSoapProxy(const struct soap &_soap) : soap(_soap)
{ }

VersionServiceSoapProxy::VersionServiceSoapProxy(const char *url)
{	VersionServiceSoapProxy_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
	soap_endpoint = url;
}

VersionServiceSoapProxy::VersionServiceSoapProxy(soap_mode iomode)
{	VersionServiceSoapProxy_init(iomode, iomode);
}

VersionServiceSoapProxy::VersionServiceSoapProxy(const char *url, soap_mode iomode)
{	VersionServiceSoapProxy_init(iomode, iomode);
	soap_endpoint = url;
}

VersionServiceSoapProxy::VersionServiceSoapProxy(soap_mode imode, soap_mode omode)
{	VersionServiceSoapProxy_init(imode, omode);
}

VersionServiceSoapProxy::~VersionServiceSoapProxy()
{ }

void VersionServiceSoapProxy::VersionServiceSoapProxy_init(soap_mode imode, soap_mode omode)
{	soap_imode(this, imode);
	soap_omode(this, omode);
	soap_endpoint = NULL;
	static const struct Namespace namespaces[] =
{
	{"SOAP-ENV", "http://www.w3.org/2003/05/soap-envelope", "http://schemas.xmlsoap.org/soap/envelope/", NULL},
	{"SOAP-ENC", "http://www.w3.org/2003/05/soap-encoding", "http://schemas.xmlsoap.org/soap/encoding/", NULL},
	{"xsi", "http://www.w3.org/2001/XMLSchema-instance", "http://www.w3.org/*/XMLSchema-instance", NULL},
	{"xsd", "http://www.w3.org/2001/XMLSchema", "http://www.w3.org/*/XMLSchema", NULL},
	{"ns1", "http://xerofox.com/webservices/", NULL, NULL},
	{NULL, NULL, NULL, NULL}
};
	soap_set_namespaces(this, namespaces);
}

void VersionServiceSoapProxy::destroy()
{	soap_destroy(this);
	soap_end(this);
}

void VersionServiceSoapProxy::reset()
{	destroy();
	soap_done(this);
	soap_initialize(this);
	VersionServiceSoapProxy_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
}

void VersionServiceSoapProxy::soap_noheader()
{	this->header = NULL;
}

const SOAP_ENV__Header *VersionServiceSoapProxy::soap_header()
{	return this->header;
}

const SOAP_ENV__Fault *VersionServiceSoapProxy::soap_fault()
{	return this->fault;
}

const char *VersionServiceSoapProxy::soap_fault_string()
{	return *soap_faultstring(this);
}

const char *VersionServiceSoapProxy::soap_fault_detail()
{	return *soap_faultdetail(this);
}

int VersionServiceSoapProxy::soap_close_socket()
{	return soap_closesock(this);
}

int VersionServiceSoapProxy::soap_force_close_socket()
{	return soap_force_closesock(this);
}

void VersionServiceSoapProxy::soap_print_fault(FILE *fd)
{	::soap_print_fault(this, fd);
}

#ifndef WITH_LEAN
#ifndef WITH_COMPAT
void VersionServiceSoapProxy::soap_stream_fault(std::ostream& os)
{	::soap_stream_fault(this, os);
}
#endif

char *VersionServiceSoapProxy::soap_sprint_fault(char *buf, size_t len)
{	return ::soap_sprint_fault(this, buf, len);
}
#endif

int VersionServiceSoapProxy::Login(const char *endpoint, const char *soap_action, _ns1__Login *ns1__Login, _ns1__LoginResponse &ns1__LoginResponse)
{	struct soap *soap = this;
	struct __ns1__Login soap_tmp___ns1__Login;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://xerofox.com/VersionService/VersionService.asmx";
	if (soap_action == NULL)
		soap_action = "http://xerofox.com/VersionService/Login";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__Login.ns1__Login = ns1__Login;
	soap_serializeheader(soap);
	soap_serialize___ns1__Login(soap, &soap_tmp___ns1__Login);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__Login(soap, &soap_tmp___ns1__Login, "-ns1:Login", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__Login(soap, &soap_tmp___ns1__Login, "-ns1:Login", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__LoginResponse)
		return soap_closesock(soap);
	ns1__LoginResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__LoginResponse.soap_get(soap, "ns1:LoginResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VersionServiceSoapProxy::LoginByByteArr(const char *endpoint, const char *soap_action, _ns1__LoginByByteArr *ns1__LoginByByteArr, _ns1__LoginByByteArrResponse &ns1__LoginByByteArrResponse)
{	struct soap *soap = this;
	struct __ns1__LoginByByteArr soap_tmp___ns1__LoginByByteArr;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://xerofox.com/VersionService/VersionService.asmx";
	if (soap_action == NULL)
		soap_action = "http://xerofox.com/VersionService/LoginByByteArr";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__LoginByByteArr.ns1__LoginByByteArr = ns1__LoginByByteArr;
	soap_serializeheader(soap);
	soap_serialize___ns1__LoginByByteArr(soap, &soap_tmp___ns1__LoginByByteArr);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__LoginByByteArr(soap, &soap_tmp___ns1__LoginByByteArr, "-ns1:LoginByByteArr", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	
#ifdef _SOAP_DEBUG_LOG_FILE_
	int code=0,codesum=0;
	code=soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action);
	codesum+=code;
	logerr.Log("soap_connect#%d",code);
	code=soap_envelope_begin_out(soap);
	codesum+=code;
	logerr.Log("soap_envelope_begin_out#%d",code);
	code=soap_putheader(soap);
	codesum+=code;
	logerr.Log("soap_putheader#%d",code);
	code=soap_body_begin_out(soap);
	codesum+=code;
	logerr.Log("soap_body_begin_out#%d",code);
	code=soap_put___ns1__LoginByByteArr(soap, &soap_tmp___ns1__LoginByByteArr, "-ns1:LoginByByteArr", NULL);
	codesum+=code;
	logerr.Log("soap_put___ns1__LoginByByteArr#%d",code);
	code=soap_body_end_out(soap);
	codesum+=code;
	logerr.Log("soap_body_end_out#%d",code);
	code=soap_envelope_end_out(soap);
	codesum+=code;
	logerr.Log("soap_envelope_end_out#%d",code);
	code=soap_end_send(soap);
	codesum+=code;
	logerr.Log("soap_end_send#%d",code);
	if(codesum)
	{
		logerr.Log("step4");
		return soap_closesock(soap);
	}
#else
	if(soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
		|| soap_envelope_begin_out(soap)
		|| soap_putheader(soap)
		|| soap_body_begin_out(soap)
		|| soap_put___ns1__LoginByByteArr(soap, &soap_tmp___ns1__LoginByByteArr, "-ns1:LoginByByteArr", NULL)
		|| soap_body_end_out(soap)
		|| soap_envelope_end_out(soap)
		|| soap_end_send(soap))
		return soap_closesock(soap);
#endif
	if (!&ns1__LoginByByteArrResponse)
		return soap_closesock(soap);
	ns1__LoginByByteArrResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__LoginByByteArrResponse.soap_get(soap, "ns1:LoginByByteArrResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VersionServiceSoapProxy::GetUpdateVerByCurVer(const char *endpoint, const char *soap_action, _ns1__GetUpdateVerByCurVer *ns1__GetUpdateVerByCurVer, _ns1__GetUpdateVerByCurVerResponse &ns1__GetUpdateVerByCurVerResponse)
{	struct soap *soap = this;
	struct __ns1__GetUpdateVerByCurVer soap_tmp___ns1__GetUpdateVerByCurVer;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://xerofox.com/VersionService/VersionService.asmx";
	if (soap_action == NULL)
		soap_action = "http://xerofox.com/VersionService/GetUpdateVerByCurVer";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__GetUpdateVerByCurVer.ns1__GetUpdateVerByCurVer = ns1__GetUpdateVerByCurVer;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetUpdateVerByCurVer(soap, &soap_tmp___ns1__GetUpdateVerByCurVer);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetUpdateVerByCurVer(soap, &soap_tmp___ns1__GetUpdateVerByCurVer, "-ns1:GetUpdateVerByCurVer", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetUpdateVerByCurVer(soap, &soap_tmp___ns1__GetUpdateVerByCurVer, "-ns1:GetUpdateVerByCurVer", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__GetUpdateVerByCurVerResponse)
		return soap_closesock(soap);
	ns1__GetUpdateVerByCurVerResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetUpdateVerByCurVerResponse.soap_get(soap, "ns1:GetUpdateVerByCurVerResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VersionServiceSoapProxy::SetRevisionReadFlag(const char *endpoint, const char *soap_action, _ns1__SetRevisionReadFlag *ns1__SetRevisionReadFlag, _ns1__SetRevisionReadFlagResponse &ns1__SetRevisionReadFlagResponse)
{	struct soap *soap = this;
	struct __ns1__SetRevisionReadFlag soap_tmp___ns1__SetRevisionReadFlag;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://xerofox.com/VersionService/VersionService.asmx";
	if (soap_action == NULL)
		soap_action = "http://xerofox.com/VersionService/SetRevisionReadFlag";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__SetRevisionReadFlag.ns1__SetRevisionReadFlag = ns1__SetRevisionReadFlag;
	soap_serializeheader(soap);
	soap_serialize___ns1__SetRevisionReadFlag(soap, &soap_tmp___ns1__SetRevisionReadFlag);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__SetRevisionReadFlag(soap, &soap_tmp___ns1__SetRevisionReadFlag, "-ns1:SetRevisionReadFlag", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__SetRevisionReadFlag(soap, &soap_tmp___ns1__SetRevisionReadFlag, "-ns1:SetRevisionReadFlag", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__SetRevisionReadFlagResponse)
		return soap_closesock(soap);
	ns1__SetRevisionReadFlagResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__SetRevisionReadFlagResponse.soap_get(soap, "ns1:SetRevisionReadFlagResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VersionServiceSoapProxy::CompareVersion(const char *endpoint, const char *soap_action, _ns1__CompareVersion *ns1__CompareVersion, _ns1__CompareVersionResponse &ns1__CompareVersionResponse)
{	struct soap *soap = this;
	struct __ns1__CompareVersion soap_tmp___ns1__CompareVersion;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://xerofox.com/VersionService/VersionService.asmx";
	if (soap_action == NULL)
		soap_action = "http://xerofox.com/VersionService/CompareVersion";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__CompareVersion.ns1__CompareVersion = ns1__CompareVersion;
	soap_serializeheader(soap);
	soap_serialize___ns1__CompareVersion(soap, &soap_tmp___ns1__CompareVersion);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__CompareVersion(soap, &soap_tmp___ns1__CompareVersion, "-ns1:CompareVersion", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__CompareVersion(soap, &soap_tmp___ns1__CompareVersion, "-ns1:CompareVersion", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__CompareVersionResponse)
		return soap_closesock(soap);
	ns1__CompareVersionResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__CompareVersionResponse.soap_get(soap, "ns1:CompareVersionResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VersionServiceSoapProxy::GetVersionReleaseNotes(const char *endpoint, const char *soap_action, _ns1__GetVersionReleaseNotes *ns1__GetVersionReleaseNotes, _ns1__GetVersionReleaseNotesResponse &ns1__GetVersionReleaseNotesResponse)
{	struct soap *soap = this;
	struct __ns1__GetVersionReleaseNotes soap_tmp___ns1__GetVersionReleaseNotes;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://xerofox.com/VersionService/VersionService.asmx";
	if (soap_action == NULL)
		soap_action = "http://xerofox.com/VersionService/GetVersionReleaseNotes";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__GetVersionReleaseNotes.ns1__GetVersionReleaseNotes = ns1__GetVersionReleaseNotes;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetVersionReleaseNotes(soap, &soap_tmp___ns1__GetVersionReleaseNotes);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetVersionReleaseNotes(soap, &soap_tmp___ns1__GetVersionReleaseNotes, "-ns1:GetVersionReleaseNotes", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetVersionReleaseNotes(soap, &soap_tmp___ns1__GetVersionReleaseNotes, "-ns1:GetVersionReleaseNotes", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__GetVersionReleaseNotesResponse)
		return soap_closesock(soap);
	ns1__GetVersionReleaseNotesResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetVersionReleaseNotesResponse.soap_get(soap, "ns1:GetVersionReleaseNotesResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VersionServiceSoapProxy::GetDogAccessHistory(const char *endpoint, const char *soap_action, _ns1__GetDogAccessHistory *ns1__GetDogAccessHistory, _ns1__GetDogAccessHistoryResponse &ns1__GetDogAccessHistoryResponse)
{	struct soap *soap = this;
	struct __ns1__GetDogAccessHistory soap_tmp___ns1__GetDogAccessHistory;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://xerofox.com/VersionService/VersionService.asmx";
	if (soap_action == NULL)
		soap_action = "http://xerofox.com/VersionService/GetDogAccessHistory";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__GetDogAccessHistory.ns1__GetDogAccessHistory = ns1__GetDogAccessHistory;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetDogAccessHistory(soap, &soap_tmp___ns1__GetDogAccessHistory);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetDogAccessHistory(soap, &soap_tmp___ns1__GetDogAccessHistory, "-ns1:GetDogAccessHistory", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetDogAccessHistory(soap, &soap_tmp___ns1__GetDogAccessHistory, "-ns1:GetDogAccessHistory", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__GetDogAccessHistoryResponse)
		return soap_closesock(soap);
	ns1__GetDogAccessHistoryResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetDogAccessHistoryResponse.soap_get(soap, "ns1:GetDogAccessHistoryResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VersionServiceSoapProxy::QueryDownLoadItemArrByProductId(const char *endpoint, const char *soap_action, _ns1__QueryDownLoadItemArrByProductId *ns1__QueryDownLoadItemArrByProductId, _ns1__QueryDownLoadItemArrByProductIdResponse &ns1__QueryDownLoadItemArrByProductIdResponse)
{	struct soap *soap = this;
	struct __ns1__QueryDownLoadItemArrByProductId soap_tmp___ns1__QueryDownLoadItemArrByProductId;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://xerofox.com/VersionService/VersionService.asmx";
	if (soap_action == NULL)
		soap_action = "http://xerofox.com/VersionService/QueryDownLoadItemArrByProductId";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__QueryDownLoadItemArrByProductId.ns1__QueryDownLoadItemArrByProductId = ns1__QueryDownLoadItemArrByProductId;
	soap_serializeheader(soap);
	soap_serialize___ns1__QueryDownLoadItemArrByProductId(soap, &soap_tmp___ns1__QueryDownLoadItemArrByProductId);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__QueryDownLoadItemArrByProductId(soap, &soap_tmp___ns1__QueryDownLoadItemArrByProductId, "-ns1:QueryDownLoadItemArrByProductId", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__QueryDownLoadItemArrByProductId(soap, &soap_tmp___ns1__QueryDownLoadItemArrByProductId, "-ns1:QueryDownLoadItemArrByProductId", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__QueryDownLoadItemArrByProductIdResponse)
		return soap_closesock(soap);
	ns1__QueryDownLoadItemArrByProductIdResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__QueryDownLoadItemArrByProductIdResponse.soap_get(soap, "ns1:QueryDownLoadItemArrByProductIdResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VersionServiceSoapProxy::GetFileHeader(const char *endpoint, const char *soap_action, _ns1__GetFileHeader *ns1__GetFileHeader, _ns1__GetFileHeaderResponse &ns1__GetFileHeaderResponse)
{	struct soap *soap = this;
	struct __ns1__GetFileHeader soap_tmp___ns1__GetFileHeader;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://xerofox.com/VersionService/VersionService.asmx";
	if (soap_action == NULL)
		soap_action = "http://xerofox.com/VersionService/GetFileHeader";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__GetFileHeader.ns1__GetFileHeader = ns1__GetFileHeader;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetFileHeader(soap, &soap_tmp___ns1__GetFileHeader);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetFileHeader(soap, &soap_tmp___ns1__GetFileHeader, "-ns1:GetFileHeader", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetFileHeader(soap, &soap_tmp___ns1__GetFileHeader, "-ns1:GetFileHeader", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__GetFileHeaderResponse)
		return soap_closesock(soap);
	ns1__GetFileHeaderResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetFileHeaderResponse.soap_get(soap, "ns1:GetFileHeaderResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VersionServiceSoapProxy::QueryObjects(const char *endpoint, const char *soap_action, _ns1__QueryObjects *ns1__QueryObjects, _ns1__QueryObjectsResponse &ns1__QueryObjectsResponse)
{	struct soap *soap = this;
	struct __ns1__QueryObjects soap_tmp___ns1__QueryObjects;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://xerofox.com/VersionService/VersionService.asmx";
	if (soap_action == NULL)
		soap_action = "http://xerofox.com/VersionService/QueryObjects";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__QueryObjects.ns1__QueryObjects = ns1__QueryObjects;
	soap_serializeheader(soap);
	soap_serialize___ns1__QueryObjects(soap, &soap_tmp___ns1__QueryObjects);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__QueryObjects(soap, &soap_tmp___ns1__QueryObjects, "-ns1:QueryObjects", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__QueryObjects(soap, &soap_tmp___ns1__QueryObjects, "-ns1:QueryObjects", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__QueryObjectsResponse)
		return soap_closesock(soap);
	ns1__QueryObjectsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__QueryObjectsResponse.soap_get(soap, "ns1:QueryObjectsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VersionServiceSoapProxy::DownloadObjects(const char *endpoint, const char *soap_action, _ns1__DownloadObjects *ns1__DownloadObjects, _ns1__DownloadObjectsResponse &ns1__DownloadObjectsResponse)
{	struct soap *soap = this;
	struct __ns1__DownloadObjects soap_tmp___ns1__DownloadObjects;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://xerofox.com/VersionService/VersionService.asmx";
	if (soap_action == NULL)
		soap_action = "http://xerofox.com/VersionService/DownloadObjects";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__DownloadObjects.ns1__DownloadObjects = ns1__DownloadObjects;
	soap_serializeheader(soap);
	soap_serialize___ns1__DownloadObjects(soap, &soap_tmp___ns1__DownloadObjects);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__DownloadObjects(soap, &soap_tmp___ns1__DownloadObjects, "-ns1:DownloadObjects", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__DownloadObjects(soap, &soap_tmp___ns1__DownloadObjects, "-ns1:DownloadObjects", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__DownloadObjectsResponse)
		return soap_closesock(soap);
	ns1__DownloadObjectsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__DownloadObjectsResponse.soap_get(soap, "ns1:DownloadObjectsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VersionServiceSoapProxy::SaveOrUpdateObjects(const char *endpoint, const char *soap_action, _ns1__SaveOrUpdateObjects *ns1__SaveOrUpdateObjects, _ns1__SaveOrUpdateObjectsResponse &ns1__SaveOrUpdateObjectsResponse)
{	struct soap *soap = this;
	struct __ns1__SaveOrUpdateObjects soap_tmp___ns1__SaveOrUpdateObjects;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://xerofox.com/VersionService/VersionService.asmx";
	if (soap_action == NULL)
		soap_action = "http://xerofox.com/VersionService/SaveOrUpdateObjects";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__SaveOrUpdateObjects.ns1__SaveOrUpdateObjects = ns1__SaveOrUpdateObjects;
	soap_serializeheader(soap);
	soap_serialize___ns1__SaveOrUpdateObjects(soap, &soap_tmp___ns1__SaveOrUpdateObjects);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__SaveOrUpdateObjects(soap, &soap_tmp___ns1__SaveOrUpdateObjects, "-ns1:SaveOrUpdateObjects", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__SaveOrUpdateObjects(soap, &soap_tmp___ns1__SaveOrUpdateObjects, "-ns1:SaveOrUpdateObjects", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__SaveOrUpdateObjectsResponse)
		return soap_closesock(soap);
	ns1__SaveOrUpdateObjectsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__SaveOrUpdateObjectsResponse.soap_get(soap, "ns1:SaveOrUpdateObjectsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VersionServiceSoapProxy::Login_(const char *endpoint, const char *soap_action, _ns1__Login *ns1__Login, _ns1__LoginResponse &ns1__LoginResponse)
{	struct soap *soap = this;
	struct __ns1__Login_ soap_tmp___ns1__Login_;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://xerofox.com/VersionService/VersionService.asmx";
	if (soap_action == NULL)
		soap_action = "http://xerofox.com/VersionService/Login";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__Login_.ns1__Login = ns1__Login;
	soap_serializeheader(soap);
	soap_serialize___ns1__Login_(soap, &soap_tmp___ns1__Login_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__Login_(soap, &soap_tmp___ns1__Login_, "-ns1:Login", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__Login_(soap, &soap_tmp___ns1__Login_, "-ns1:Login", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__LoginResponse)
		return soap_closesock(soap);
	ns1__LoginResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__LoginResponse.soap_get(soap, "ns1:LoginResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VersionServiceSoapProxy::LoginByByteArr_(const char *endpoint, const char *soap_action, _ns1__LoginByByteArr *ns1__LoginByByteArr, _ns1__LoginByByteArrResponse &ns1__LoginByByteArrResponse)
{	struct soap *soap = this;
	struct __ns1__LoginByByteArr_ soap_tmp___ns1__LoginByByteArr_;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://xerofox.com/VersionService/VersionService.asmx";
	if (soap_action == NULL)
		soap_action = "http://xerofox.com/VersionService/LoginByByteArr";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__LoginByByteArr_.ns1__LoginByByteArr = ns1__LoginByByteArr;
	soap_serializeheader(soap);
	soap_serialize___ns1__LoginByByteArr_(soap, &soap_tmp___ns1__LoginByByteArr_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__LoginByByteArr_(soap, &soap_tmp___ns1__LoginByByteArr_, "-ns1:LoginByByteArr", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__LoginByByteArr_(soap, &soap_tmp___ns1__LoginByByteArr_, "-ns1:LoginByByteArr", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__LoginByByteArrResponse)
		return soap_closesock(soap);
	ns1__LoginByByteArrResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__LoginByByteArrResponse.soap_get(soap, "ns1:LoginByByteArrResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VersionServiceSoapProxy::GetUpdateVerByCurVer_(const char *endpoint, const char *soap_action, _ns1__GetUpdateVerByCurVer *ns1__GetUpdateVerByCurVer, _ns1__GetUpdateVerByCurVerResponse &ns1__GetUpdateVerByCurVerResponse)
{	struct soap *soap = this;
	struct __ns1__GetUpdateVerByCurVer_ soap_tmp___ns1__GetUpdateVerByCurVer_;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://xerofox.com/VersionService/VersionService.asmx";
	if (soap_action == NULL)
		soap_action = "http://xerofox.com/VersionService/GetUpdateVerByCurVer";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__GetUpdateVerByCurVer_.ns1__GetUpdateVerByCurVer = ns1__GetUpdateVerByCurVer;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetUpdateVerByCurVer_(soap, &soap_tmp___ns1__GetUpdateVerByCurVer_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetUpdateVerByCurVer_(soap, &soap_tmp___ns1__GetUpdateVerByCurVer_, "-ns1:GetUpdateVerByCurVer", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetUpdateVerByCurVer_(soap, &soap_tmp___ns1__GetUpdateVerByCurVer_, "-ns1:GetUpdateVerByCurVer", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__GetUpdateVerByCurVerResponse)
		return soap_closesock(soap);
	ns1__GetUpdateVerByCurVerResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetUpdateVerByCurVerResponse.soap_get(soap, "ns1:GetUpdateVerByCurVerResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VersionServiceSoapProxy::SetRevisionReadFlag_(const char *endpoint, const char *soap_action, _ns1__SetRevisionReadFlag *ns1__SetRevisionReadFlag, _ns1__SetRevisionReadFlagResponse &ns1__SetRevisionReadFlagResponse)
{	struct soap *soap = this;
	struct __ns1__SetRevisionReadFlag_ soap_tmp___ns1__SetRevisionReadFlag_;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://xerofox.com/VersionService/VersionService.asmx";
	if (soap_action == NULL)
		soap_action = "http://xerofox.com/VersionService/SetRevisionReadFlag";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__SetRevisionReadFlag_.ns1__SetRevisionReadFlag = ns1__SetRevisionReadFlag;
	soap_serializeheader(soap);
	soap_serialize___ns1__SetRevisionReadFlag_(soap, &soap_tmp___ns1__SetRevisionReadFlag_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__SetRevisionReadFlag_(soap, &soap_tmp___ns1__SetRevisionReadFlag_, "-ns1:SetRevisionReadFlag", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__SetRevisionReadFlag_(soap, &soap_tmp___ns1__SetRevisionReadFlag_, "-ns1:SetRevisionReadFlag", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__SetRevisionReadFlagResponse)
		return soap_closesock(soap);
	ns1__SetRevisionReadFlagResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__SetRevisionReadFlagResponse.soap_get(soap, "ns1:SetRevisionReadFlagResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VersionServiceSoapProxy::CompareVersion_(const char *endpoint, const char *soap_action, _ns1__CompareVersion *ns1__CompareVersion, _ns1__CompareVersionResponse &ns1__CompareVersionResponse)
{	struct soap *soap = this;
	struct __ns1__CompareVersion_ soap_tmp___ns1__CompareVersion_;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://xerofox.com/VersionService/VersionService.asmx";
	if (soap_action == NULL)
		soap_action = "http://xerofox.com/VersionService/CompareVersion";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__CompareVersion_.ns1__CompareVersion = ns1__CompareVersion;
	soap_serializeheader(soap);
	soap_serialize___ns1__CompareVersion_(soap, &soap_tmp___ns1__CompareVersion_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__CompareVersion_(soap, &soap_tmp___ns1__CompareVersion_, "-ns1:CompareVersion", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__CompareVersion_(soap, &soap_tmp___ns1__CompareVersion_, "-ns1:CompareVersion", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__CompareVersionResponse)
		return soap_closesock(soap);
	ns1__CompareVersionResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__CompareVersionResponse.soap_get(soap, "ns1:CompareVersionResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VersionServiceSoapProxy::GetVersionReleaseNotes_(const char *endpoint, const char *soap_action, _ns1__GetVersionReleaseNotes *ns1__GetVersionReleaseNotes, _ns1__GetVersionReleaseNotesResponse &ns1__GetVersionReleaseNotesResponse)
{	struct soap *soap = this;
	struct __ns1__GetVersionReleaseNotes_ soap_tmp___ns1__GetVersionReleaseNotes_;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://xerofox.com/VersionService/VersionService.asmx";
	if (soap_action == NULL)
		soap_action = "http://xerofox.com/VersionService/GetVersionReleaseNotes";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__GetVersionReleaseNotes_.ns1__GetVersionReleaseNotes = ns1__GetVersionReleaseNotes;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetVersionReleaseNotes_(soap, &soap_tmp___ns1__GetVersionReleaseNotes_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetVersionReleaseNotes_(soap, &soap_tmp___ns1__GetVersionReleaseNotes_, "-ns1:GetVersionReleaseNotes", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetVersionReleaseNotes_(soap, &soap_tmp___ns1__GetVersionReleaseNotes_, "-ns1:GetVersionReleaseNotes", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__GetVersionReleaseNotesResponse)
		return soap_closesock(soap);
	ns1__GetVersionReleaseNotesResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetVersionReleaseNotesResponse.soap_get(soap, "ns1:GetVersionReleaseNotesResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VersionServiceSoapProxy::GetDogAccessHistory_(const char *endpoint, const char *soap_action, _ns1__GetDogAccessHistory *ns1__GetDogAccessHistory, _ns1__GetDogAccessHistoryResponse &ns1__GetDogAccessHistoryResponse)
{	struct soap *soap = this;
	struct __ns1__GetDogAccessHistory_ soap_tmp___ns1__GetDogAccessHistory_;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://xerofox.com/VersionService/VersionService.asmx";
	if (soap_action == NULL)
		soap_action = "http://xerofox.com/VersionService/GetDogAccessHistory";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__GetDogAccessHistory_.ns1__GetDogAccessHistory = ns1__GetDogAccessHistory;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetDogAccessHistory_(soap, &soap_tmp___ns1__GetDogAccessHistory_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetDogAccessHistory_(soap, &soap_tmp___ns1__GetDogAccessHistory_, "-ns1:GetDogAccessHistory", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetDogAccessHistory_(soap, &soap_tmp___ns1__GetDogAccessHistory_, "-ns1:GetDogAccessHistory", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__GetDogAccessHistoryResponse)
		return soap_closesock(soap);
	ns1__GetDogAccessHistoryResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetDogAccessHistoryResponse.soap_get(soap, "ns1:GetDogAccessHistoryResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VersionServiceSoapProxy::QueryDownLoadItemArrByProductId_(const char *endpoint, const char *soap_action, _ns1__QueryDownLoadItemArrByProductId *ns1__QueryDownLoadItemArrByProductId, _ns1__QueryDownLoadItemArrByProductIdResponse &ns1__QueryDownLoadItemArrByProductIdResponse)
{	struct soap *soap = this;
	struct __ns1__QueryDownLoadItemArrByProductId_ soap_tmp___ns1__QueryDownLoadItemArrByProductId_;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://xerofox.com/VersionService/VersionService.asmx";
	if (soap_action == NULL)
		soap_action = "http://xerofox.com/VersionService/QueryDownLoadItemArrByProductId";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__QueryDownLoadItemArrByProductId_.ns1__QueryDownLoadItemArrByProductId = ns1__QueryDownLoadItemArrByProductId;
	soap_serializeheader(soap);
	soap_serialize___ns1__QueryDownLoadItemArrByProductId_(soap, &soap_tmp___ns1__QueryDownLoadItemArrByProductId_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__QueryDownLoadItemArrByProductId_(soap, &soap_tmp___ns1__QueryDownLoadItemArrByProductId_, "-ns1:QueryDownLoadItemArrByProductId", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__QueryDownLoadItemArrByProductId_(soap, &soap_tmp___ns1__QueryDownLoadItemArrByProductId_, "-ns1:QueryDownLoadItemArrByProductId", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__QueryDownLoadItemArrByProductIdResponse)
		return soap_closesock(soap);
	ns1__QueryDownLoadItemArrByProductIdResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__QueryDownLoadItemArrByProductIdResponse.soap_get(soap, "ns1:QueryDownLoadItemArrByProductIdResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VersionServiceSoapProxy::GetFileHeader_(const char *endpoint, const char *soap_action, _ns1__GetFileHeader *ns1__GetFileHeader, _ns1__GetFileHeaderResponse &ns1__GetFileHeaderResponse)
{	struct soap *soap = this;
	struct __ns1__GetFileHeader_ soap_tmp___ns1__GetFileHeader_;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://xerofox.com/VersionService/VersionService.asmx";
	if (soap_action == NULL)
		soap_action = "http://xerofox.com/VersionService/GetFileHeader";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__GetFileHeader_.ns1__GetFileHeader = ns1__GetFileHeader;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetFileHeader_(soap, &soap_tmp___ns1__GetFileHeader_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetFileHeader_(soap, &soap_tmp___ns1__GetFileHeader_, "-ns1:GetFileHeader", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetFileHeader_(soap, &soap_tmp___ns1__GetFileHeader_, "-ns1:GetFileHeader", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__GetFileHeaderResponse)
		return soap_closesock(soap);
	ns1__GetFileHeaderResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetFileHeaderResponse.soap_get(soap, "ns1:GetFileHeaderResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VersionServiceSoapProxy::QueryObjects_(const char *endpoint, const char *soap_action, _ns1__QueryObjects *ns1__QueryObjects, _ns1__QueryObjectsResponse &ns1__QueryObjectsResponse)
{	struct soap *soap = this;
	struct __ns1__QueryObjects_ soap_tmp___ns1__QueryObjects_;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://xerofox.com/VersionService/VersionService.asmx";
	if (soap_action == NULL)
		soap_action = "http://xerofox.com/VersionService/QueryObjects";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__QueryObjects_.ns1__QueryObjects = ns1__QueryObjects;
	soap_serializeheader(soap);
	soap_serialize___ns1__QueryObjects_(soap, &soap_tmp___ns1__QueryObjects_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__QueryObjects_(soap, &soap_tmp___ns1__QueryObjects_, "-ns1:QueryObjects", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__QueryObjects_(soap, &soap_tmp___ns1__QueryObjects_, "-ns1:QueryObjects", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__QueryObjectsResponse)
		return soap_closesock(soap);
	ns1__QueryObjectsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__QueryObjectsResponse.soap_get(soap, "ns1:QueryObjectsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VersionServiceSoapProxy::DownloadObjects_(const char *endpoint, const char *soap_action, _ns1__DownloadObjects *ns1__DownloadObjects, _ns1__DownloadObjectsResponse &ns1__DownloadObjectsResponse)
{	struct soap *soap = this;
	struct __ns1__DownloadObjects_ soap_tmp___ns1__DownloadObjects_;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://xerofox.com/VersionService/VersionService.asmx";
	if (soap_action == NULL)
		soap_action = "http://xerofox.com/VersionService/DownloadObjects";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__DownloadObjects_.ns1__DownloadObjects = ns1__DownloadObjects;
	soap_serializeheader(soap);
	soap_serialize___ns1__DownloadObjects_(soap, &soap_tmp___ns1__DownloadObjects_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__DownloadObjects_(soap, &soap_tmp___ns1__DownloadObjects_, "-ns1:DownloadObjects", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__DownloadObjects_(soap, &soap_tmp___ns1__DownloadObjects_, "-ns1:DownloadObjects", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__DownloadObjectsResponse)
		return soap_closesock(soap);
	ns1__DownloadObjectsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__DownloadObjectsResponse.soap_get(soap, "ns1:DownloadObjectsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VersionServiceSoapProxy::SaveOrUpdateObjects_(const char *endpoint, const char *soap_action, _ns1__SaveOrUpdateObjects *ns1__SaveOrUpdateObjects, _ns1__SaveOrUpdateObjectsResponse &ns1__SaveOrUpdateObjectsResponse)
{	struct soap *soap = this;
	struct __ns1__SaveOrUpdateObjects_ soap_tmp___ns1__SaveOrUpdateObjects_;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://xerofox.com/VersionService/VersionService.asmx";
	if (soap_action == NULL)
		soap_action = "http://xerofox.com/VersionService/SaveOrUpdateObjects";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__SaveOrUpdateObjects_.ns1__SaveOrUpdateObjects = ns1__SaveOrUpdateObjects;
	soap_serializeheader(soap);
	soap_serialize___ns1__SaveOrUpdateObjects_(soap, &soap_tmp___ns1__SaveOrUpdateObjects_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__SaveOrUpdateObjects_(soap, &soap_tmp___ns1__SaveOrUpdateObjects_, "-ns1:SaveOrUpdateObjects", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__SaveOrUpdateObjects_(soap, &soap_tmp___ns1__SaveOrUpdateObjects_, "-ns1:SaveOrUpdateObjects", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__SaveOrUpdateObjectsResponse)
		return soap_closesock(soap);
	ns1__SaveOrUpdateObjectsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__SaveOrUpdateObjectsResponse.soap_get(soap, "ns1:SaveOrUpdateObjectsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
/* End of client proxy code */
